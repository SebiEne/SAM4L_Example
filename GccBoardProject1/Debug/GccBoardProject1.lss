
GccBoardProject1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000048b0  00000000  00000000  00010000  2**6
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  000048b0  000048b0  000148b0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     000009e0  20000000  000048b8  00020000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          00000090  200009e0  00005298  000209e0  2**2
                  ALLOC
  4 .stack        00001000  20000a70  00005328  000209e0  2**0
                  ALLOC
  5 .ARM.attributes 0000002a  00000000  00000000  000209e0  2**0
                  CONTENTS, READONLY
  6 .comment      00000059  00000000  00000000  00020a0a  2**0
                  CONTENTS, READONLY
  7 .debug_info   00011049  00000000  00000000  00020a63  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000024d9  00000000  00000000  00031aac  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00003928  00000000  00000000  00033f85  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 00000670  00000000  00000000  000378ad  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000005f0  00000000  00000000  00037f1d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  0002e48c  00000000  00000000  0003850d  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   0000be16  00000000  00000000  00066999  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    000e62d2  00000000  00000000  000727af  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  00001ad8  00000000  00000000  00158a84  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <exception_table>:
volatile bool g_interrupt_enabled = true;
#endif

void cpu_irq_enter_critical(void)
{
	if (cpu_irq_critical_section_counter == 0) {
       0:	70 1a 00 20 ad 13 00 00 a9 13 00 00 a9 13 00 00     p.. ............
		if (cpu_irq_is_enabled()) {
			cpu_irq_disable();
			cpu_irq_prev_interrupt_state = true;
		} else {
			/* Make sure the to save the prev state as false */
			cpu_irq_prev_interrupt_state = false;
      10:	a9 13 00 00 a9 13 00 00 a9 13 00 00 00 00 00 00     ................
	...
			cpu_irq_prev_interrupt_state = true;
      2c:	a9 13 00 00 a9 13 00 00 00 00 00 00 a9 13 00 00     ................
      3c:	a9 13 00 00 a9 13 00 00 a9 13 00 00 a9 13 00 00     ................
      4c:	a9 13 00 00 a9 13 00 00 a9 13 00 00 a9 13 00 00     ................
      5c:	a9 13 00 00 a9 13 00 00 a9 13 00 00 a9 13 00 00     ................
      6c:	a9 13 00 00 a9 13 00 00 a9 13 00 00 a9 13 00 00     ................
      7c:	a9 13 00 00 a9 13 00 00 a9 13 00 00 a9 13 00 00     ................
      8c:	a9 13 00 00 a9 13 00 00 a9 13 00 00 a9 13 00 00     ................
      9c:	a9 13 00 00 a9 13 00 00 a9 13 00 00 a9 13 00 00     ................
      ac:	a9 13 00 00 a9 13 00 00 a9 13 00 00 a9 13 00 00     ................
      bc:	a9 13 00 00 a9 13 00 00 a9 13 00 00 a9 13 00 00     ................
      cc:	a9 13 00 00 a9 13 00 00 a9 13 00 00 a9 13 00 00     ................
      dc:	a9 13 00 00 a9 13 00 00 a9 13 00 00 a9 13 00 00     ................
      ec:	a9 13 00 00 a9 13 00 00 a9 13 00 00 a9 13 00 00     ................
      fc:	a9 13 00 00 a9 13 00 00 a9 13 00 00 a9 13 00 00     ................
     10c:	a9 13 00 00 a9 13 00 00 a9 13 00 00 a9 13 00 00     ................
     11c:	a9 13 00 00 a9 13 00 00 a9 13 00 00 a9 13 00 00     ................
     12c:	81 14 00 00 a9 13 00 00 a9 13 00 00 a9 13 00 00     ................
     13c:	a9 13 00 00 a9 13 00 00 a9 13 00 00 a9 13 00 00     ................
     14c:	a9 13 00 00 a9 13 00 00 a9 13 00 00 a9 13 00 00     ................
     15c:	a9 13 00 00 a9 13 00 00 a9 13 00 00 a9 13 00 00     ................
     16c:	a9 13 00 00 a9 13 00 00 a9 13 00 00 a9 13 00 00     ................
     17c:	a9 13 00 00                                         ....

00000180 <__do_global_dtors_aux>:
     180:	b510      	push	{r4, lr}
     182:	4c05      	ldr	r4, [pc, #20]	; (198 <__do_global_dtors_aux+0x18>)
     184:	7823      	ldrb	r3, [r4, #0]
     186:	b933      	cbnz	r3, 196 <__do_global_dtors_aux+0x16>
     188:	4b04      	ldr	r3, [pc, #16]	; (19c <__do_global_dtors_aux+0x1c>)
     18a:	b113      	cbz	r3, 192 <__do_global_dtors_aux+0x12>
     18c:	4804      	ldr	r0, [pc, #16]	; (1a0 <__do_global_dtors_aux+0x20>)
     18e:	f3af 8000 	nop.w
     192:	2301      	movs	r3, #1
     194:	7023      	strb	r3, [r4, #0]
     196:	bd10      	pop	{r4, pc}
     198:	200009e0 	.word	0x200009e0
     19c:	00000000 	.word	0x00000000
     1a0:	000048b8 	.word	0x000048b8

000001a4 <frame_dummy>:
     1a4:	4b0c      	ldr	r3, [pc, #48]	; (1d8 <frame_dummy+0x34>)
     1a6:	b143      	cbz	r3, 1ba <frame_dummy+0x16>
     1a8:	480c      	ldr	r0, [pc, #48]	; (1dc <frame_dummy+0x38>)
     1aa:	490d      	ldr	r1, [pc, #52]	; (1e0 <frame_dummy+0x3c>)
     1ac:	b510      	push	{r4, lr}
     1ae:	f3af 8000 	nop.w
     1b2:	480c      	ldr	r0, [pc, #48]	; (1e4 <frame_dummy+0x40>)
     1b4:	6803      	ldr	r3, [r0, #0]
     1b6:	b923      	cbnz	r3, 1c2 <frame_dummy+0x1e>
     1b8:	bd10      	pop	{r4, pc}
     1ba:	480a      	ldr	r0, [pc, #40]	; (1e4 <frame_dummy+0x40>)
     1bc:	6803      	ldr	r3, [r0, #0]
     1be:	b933      	cbnz	r3, 1ce <frame_dummy+0x2a>
     1c0:	4770      	bx	lr
     1c2:	4b09      	ldr	r3, [pc, #36]	; (1e8 <frame_dummy+0x44>)
     1c4:	2b00      	cmp	r3, #0
     1c6:	d0f7      	beq.n	1b8 <frame_dummy+0x14>
     1c8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
     1cc:	4718      	bx	r3
     1ce:	4b06      	ldr	r3, [pc, #24]	; (1e8 <frame_dummy+0x44>)
     1d0:	2b00      	cmp	r3, #0
     1d2:	d0f5      	beq.n	1c0 <frame_dummy+0x1c>
     1d4:	4718      	bx	r3
     1d6:	bf00      	nop
     1d8:	00000000 	.word	0x00000000
     1dc:	000048b8 	.word	0x000048b8
     1e0:	200009e4 	.word	0x200009e4
     1e4:	000048b8 	.word	0x000048b8
     1e8:	00000000 	.word	0x00000000

000001ec <_read>:
int __attribute__((weak))
_read (int file, char * ptr, int len); // Remove GCC compiler warning

int __attribute__((weak))
_read (int file, char * ptr, int len)
{
     1ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	int nChars = 0;

	if (file != 0) {
     1f0:	b980      	cbnz	r0, 214 <_read+0x28>
     1f2:	460c      	mov	r4, r1
     1f4:	4690      	mov	r8, r2
		return -1;
	}

	for (; len > 0; --len) {
     1f6:	2a00      	cmp	r2, #0
     1f8:	dd0f      	ble.n	21a <_read+0x2e>
     1fa:	188f      	adds	r7, r1, r2
		ptr_get(stdio_base, ptr);
     1fc:	4e08      	ldr	r6, [pc, #32]	; (220 <_read+0x34>)
     1fe:	4d09      	ldr	r5, [pc, #36]	; (224 <_read+0x38>)
     200:	6830      	ldr	r0, [r6, #0]
     202:	4621      	mov	r1, r4
     204:	682b      	ldr	r3, [r5, #0]
     206:	4798      	blx	r3
		ptr++;
     208:	3401      	adds	r4, #1
	for (; len > 0; --len) {
     20a:	42bc      	cmp	r4, r7
     20c:	d1f8      	bne.n	200 <_read+0x14>
		nChars++;
	}
	return nChars;
}
     20e:	4640      	mov	r0, r8
     210:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		return -1;
     214:	f04f 38ff 	mov.w	r8, #4294967295
     218:	e7f9      	b.n	20e <_read+0x22>
	for (; len > 0; --len) {
     21a:	4680      	mov	r8, r0
     21c:	e7f7      	b.n	20e <_read+0x22>
     21e:	bf00      	nop
     220:	20000a44 	.word	0x20000a44
     224:	20000a3c 	.word	0x20000a3c

00000228 <usart_set_async_baudrate>:
 * \retval 1 Baud rate set point is out of range for the given input clock
 * frequency.
 */
uint32_t usart_set_async_baudrate(Usart *p_usart,
		uint32_t baudrate, uint32_t ul_mck)
{
     228:	b410      	push	{r4}
	uint32_t cd_fp;
	uint32_t cd;
	uint32_t fp;

	/* Calculate the receiver sampling divide of baudrate clock. */
	if (ul_mck >= HIGH_FRQ_SAMPLE_DIV * baudrate) {
     22a:	010b      	lsls	r3, r1, #4
     22c:	4293      	cmp	r3, r2
     22e:	d914      	bls.n	25a <usart_set_async_baudrate+0x32>
	} else {
		over = LOW_FRQ_SAMPLE_DIV;
	}

	/* Calculate clock divider according to the fraction calculated formula. */
	cd_fp = (8 * ul_mck + (over * baudrate) / 2) / (over * baudrate);
     230:	00c9      	lsls	r1, r1, #3
     232:	084b      	lsrs	r3, r1, #1
     234:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
     238:	fbb2 f2f1 	udiv	r2, r2, r1
	cd = cd_fp >> 3;
     23c:	08d3      	lsrs	r3, r2, #3
	fp = cd_fp & 0x07;
	if (cd < MIN_CD_VALUE || cd > MAX_CD_VALUE) {
     23e:	1e5c      	subs	r4, r3, #1
     240:	f64f 71fe 	movw	r1, #65534	; 0xfffe
     244:	428c      	cmp	r4, r1
     246:	d901      	bls.n	24c <usart_set_async_baudrate+0x24>
		return 1;
     248:	2001      	movs	r0, #1
     24a:	e017      	b.n	27c <usart_set_async_baudrate+0x54>
	}

	/* Configure the OVER bit in MR register. */
	if (over == 8) {
		p_usart->US_MR |= US_MR_OVER;
     24c:	6841      	ldr	r1, [r0, #4]
     24e:	f441 2100 	orr.w	r1, r1, #524288	; 0x80000
     252:	6041      	str	r1, [r0, #4]
     254:	e00c      	b.n	270 <usart_set_async_baudrate+0x48>
		return 1;
     256:	2001      	movs	r0, #1
     258:	e010      	b.n	27c <usart_set_async_baudrate+0x54>
	cd_fp = (8 * ul_mck + (over * baudrate) / 2) / (over * baudrate);
     25a:	0859      	lsrs	r1, r3, #1
     25c:	eb01 02c2 	add.w	r2, r1, r2, lsl #3
     260:	fbb2 f2f3 	udiv	r2, r2, r3
	cd = cd_fp >> 3;
     264:	08d3      	lsrs	r3, r2, #3
	if (cd < MIN_CD_VALUE || cd > MAX_CD_VALUE) {
     266:	1e5c      	subs	r4, r3, #1
     268:	f64f 71fe 	movw	r1, #65534	; 0xfffe
     26c:	428c      	cmp	r4, r1
     26e:	d8f2      	bhi.n	256 <usart_set_async_baudrate+0x2e>
	}

	/* Configure the baudrate generate register. */
	p_usart->US_BRGR = (cd << US_BRGR_CD_Pos) | (fp << US_BRGR_FP_Pos);
     270:	0412      	lsls	r2, r2, #16
     272:	f402 22e0 	and.w	r2, r2, #458752	; 0x70000
     276:	431a      	orrs	r2, r3
     278:	6202      	str	r2, [r0, #32]

	return 0;
     27a:	2000      	movs	r0, #0
}
     27c:	bc10      	pop	{r4}
     27e:	4770      	bx	lr

00000280 <usart_reset>:
 *
 * \param p_usart Pointer to a USART instance.
 */
void usart_disable_writeprotect(Usart *p_usart)
{
	p_usart->US_WPMR = US_WPMR_WPKEY_PASSWD;
     280:	4b0a      	ldr	r3, [pc, #40]	; (2ac <usart_reset+0x2c>)
     282:	f8c0 30e4 	str.w	r3, [r0, #228]	; 0xe4
	p_usart->US_MR = 0;
     286:	2300      	movs	r3, #0
     288:	6043      	str	r3, [r0, #4]
	p_usart->US_RTOR = 0;
     28a:	6243      	str	r3, [r0, #36]	; 0x24
	p_usart->US_TTGR = 0;
     28c:	6283      	str	r3, [r0, #40]	; 0x28
	p_usart->US_CR = US_CR_RSTTX | US_CR_TXDIS;
     28e:	2388      	movs	r3, #136	; 0x88
     290:	6003      	str	r3, [r0, #0]
	p_usart->US_CR = US_CR_RSTRX | US_CR_RXDIS;
     292:	2324      	movs	r3, #36	; 0x24
     294:	6003      	str	r3, [r0, #0]
	p_usart->US_CR = US_CR_RSTSTA;
     296:	f44f 7380 	mov.w	r3, #256	; 0x100
     29a:	6003      	str	r3, [r0, #0]
	p_usart->US_CR = US_CR_RTSDIS;
     29c:	f44f 2300 	mov.w	r3, #524288	; 0x80000
     2a0:	6003      	str	r3, [r0, #0]
	p_usart->US_CR = US_CR_DTRDIS;
     2a2:	f44f 3300 	mov.w	r3, #131072	; 0x20000
     2a6:	6003      	str	r3, [r0, #0]
     2a8:	4770      	bx	lr
     2aa:	bf00      	nop
     2ac:	55534100 	.word	0x55534100

000002b0 <usart_init_rs232>:
{
     2b0:	b570      	push	{r4, r5, r6, lr}
     2b2:	4605      	mov	r5, r0
     2b4:	460c      	mov	r4, r1
     2b6:	4616      	mov	r6, r2
	usart_reset(p_usart);
     2b8:	4b0f      	ldr	r3, [pc, #60]	; (2f8 <usart_init_rs232+0x48>)
     2ba:	4798      	blx	r3
	ul_reg_val = 0;
     2bc:	2200      	movs	r2, #0
     2be:	4b0f      	ldr	r3, [pc, #60]	; (2fc <usart_init_rs232+0x4c>)
     2c0:	601a      	str	r2, [r3, #0]
	if (!p_usart_opt || usart_set_async_baudrate(p_usart,
     2c2:	b1a4      	cbz	r4, 2ee <usart_init_rs232+0x3e>
     2c4:	4632      	mov	r2, r6
     2c6:	6821      	ldr	r1, [r4, #0]
     2c8:	4628      	mov	r0, r5
     2ca:	4b0d      	ldr	r3, [pc, #52]	; (300 <usart_init_rs232+0x50>)
     2cc:	4798      	blx	r3
     2ce:	4602      	mov	r2, r0
     2d0:	b978      	cbnz	r0, 2f2 <usart_init_rs232+0x42>
	ul_reg_val |= p_usart_opt->char_length | p_usart_opt->parity_type |
     2d2:	6863      	ldr	r3, [r4, #4]
     2d4:	68a1      	ldr	r1, [r4, #8]
     2d6:	430b      	orrs	r3, r1
     2d8:	6921      	ldr	r1, [r4, #16]
     2da:	430b      	orrs	r3, r1
			p_usart_opt->channel_mode | p_usart_opt->stop_bits;
     2dc:	68e1      	ldr	r1, [r4, #12]
     2de:	430b      	orrs	r3, r1
	ul_reg_val |= p_usart_opt->char_length | p_usart_opt->parity_type |
     2e0:	4906      	ldr	r1, [pc, #24]	; (2fc <usart_init_rs232+0x4c>)
     2e2:	600b      	str	r3, [r1, #0]
	p_usart->US_MR |= ul_reg_val;
     2e4:	6869      	ldr	r1, [r5, #4]
     2e6:	430b      	orrs	r3, r1
     2e8:	606b      	str	r3, [r5, #4]
}
     2ea:	4610      	mov	r0, r2
     2ec:	bd70      	pop	{r4, r5, r6, pc}
		return 1;
     2ee:	2201      	movs	r2, #1
     2f0:	e7fb      	b.n	2ea <usart_init_rs232+0x3a>
     2f2:	2201      	movs	r2, #1
     2f4:	e7f9      	b.n	2ea <usart_init_rs232+0x3a>
     2f6:	bf00      	nop
     2f8:	00000281 	.word	0x00000281
     2fc:	200009fc 	.word	0x200009fc
     300:	00000229 	.word	0x00000229

00000304 <usart_enable_tx>:
	p_usart->US_CR = US_CR_TXEN;
     304:	2340      	movs	r3, #64	; 0x40
     306:	6003      	str	r3, [r0, #0]
     308:	4770      	bx	lr

0000030a <usart_enable_rx>:
	p_usart->US_CR = US_CR_RXEN;
     30a:	2310      	movs	r3, #16
     30c:	6003      	str	r3, [r0, #0]
     30e:	4770      	bx	lr

00000310 <usart_write>:
	if (!(p_usart->US_CSR & US_CSR_TXRDY)) {
     310:	6943      	ldr	r3, [r0, #20]
     312:	f013 0f02 	tst.w	r3, #2
	p_usart->US_THR = US_THR_TXCHR(c);
     316:	bf1d      	ittte	ne
     318:	f3c1 0108 	ubfxne	r1, r1, #0, #9
     31c:	61c1      	strne	r1, [r0, #28]
	return 0;
     31e:	2000      	movne	r0, #0
		return 1;
     320:	2001      	moveq	r0, #1
}
     322:	4770      	bx	lr

00000324 <usart_read>:
	if (!(p_usart->US_CSR & US_CSR_RXRDY)) {
     324:	6943      	ldr	r3, [r0, #20]
     326:	f013 0f01 	tst.w	r3, #1
     32a:	d005      	beq.n	338 <usart_read+0x14>
	*c = p_usart->US_RHR & US_RHR_RXCHR_Msk;
     32c:	6983      	ldr	r3, [r0, #24]
     32e:	f3c3 0308 	ubfx	r3, r3, #0, #9
     332:	600b      	str	r3, [r1, #0]
	return 0;
     334:	2000      	movs	r0, #0
     336:	4770      	bx	lr
		return 1;
     338:	2001      	movs	r0, #1
}
     33a:	4770      	bx	lr

0000033c <_write>:
int __attribute__((weak))
_write (int file, const char *ptr, int len)
{
	int nChars = 0;

	if ((file != 1) && (file != 2) && (file!=3)) {
     33c:	3801      	subs	r0, #1
     33e:	2802      	cmp	r0, #2
     340:	d815      	bhi.n	36e <_write+0x32>
{
     342:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
     346:	460e      	mov	r6, r1
     348:	4614      	mov	r4, r2
		return -1;
	}

	for (; len != 0; --len) {
     34a:	b19a      	cbz	r2, 374 <_write+0x38>
     34c:	460d      	mov	r5, r1
		if (ptr_put(stdio_base, *ptr++) < 0) {
     34e:	f8df 8038 	ldr.w	r8, [pc, #56]	; 388 <_write+0x4c>
     352:	4f0c      	ldr	r7, [pc, #48]	; (384 <_write+0x48>)
     354:	f8d8 0000 	ldr.w	r0, [r8]
     358:	f815 1b01 	ldrb.w	r1, [r5], #1
     35c:	683b      	ldr	r3, [r7, #0]
     35e:	4798      	blx	r3
     360:	2800      	cmp	r0, #0
     362:	db0a      	blt.n	37a <_write+0x3e>
     364:	1ba8      	subs	r0, r5, r6
	for (; len != 0; --len) {
     366:	3c01      	subs	r4, #1
     368:	d1f4      	bne.n	354 <_write+0x18>
     36a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		return -1;
     36e:	f04f 30ff 	mov.w	r0, #4294967295
     372:	4770      	bx	lr
	for (; len != 0; --len) {
     374:	4610      	mov	r0, r2
     376:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			return -1;
     37a:	f04f 30ff 	mov.w	r0, #4294967295
		}
		++nChars;
	}
	return nChars;
}
     37e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
     382:	bf00      	nop
     384:	20000a40 	.word	0x20000a40
     388:	20000a44 	.word	0x20000a44

0000038c <tc_init>:
 */
void tc_init(
		Tc *p_tc,
		uint32_t ul_channel,
		uint32_t ul_mode)
{
     38c:	b410      	push	{r4}

	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
     38e:	0189      	lsls	r1, r1, #6
     390:	1843      	adds	r3, r0, r1

	/*  Disable TC clock. */
	tc_channel->TC_CCR = TC_CCR_CLKDIS;
     392:	2402      	movs	r4, #2
     394:	5044      	str	r4, [r0, r1]

	/*  Disable interrupts. */
	tc_channel->TC_IDR = 0xFFFFFFFF;
     396:	f04f 31ff 	mov.w	r1, #4294967295
     39a:	6299      	str	r1, [r3, #40]	; 0x28

	/*  Clear status register. */
	tc_channel->TC_SR;
     39c:	6a19      	ldr	r1, [r3, #32]

	/*  Set mode. */
	tc_channel->TC_CMR = ul_mode;
     39e:	605a      	str	r2, [r3, #4]
}
     3a0:	bc10      	pop	{r4}
     3a2:	4770      	bx	lr

000003a4 <tc_start>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_CCR = TC_CCR_CLKEN | TC_CCR_SWTRG;
     3a4:	0189      	lsls	r1, r1, #6
     3a6:	2305      	movs	r3, #5
     3a8:	5043      	str	r3, [r0, r1]
     3aa:	4770      	bx	lr

000003ac <tc_read_ra>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	return p_tc->TC_CHANNEL[ul_channel].TC_RA;
     3ac:	eb00 1181 	add.w	r1, r0, r1, lsl #6
     3b0:	6948      	ldr	r0, [r1, #20]
}
     3b2:	4770      	bx	lr

000003b4 <tc_read_rb>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	return p_tc->TC_CHANNEL[ul_channel].TC_RB;
     3b4:	eb00 1181 	add.w	r1, r0, r1, lsl #6
     3b8:	6988      	ldr	r0, [r1, #24]
}
     3ba:	4770      	bx	lr

000003bc <tc_write_ra>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_RA = ul_value;
     3bc:	eb00 1181 	add.w	r1, r0, r1, lsl #6
     3c0:	614a      	str	r2, [r1, #20]
     3c2:	4770      	bx	lr

000003c4 <tc_write_rc>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));

	p_tc->TC_CHANNEL[ul_channel].TC_RC = ul_value;
     3c4:	eb00 1181 	add.w	r1, r0, r1, lsl #6
     3c8:	61ca      	str	r2, [r1, #28]
     3ca:	4770      	bx	lr

000003cc <tc_enable_interrupt>:

	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
     3cc:	eb00 1181 	add.w	r1, r0, r1, lsl #6
	tc_channel->TC_IER = ul_sources;
     3d0:	624a      	str	r2, [r1, #36]	; 0x24
     3d2:	4770      	bx	lr

000003d4 <tc_get_status>:
	/* Validate inputs. */
	Assert(p_tc);
	Assert(ul_channel <
			(sizeof(p_tc->TC_CHANNEL) / sizeof(p_tc->TC_CHANNEL[0])));
			
	tc_channel = p_tc->TC_CHANNEL + ul_channel;
     3d4:	eb00 1181 	add.w	r1, r0, r1, lsl #6
	return tc_channel->TC_SR;
     3d8:	6a08      	ldr	r0, [r1, #32]
}
     3da:	4770      	bx	lr

000003dc <usart_serial_getchar>:
 * \param p_usart   Base address of the USART instance.
 * \param data   Data to read
 *
 */
static inline void usart_serial_getchar(usart_if p_usart, uint8_t *data)
{
     3dc:	b5f0      	push	{r4, r5, r6, r7, lr}
     3de:	b083      	sub	sp, #12
     3e0:	4604      	mov	r4, r0
     3e2:	460e      	mov	r6, r1
	uint32_t val = 0;
     3e4:	2300      	movs	r3, #0
     3e6:	9301      	str	r3, [sp, #4]
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
#else
# ifdef USART0
	if (USART0 == p_usart) {
     3e8:	4b1a      	ldr	r3, [pc, #104]	; (454 <usart_serial_getchar+0x78>)
     3ea:	4298      	cmp	r0, r3
     3ec:	d00a      	beq.n	404 <usart_serial_getchar+0x28>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
# endif
# ifdef USART1
	if (USART1 == p_usart) {
     3ee:	4b1a      	ldr	r3, [pc, #104]	; (458 <usart_serial_getchar+0x7c>)
     3f0:	4298      	cmp	r0, r3
     3f2:	d011      	beq.n	418 <usart_serial_getchar+0x3c>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
# endif
# ifdef USART2
	if (USART2 == p_usart) {
     3f4:	4b19      	ldr	r3, [pc, #100]	; (45c <usart_serial_getchar+0x80>)
     3f6:	4298      	cmp	r0, r3
     3f8:	d018      	beq.n	42c <usart_serial_getchar+0x50>
		while (usart_read(p_usart, &val));
		*data = (uint8_t)(val & 0xFF);
	}
# endif
# ifdef USART3
	if (USART3 == p_usart) {
     3fa:	4b19      	ldr	r3, [pc, #100]	; (460 <usart_serial_getchar+0x84>)
     3fc:	429c      	cmp	r4, r3
     3fe:	d01f      	beq.n	440 <usart_serial_getchar+0x64>
		*data = (uint8_t)(val & 0xFF);
	}
# endif
#endif /* ifdef USART */

}
     400:	b003      	add	sp, #12
     402:	bdf0      	pop	{r4, r5, r6, r7, pc}
		while (usart_read(p_usart, &val));
     404:	461f      	mov	r7, r3
     406:	4d17      	ldr	r5, [pc, #92]	; (464 <usart_serial_getchar+0x88>)
     408:	a901      	add	r1, sp, #4
     40a:	4638      	mov	r0, r7
     40c:	47a8      	blx	r5
     40e:	2800      	cmp	r0, #0
     410:	d1fa      	bne.n	408 <usart_serial_getchar+0x2c>
		*data = (uint8_t)(val & 0xFF);
     412:	9b01      	ldr	r3, [sp, #4]
     414:	7033      	strb	r3, [r6, #0]
     416:	e7f0      	b.n	3fa <usart_serial_getchar+0x1e>
		while (usart_read(p_usart, &val));
     418:	461d      	mov	r5, r3
     41a:	4c12      	ldr	r4, [pc, #72]	; (464 <usart_serial_getchar+0x88>)
     41c:	a901      	add	r1, sp, #4
     41e:	4628      	mov	r0, r5
     420:	47a0      	blx	r4
     422:	2800      	cmp	r0, #0
     424:	d1fa      	bne.n	41c <usart_serial_getchar+0x40>
		*data = (uint8_t)(val & 0xFF);
     426:	9b01      	ldr	r3, [sp, #4]
     428:	7033      	strb	r3, [r6, #0]
     42a:	e7e9      	b.n	400 <usart_serial_getchar+0x24>
		while (usart_read(p_usart, &val));
     42c:	461d      	mov	r5, r3
     42e:	4c0d      	ldr	r4, [pc, #52]	; (464 <usart_serial_getchar+0x88>)
     430:	a901      	add	r1, sp, #4
     432:	4628      	mov	r0, r5
     434:	47a0      	blx	r4
     436:	2800      	cmp	r0, #0
     438:	d1fa      	bne.n	430 <usart_serial_getchar+0x54>
		*data = (uint8_t)(val & 0xFF);
     43a:	9b01      	ldr	r3, [sp, #4]
     43c:	7033      	strb	r3, [r6, #0]
     43e:	e7df      	b.n	400 <usart_serial_getchar+0x24>
		while (usart_read(p_usart, &val));
     440:	461d      	mov	r5, r3
     442:	4c08      	ldr	r4, [pc, #32]	; (464 <usart_serial_getchar+0x88>)
     444:	a901      	add	r1, sp, #4
     446:	4628      	mov	r0, r5
     448:	47a0      	blx	r4
     44a:	2800      	cmp	r0, #0
     44c:	d1fa      	bne.n	444 <usart_serial_getchar+0x68>
		*data = (uint8_t)(val & 0xFF);
     44e:	9b01      	ldr	r3, [sp, #4]
     450:	7033      	strb	r3, [r6, #0]
}
     452:	e7d5      	b.n	400 <usart_serial_getchar+0x24>
     454:	40024000 	.word	0x40024000
     458:	40028000 	.word	0x40028000
     45c:	4002c000 	.word	0x4002c000
     460:	40030000 	.word	0x40030000
     464:	00000325 	.word	0x00000325

00000468 <usart_serial_putchar>:
{
     468:	b570      	push	{r4, r5, r6, lr}
     46a:	460c      	mov	r4, r1
	if (USART0 == p_usart) {
     46c:	4b18      	ldr	r3, [pc, #96]	; (4d0 <usart_serial_putchar+0x68>)
     46e:	4298      	cmp	r0, r3
     470:	d00a      	beq.n	488 <usart_serial_putchar+0x20>
	if (USART1 == p_usart) {
     472:	4b18      	ldr	r3, [pc, #96]	; (4d4 <usart_serial_putchar+0x6c>)
     474:	4298      	cmp	r0, r3
     476:	d010      	beq.n	49a <usart_serial_putchar+0x32>
	if (USART2 == p_usart) {
     478:	4b17      	ldr	r3, [pc, #92]	; (4d8 <usart_serial_putchar+0x70>)
     47a:	4298      	cmp	r0, r3
     47c:	d016      	beq.n	4ac <usart_serial_putchar+0x44>
	if (USART3 == p_usart) {
     47e:	4b17      	ldr	r3, [pc, #92]	; (4dc <usart_serial_putchar+0x74>)
     480:	4298      	cmp	r0, r3
     482:	d01c      	beq.n	4be <usart_serial_putchar+0x56>
	return 0;
     484:	2000      	movs	r0, #0
}
     486:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
     488:	461e      	mov	r6, r3
     48a:	4d15      	ldr	r5, [pc, #84]	; (4e0 <usart_serial_putchar+0x78>)
     48c:	4621      	mov	r1, r4
     48e:	4630      	mov	r0, r6
     490:	47a8      	blx	r5
     492:	2800      	cmp	r0, #0
     494:	d1fa      	bne.n	48c <usart_serial_putchar+0x24>
		return 1;
     496:	2001      	movs	r0, #1
     498:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
     49a:	461e      	mov	r6, r3
     49c:	4d10      	ldr	r5, [pc, #64]	; (4e0 <usart_serial_putchar+0x78>)
     49e:	4621      	mov	r1, r4
     4a0:	4630      	mov	r0, r6
     4a2:	47a8      	blx	r5
     4a4:	2800      	cmp	r0, #0
     4a6:	d1fa      	bne.n	49e <usart_serial_putchar+0x36>
		return 1;
     4a8:	2001      	movs	r0, #1
     4aa:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
     4ac:	461e      	mov	r6, r3
     4ae:	4d0c      	ldr	r5, [pc, #48]	; (4e0 <usart_serial_putchar+0x78>)
     4b0:	4621      	mov	r1, r4
     4b2:	4630      	mov	r0, r6
     4b4:	47a8      	blx	r5
     4b6:	2800      	cmp	r0, #0
     4b8:	d1fa      	bne.n	4b0 <usart_serial_putchar+0x48>
		return 1;
     4ba:	2001      	movs	r0, #1
     4bc:	bd70      	pop	{r4, r5, r6, pc}
		while (usart_write(p_usart, c)!=0);
     4be:	461e      	mov	r6, r3
     4c0:	4d07      	ldr	r5, [pc, #28]	; (4e0 <usart_serial_putchar+0x78>)
     4c2:	4621      	mov	r1, r4
     4c4:	4630      	mov	r0, r6
     4c6:	47a8      	blx	r5
     4c8:	2800      	cmp	r0, #0
     4ca:	d1fa      	bne.n	4c2 <usart_serial_putchar+0x5a>
		return 1;
     4cc:	2001      	movs	r0, #1
     4ce:	bd70      	pop	{r4, r5, r6, pc}
     4d0:	40024000 	.word	0x40024000
     4d4:	40028000 	.word	0x40028000
     4d8:	4002c000 	.word	0x4002c000
     4dc:	40030000 	.word	0x40030000
     4e0:	00000311 	.word	0x00000311

000004e4 <uart_init>:
 *  Author: Sebastian
 */ 
 #include "asf.h"

 void uart_init(void)
 {
     4e4:	b570      	push	{r4, r5, r6, lr}
     4e6:	b086      	sub	sp, #24
 * \param opt         Options needed to set up RS232 communication (see \ref usart_options_t).
 *
 */
static inline void stdio_serial_init(volatile void *usart, const usart_serial_options_t *opt)
{
	stdio_base = (void *)usart;
     4e8:	4c18      	ldr	r4, [pc, #96]	; (54c <uart_init+0x68>)
     4ea:	4b19      	ldr	r3, [pc, #100]	; (550 <uart_init+0x6c>)
     4ec:	601c      	str	r4, [r3, #0]
	ptr_put = (int (*)(void volatile*,char))&usart_serial_putchar;
     4ee:	4a19      	ldr	r2, [pc, #100]	; (554 <uart_init+0x70>)
     4f0:	4b19      	ldr	r3, [pc, #100]	; (558 <uart_init+0x74>)
     4f2:	601a      	str	r2, [r3, #0]
	ptr_get = (void (*)(void volatile*,char*))&usart_serial_getchar;
     4f4:	4a19      	ldr	r2, [pc, #100]	; (55c <uart_init+0x78>)
     4f6:	4b1a      	ldr	r3, [pc, #104]	; (560 <uart_init+0x7c>)
     4f8:	601a      	str	r2, [r3, #0]
	usart_settings.baudrate = opt->baudrate;
     4fa:	f44f 5316 	mov.w	r3, #9600	; 0x2580
     4fe:	9300      	str	r3, [sp, #0]
	usart_settings.char_length = opt->charlength;
     500:	23c0      	movs	r3, #192	; 0xc0
     502:	9301      	str	r3, [sp, #4]
	usart_settings.parity_type = opt->paritytype;
     504:	f44f 6300 	mov.w	r3, #2048	; 0x800
     508:	9302      	str	r3, [sp, #8]
	usart_settings.stop_bits= opt->stopbits;
     50a:	2500      	movs	r5, #0
     50c:	9503      	str	r5, [sp, #12]
	usart_settings.channel_mode= US_MR_CHMODE_NORMAL;
     50e:	9504      	str	r5, [sp, #16]
		sysclk_enable_peripheral_clock(p_usart);
     510:	4620      	mov	r0, r4
     512:	4b14      	ldr	r3, [pc, #80]	; (564 <uart_init+0x80>)
     514:	4798      	blx	r3
		usart_init_rs232(p_usart, &usart_settings,
     516:	4620      	mov	r0, r4
     518:	4b13      	ldr	r3, [pc, #76]	; (568 <uart_init+0x84>)
     51a:	4798      	blx	r3
     51c:	4602      	mov	r2, r0
     51e:	4669      	mov	r1, sp
     520:	4620      	mov	r0, r4
     522:	4b12      	ldr	r3, [pc, #72]	; (56c <uart_init+0x88>)
     524:	4798      	blx	r3
		usart_enable_tx(p_usart);
     526:	4620      	mov	r0, r4
     528:	4b11      	ldr	r3, [pc, #68]	; (570 <uart_init+0x8c>)
     52a:	4798      	blx	r3
		usart_enable_rx(p_usart);
     52c:	4620      	mov	r0, r4
     52e:	4b11      	ldr	r3, [pc, #68]	; (574 <uart_init+0x90>)
     530:	4798      	blx	r3
	fdevopen((int (*)(char, FILE*))(_write),(int (*)(FILE*))(_read));
#  endif
#  if UC3 || SAM
	// For AVR32 and SAM GCC
	// Specify that stdout and stdin should not be buffered.
	setbuf(stdout, NULL);
     532:	4e11      	ldr	r6, [pc, #68]	; (578 <uart_init+0x94>)
     534:	6833      	ldr	r3, [r6, #0]
     536:	4629      	mov	r1, r5
     538:	6898      	ldr	r0, [r3, #8]
     53a:	4c10      	ldr	r4, [pc, #64]	; (57c <uart_init+0x98>)
     53c:	47a0      	blx	r4
	setbuf(stdin, NULL);
     53e:	6833      	ldr	r3, [r6, #0]
     540:	4629      	mov	r1, r5
     542:	6858      	ldr	r0, [r3, #4]
     544:	47a0      	blx	r4
	//usart_enable_tx(USART_SERIAL);
	//usart_enable_rx(USART_SERIAL);

	/* Configure console UART. */
	stdio_serial_init(USART_SERIAL, &usart_console_settings);
     546:	b006      	add	sp, #24
     548:	bd70      	pop	{r4, r5, r6, pc}
     54a:	bf00      	nop
     54c:	40028000 	.word	0x40028000
     550:	20000a44 	.word	0x20000a44
     554:	00000469 	.word	0x00000469
     558:	20000a40 	.word	0x20000a40
     55c:	000003dd 	.word	0x000003dd
     560:	20000a3c 	.word	0x20000a3c
     564:	00000949 	.word	0x00000949
     568:	00000799 	.word	0x00000799
     56c:	000002b1 	.word	0x000002b1
     570:	00000305 	.word	0x00000305
     574:	0000030b 	.word	0x0000030b
     578:	20000030 	.word	0x20000030
     57c:	00001765 	.word	0x00001765

00000580 <sysclk_priv_enable_module>:
 * \param bus_id Bus index, given by the \c PM_CLK_GRP_xxx definitions.
 * \param module_index Index of the module to be enabled. This is the
 * bit number in the corresponding xxxMASK register.
 */
void sysclk_priv_enable_module(uint32_t bus_id, uint32_t module_index)
{
     580:	b470      	push	{r4, r5, r6}
     582:	b083      	sub	sp, #12
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) );
     584:	f3ef 8310 	mrs	r3, PRIMASK
static volatile uint32_t cpu_irq_critical_section_counter;
static volatile bool     cpu_irq_prev_interrupt_state;

static inline irqflags_t cpu_irq_save(void)
{
	volatile irqflags_t flags = cpu_irq_is_enabled();
     588:	fab3 f383 	clz	r3, r3
     58c:	095b      	lsrs	r3, r3, #5
     58e:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
     590:	b672      	cpsid	i
    This function ensures the apparent order of the explicit memory operations before
    and after the instruction, without ensuring their completion.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __DMB(void)
{
  __ASM volatile ("dmb");
     592:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
     596:	2200      	movs	r2, #0
     598:	4b0e      	ldr	r3, [pc, #56]	; (5d4 <sysclk_priv_enable_module+0x54>)
     59a:	701a      	strb	r2, [r3, #0]
	return flags;
     59c:	9d01      	ldr	r5, [sp, #4]
	uint32_t   mask;

	flags = cpu_irq_save();

	/* Enable the clock */
	mask = *(&PM->PM_CPUMASK + bus_id);
     59e:	0083      	lsls	r3, r0, #2
     5a0:	4c0d      	ldr	r4, [pc, #52]	; (5d8 <sysclk_priv_enable_module+0x58>)
     5a2:	f854 6020 	ldr.w	r6, [r4, r0, lsl #2]
	mask |= 1U << module_index;
     5a6:	2201      	movs	r2, #1
     5a8:	fa02 f101 	lsl.w	r1, r2, r1
     5ac:	4331      	orrs	r1, r6
	PM->PM_UNLOCK = PM_UNLOCK_KEY(0xAAu) |
		BPM_UNLOCK_ADDR(((uint32_t)&PM->PM_CPUMASK - (uint32_t)PM) + (4 * bus_id));
     5ae:	3320      	adds	r3, #32
     5b0:	f403 737f 	and.w	r3, r3, #1020	; 0x3fc
	PM->PM_UNLOCK = PM_UNLOCK_KEY(0xAAu) |
     5b4:	f043 432a 	orr.w	r3, r3, #2852126720	; 0xaa000000
     5b8:	4a08      	ldr	r2, [pc, #32]	; (5dc <sysclk_priv_enable_module+0x5c>)
     5ba:	6593      	str	r3, [r2, #88]	; 0x58
	*(&PM->PM_CPUMASK + bus_id) = mask;
     5bc:	f844 1020 	str.w	r1, [r4, r0, lsl #2]
	return (flags);
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	if (cpu_irq_is_enabled_flags(flags))
     5c0:	b12d      	cbz	r5, 5ce <sysclk_priv_enable_module+0x4e>
		cpu_irq_enable();
     5c2:	2201      	movs	r2, #1
     5c4:	4b03      	ldr	r3, [pc, #12]	; (5d4 <sysclk_priv_enable_module+0x54>)
     5c6:	701a      	strb	r2, [r3, #0]
     5c8:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
     5cc:	b662      	cpsie	i

	cpu_irq_restore(flags);
}
     5ce:	b003      	add	sp, #12
     5d0:	bc70      	pop	{r4, r5, r6}
     5d2:	4770      	bx	lr
     5d4:	2000002c 	.word	0x2000002c
     5d8:	400e0020 	.word	0x400e0020
     5dc:	400e0000 	.word	0x400e0000

000005e0 <sysclk_priv_disable_module>:
 * \param bus_id Bus index, given by the \c PM_CLK_GRP_xxx definitions.
 * \param module_index Index of the module to be disabled. This is the
 * bit number in the corresponding xxxMASK register.
 */
void sysclk_priv_disable_module(uint32_t bus_id, uint32_t module_index)
{
     5e0:	b470      	push	{r4, r5, r6}
     5e2:	b083      	sub	sp, #12
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
     5e4:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
     5e8:	fab3 f383 	clz	r3, r3
     5ec:	095b      	lsrs	r3, r3, #5
     5ee:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
     5f0:	b672      	cpsid	i
     5f2:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
     5f6:	2200      	movs	r2, #0
     5f8:	4b0e      	ldr	r3, [pc, #56]	; (634 <sysclk_priv_disable_module+0x54>)
     5fa:	701a      	strb	r2, [r3, #0]
	return flags;
     5fc:	9e01      	ldr	r6, [sp, #4]
	uint32_t   mask;

	flags = cpu_irq_save();

	/* Disable the clock */
	mask = *(&PM->PM_CPUMASK + bus_id);
     5fe:	0083      	lsls	r3, r0, #2
     600:	4d0d      	ldr	r5, [pc, #52]	; (638 <sysclk_priv_disable_module+0x58>)
     602:	f855 2020 	ldr.w	r2, [r5, r0, lsl #2]
	mask &= ~(1U << module_index);
     606:	2401      	movs	r4, #1
     608:	fa04 f101 	lsl.w	r1, r4, r1
     60c:	ea22 0101 	bic.w	r1, r2, r1
	PM->PM_UNLOCK = PM_UNLOCK_KEY(0xAAu) |
		BPM_UNLOCK_ADDR(((uint32_t)&PM->PM_CPUMASK - (uint32_t)PM) + (4 * bus_id));
     610:	3320      	adds	r3, #32
     612:	f403 737f 	and.w	r3, r3, #1020	; 0x3fc
	PM->PM_UNLOCK = PM_UNLOCK_KEY(0xAAu) |
     616:	f043 432a 	orr.w	r3, r3, #2852126720	; 0xaa000000
     61a:	4a08      	ldr	r2, [pc, #32]	; (63c <sysclk_priv_disable_module+0x5c>)
     61c:	6593      	str	r3, [r2, #88]	; 0x58
	*(&PM->PM_CPUMASK + bus_id) = mask;
     61e:	f845 1020 	str.w	r1, [r5, r0, lsl #2]
	if (cpu_irq_is_enabled_flags(flags))
     622:	b126      	cbz	r6, 62e <sysclk_priv_disable_module+0x4e>
		cpu_irq_enable();
     624:	4b03      	ldr	r3, [pc, #12]	; (634 <sysclk_priv_disable_module+0x54>)
     626:	701c      	strb	r4, [r3, #0]
     628:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
     62c:	b662      	cpsie	i

	cpu_irq_restore(flags);
}
     62e:	b003      	add	sp, #12
     630:	bc70      	pop	{r4, r5, r6}
     632:	4770      	bx	lr
     634:	2000002c 	.word	0x2000002c
     638:	400e0020 	.word	0x400e0020
     63c:	400e0000 	.word	0x400e0000

00000640 <sysclk_enable_pba_module>:
/**
 * \brief Enable a module clock derived from the PBA clock
 * \param module_index Index of the module clock in the PBAMASK register
 */
void sysclk_enable_pba_module(uint32_t module_index)
{
     640:	b530      	push	{r4, r5, lr}
     642:	b083      	sub	sp, #12
     644:	4604      	mov	r4, r0
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
     646:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
     64a:	fab3 f383 	clz	r3, r3
     64e:	095b      	lsrs	r3, r3, #5
     650:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
     652:	b672      	cpsid	i
     654:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
     658:	2200      	movs	r2, #0
     65a:	4b0c      	ldr	r3, [pc, #48]	; (68c <sysclk_enable_pba_module+0x4c>)
     65c:	701a      	strb	r2, [r3, #0]
	return flags;
     65e:	9d01      	ldr	r5, [sp, #4]
	irqflags_t flags;

	/* Enable the bridge if necessary */
	flags = cpu_irq_save();

	if (PM->PM_PBAMASK == 0) {
     660:	4b0b      	ldr	r3, [pc, #44]	; (690 <sysclk_enable_pba_module+0x50>)
     662:	6a9b      	ldr	r3, [r3, #40]	; 0x28
     664:	b163      	cbz	r3, 680 <sysclk_enable_pba_module+0x40>
	if (cpu_irq_is_enabled_flags(flags))
     666:	b12d      	cbz	r5, 674 <sysclk_enable_pba_module+0x34>
		cpu_irq_enable();
     668:	2201      	movs	r2, #1
     66a:	4b08      	ldr	r3, [pc, #32]	; (68c <sysclk_enable_pba_module+0x4c>)
     66c:	701a      	strb	r2, [r3, #0]
     66e:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
     672:	b662      	cpsie	i
	}

	cpu_irq_restore(flags);

	/* Enable the module */
	sysclk_priv_enable_module(PM_CLK_GRP_PBA, module_index);
     674:	4621      	mov	r1, r4
     676:	2002      	movs	r0, #2
     678:	4b06      	ldr	r3, [pc, #24]	; (694 <sysclk_enable_pba_module+0x54>)
     67a:	4798      	blx	r3
}
     67c:	b003      	add	sp, #12
     67e:	bd30      	pop	{r4, r5, pc}
 * \brief Enable a module clock derived from the HSB clock
 * \param module_index Index of the module clock in the HSBMASK register
 */
static inline void sysclk_enable_hsb_module(uint32_t module_index)
{
	sysclk_priv_enable_module(PM_CLK_GRP_HSB, module_index);
     680:	2105      	movs	r1, #5
     682:	2001      	movs	r0, #1
     684:	4b03      	ldr	r3, [pc, #12]	; (694 <sysclk_enable_pba_module+0x54>)
     686:	4798      	blx	r3
     688:	e7ed      	b.n	666 <sysclk_enable_pba_module+0x26>
     68a:	bf00      	nop
     68c:	2000002c 	.word	0x2000002c
     690:	400e0000 	.word	0x400e0000
     694:	00000581 	.word	0x00000581

00000698 <sysclk_disable_pba_module>:
/**
 * \brief Disable a module clock derived from the PBA clock
 * \param module_index Index of the module clock in the PBAMASK register
 */
void sysclk_disable_pba_module(uint32_t module_index)
{
     698:	b510      	push	{r4, lr}
     69a:	b082      	sub	sp, #8
	irqflags_t flags;

	/* Disable the module */
	sysclk_priv_disable_module(PM_CLK_GRP_PBA, module_index);
     69c:	4601      	mov	r1, r0
     69e:	2002      	movs	r0, #2
     6a0:	4b0f      	ldr	r3, [pc, #60]	; (6e0 <sysclk_disable_pba_module+0x48>)
     6a2:	4798      	blx	r3
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
     6a4:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
     6a8:	fab3 f383 	clz	r3, r3
     6ac:	095b      	lsrs	r3, r3, #5
     6ae:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
     6b0:	b672      	cpsid	i
     6b2:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
     6b6:	2200      	movs	r2, #0
     6b8:	4b0a      	ldr	r3, [pc, #40]	; (6e4 <sysclk_disable_pba_module+0x4c>)
     6ba:	701a      	strb	r2, [r3, #0]
	return flags;
     6bc:	9c01      	ldr	r4, [sp, #4]

	/* Disable the bridge if possible */
	flags = cpu_irq_save();

	if (PM->PM_PBAMASK == 0) {
     6be:	4b0a      	ldr	r3, [pc, #40]	; (6e8 <sysclk_disable_pba_module+0x50>)
     6c0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
     6c2:	b143      	cbz	r3, 6d6 <sysclk_disable_pba_module+0x3e>
	if (cpu_irq_is_enabled_flags(flags))
     6c4:	b12c      	cbz	r4, 6d2 <sysclk_disable_pba_module+0x3a>
		cpu_irq_enable();
     6c6:	2201      	movs	r2, #1
     6c8:	4b06      	ldr	r3, [pc, #24]	; (6e4 <sysclk_disable_pba_module+0x4c>)
     6ca:	701a      	strb	r2, [r3, #0]
     6cc:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
     6d0:	b662      	cpsie	i
		sysclk_disable_hsb_module(SYSCLK_PBA_BRIDGE);
	}

	cpu_irq_restore(flags);
}
     6d2:	b002      	add	sp, #8
     6d4:	bd10      	pop	{r4, pc}
 * \brief Disable a module clock derived from the HSB clock
 * \param module_index Index of the module clock in the HSBMASK register
 */
static inline void sysclk_disable_hsb_module(uint32_t module_index)
{
	sysclk_priv_disable_module(PM_CLK_GRP_HSB, module_index);
     6d6:	2105      	movs	r1, #5
     6d8:	2001      	movs	r0, #1
     6da:	4b01      	ldr	r3, [pc, #4]	; (6e0 <sysclk_disable_pba_module+0x48>)
     6dc:	4798      	blx	r3
     6de:	e7f1      	b.n	6c4 <sysclk_disable_pba_module+0x2c>
     6e0:	000005e1 	.word	0x000005e1
     6e4:	2000002c 	.word	0x2000002c
     6e8:	400e0000 	.word	0x400e0000

000006ec <sysclk_enable_pbb_module>:
/**
 * \brief Enable a module clock derived from the PBB clock
 * \param module_index Index of the module clock in the PBBMASK register
 */
void sysclk_enable_pbb_module(uint32_t module_index)
{
     6ec:	b530      	push	{r4, r5, lr}
     6ee:	b083      	sub	sp, #12
     6f0:	4604      	mov	r4, r0
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
     6f2:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
     6f6:	fab3 f383 	clz	r3, r3
     6fa:	095b      	lsrs	r3, r3, #5
     6fc:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
     6fe:	b672      	cpsid	i
     700:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
     704:	2200      	movs	r2, #0
     706:	4b0c      	ldr	r3, [pc, #48]	; (738 <sysclk_enable_pbb_module+0x4c>)
     708:	701a      	strb	r2, [r3, #0]
	return flags;
     70a:	9d01      	ldr	r5, [sp, #4]
	irqflags_t flags;

	/* Enable the bridge if necessary */
	flags = cpu_irq_save();

	if (PM->PM_PBBMASK == 0) {
     70c:	4b0b      	ldr	r3, [pc, #44]	; (73c <sysclk_enable_pbb_module+0x50>)
     70e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
     710:	b163      	cbz	r3, 72c <sysclk_enable_pbb_module+0x40>
	if (cpu_irq_is_enabled_flags(flags))
     712:	b12d      	cbz	r5, 720 <sysclk_enable_pbb_module+0x34>
		cpu_irq_enable();
     714:	2201      	movs	r2, #1
     716:	4b08      	ldr	r3, [pc, #32]	; (738 <sysclk_enable_pbb_module+0x4c>)
     718:	701a      	strb	r2, [r3, #0]
     71a:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
     71e:	b662      	cpsie	i
	}

	cpu_irq_restore(flags);

	/* Enable the module */
	sysclk_priv_enable_module(PM_CLK_GRP_PBB, module_index);
     720:	4621      	mov	r1, r4
     722:	2003      	movs	r0, #3
     724:	4b06      	ldr	r3, [pc, #24]	; (740 <sysclk_enable_pbb_module+0x54>)
     726:	4798      	blx	r3
}
     728:	b003      	add	sp, #12
     72a:	bd30      	pop	{r4, r5, pc}
	sysclk_priv_enable_module(PM_CLK_GRP_HSB, module_index);
     72c:	2106      	movs	r1, #6
     72e:	2001      	movs	r0, #1
     730:	4b03      	ldr	r3, [pc, #12]	; (740 <sysclk_enable_pbb_module+0x54>)
     732:	4798      	blx	r3
     734:	e7ed      	b.n	712 <sysclk_enable_pbb_module+0x26>
     736:	bf00      	nop
     738:	2000002c 	.word	0x2000002c
     73c:	400e0000 	.word	0x400e0000
     740:	00000581 	.word	0x00000581

00000744 <sysclk_disable_pbb_module>:
/**
 * \brief Disable a module clock derived from the PBB clock
 * \param module_index Index of the module clock in the PBBMASK register
 */
void sysclk_disable_pbb_module(uint32_t module_index)
{
     744:	b510      	push	{r4, lr}
     746:	b082      	sub	sp, #8
	irqflags_t flags;

	/* Disable the module */
	sysclk_priv_disable_module(PM_CLK_GRP_PBB, module_index);
     748:	4601      	mov	r1, r0
     74a:	2003      	movs	r0, #3
     74c:	4b0f      	ldr	r3, [pc, #60]	; (78c <sysclk_disable_pbb_module+0x48>)
     74e:	4798      	blx	r3
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
     750:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
     754:	fab3 f383 	clz	r3, r3
     758:	095b      	lsrs	r3, r3, #5
     75a:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
     75c:	b672      	cpsid	i
     75e:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
     762:	2200      	movs	r2, #0
     764:	4b0a      	ldr	r3, [pc, #40]	; (790 <sysclk_disable_pbb_module+0x4c>)
     766:	701a      	strb	r2, [r3, #0]
	return flags;
     768:	9c01      	ldr	r4, [sp, #4]

	/* Disable the bridge if possible */
	flags = cpu_irq_save();

	if (PM->PM_PBBMASK == 0) {
     76a:	4b0a      	ldr	r3, [pc, #40]	; (794 <sysclk_disable_pbb_module+0x50>)
     76c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
     76e:	b143      	cbz	r3, 782 <sysclk_disable_pbb_module+0x3e>
	if (cpu_irq_is_enabled_flags(flags))
     770:	b12c      	cbz	r4, 77e <sysclk_disable_pbb_module+0x3a>
		cpu_irq_enable();
     772:	2201      	movs	r2, #1
     774:	4b06      	ldr	r3, [pc, #24]	; (790 <sysclk_disable_pbb_module+0x4c>)
     776:	701a      	strb	r2, [r3, #0]
     778:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
     77c:	b662      	cpsie	i
		sysclk_disable_hsb_module(SYSCLK_PBB_BRIDGE);
	}

	cpu_irq_restore(flags);
}
     77e:	b002      	add	sp, #8
     780:	bd10      	pop	{r4, pc}
	sysclk_priv_disable_module(PM_CLK_GRP_HSB, module_index);
     782:	2106      	movs	r1, #6
     784:	2001      	movs	r0, #1
     786:	4b01      	ldr	r3, [pc, #4]	; (78c <sysclk_disable_pbb_module+0x48>)
     788:	4798      	blx	r3
     78a:	e7f1      	b.n	770 <sysclk_disable_pbb_module+0x2c>
     78c:	000005e1 	.word	0x000005e1
     790:	2000002c 	.word	0x2000002c
     794:	400e0000 	.word	0x400e0000

00000798 <sysclk_get_peripheral_bus_hz>:
 * \return Frequency of the bus attached to the specified peripheral, in Hz.
 */
uint32_t sysclk_get_peripheral_bus_hz(const volatile void *module)
{
	/* Fallthroughs intended for modules sharing the same peripheral bus. */
	switch ((uintptr_t)module) {
     798:	4b5a      	ldr	r3, [pc, #360]	; (904 <sysclk_get_peripheral_bus_hz+0x16c>)
     79a:	4298      	cmp	r0, r3
     79c:	d027      	beq.n	7ee <sysclk_get_peripheral_bus_hz+0x56>
     79e:	d858      	bhi.n	852 <sysclk_get_peripheral_bus_hz+0xba>
     7a0:	f5a3 23a0 	sub.w	r3, r3, #327680	; 0x50000
     7a4:	4298      	cmp	r0, r3
     7a6:	d022      	beq.n	7ee <sysclk_get_peripheral_bus_hz+0x56>
     7a8:	d910      	bls.n	7cc <sysclk_get_peripheral_bus_hz+0x34>
     7aa:	4b57      	ldr	r3, [pc, #348]	; (908 <sysclk_get_peripheral_bus_hz+0x170>)
     7ac:	4298      	cmp	r0, r3
     7ae:	d01e      	beq.n	7ee <sysclk_get_peripheral_bus_hz+0x56>
     7b0:	d935      	bls.n	81e <sysclk_get_peripheral_bus_hz+0x86>
     7b2:	4b56      	ldr	r3, [pc, #344]	; (90c <sysclk_get_peripheral_bus_hz+0x174>)
     7b4:	4298      	cmp	r0, r3
     7b6:	d01a      	beq.n	7ee <sysclk_get_peripheral_bus_hz+0x56>
     7b8:	d843      	bhi.n	842 <sysclk_get_peripheral_bus_hz+0xaa>
     7ba:	f5a3 4300 	sub.w	r3, r3, #32768	; 0x8000
     7be:	4298      	cmp	r0, r3
     7c0:	d015      	beq.n	7ee <sysclk_get_peripheral_bus_hz+0x56>
     7c2:	f503 4380 	add.w	r3, r3, #16384	; 0x4000
     7c6:	4298      	cmp	r0, r3
     7c8:	d116      	bne.n	7f8 <sysclk_get_peripheral_bus_hz+0x60>
     7ca:	e010      	b.n	7ee <sysclk_get_peripheral_bus_hz+0x56>
     7cc:	f5a3 3380 	sub.w	r3, r3, #65536	; 0x10000
     7d0:	4298      	cmp	r0, r3
     7d2:	d00c      	beq.n	7ee <sysclk_get_peripheral_bus_hz+0x56>
     7d4:	d812      	bhi.n	7fc <sysclk_get_peripheral_bus_hz+0x64>
     7d6:	f5a3 3380 	sub.w	r3, r3, #65536	; 0x10000
     7da:	4298      	cmp	r0, r3
     7dc:	d007      	beq.n	7ee <sysclk_get_peripheral_bus_hz+0x56>
     7de:	d908      	bls.n	7f2 <sysclk_get_peripheral_bus_hz+0x5a>
     7e0:	4b4b      	ldr	r3, [pc, #300]	; (910 <sysclk_get_peripheral_bus_hz+0x178>)
     7e2:	4298      	cmp	r0, r3
     7e4:	d003      	beq.n	7ee <sysclk_get_peripheral_bus_hz+0x56>
     7e6:	f503 4380 	add.w	r3, r3, #16384	; 0x4000
     7ea:	4298      	cmp	r0, r3
     7ec:	d104      	bne.n	7f8 <sysclk_get_peripheral_bus_hz+0x60>
	case TWIM2_ADDR:
	case TWIM3_ADDR:
	#if !SAM4LS
	case LCDCA_ADDR:
	#endif
		return sysclk_get_pba_hz();
     7ee:	4849      	ldr	r0, [pc, #292]	; (914 <sysclk_get_peripheral_bus_hz+0x17c>)

	default:
		Assert(false);
		return 0;
	}
}
     7f0:	4770      	bx	lr
	switch ((uintptr_t)module) {
     7f2:	f1b0 2f40 	cmp.w	r0, #1073758208	; 0x40004000
     7f6:	d0fa      	beq.n	7ee <sysclk_get_peripheral_bus_hz+0x56>
		return 0;
     7f8:	2000      	movs	r0, #0
     7fa:	4770      	bx	lr
	switch ((uintptr_t)module) {
     7fc:	4b46      	ldr	r3, [pc, #280]	; (918 <sysclk_get_peripheral_bus_hz+0x180>)
     7fe:	4298      	cmp	r0, r3
     800:	d0f5      	beq.n	7ee <sysclk_get_peripheral_bus_hz+0x56>
     802:	d907      	bls.n	814 <sysclk_get_peripheral_bus_hz+0x7c>
     804:	4b45      	ldr	r3, [pc, #276]	; (91c <sysclk_get_peripheral_bus_hz+0x184>)
     806:	4298      	cmp	r0, r3
     808:	d0f1      	beq.n	7ee <sysclk_get_peripheral_bus_hz+0x56>
     80a:	f503 43f8 	add.w	r3, r3, #31744	; 0x7c00
     80e:	4298      	cmp	r0, r3
     810:	d1f2      	bne.n	7f8 <sysclk_get_peripheral_bus_hz+0x60>
     812:	e7ec      	b.n	7ee <sysclk_get_peripheral_bus_hz+0x56>
     814:	f5a3 5370 	sub.w	r3, r3, #15360	; 0x3c00
     818:	4298      	cmp	r0, r3
     81a:	d1ed      	bne.n	7f8 <sysclk_get_peripheral_bus_hz+0x60>
     81c:	e7e7      	b.n	7ee <sysclk_get_peripheral_bus_hz+0x56>
     81e:	f5a3 3380 	sub.w	r3, r3, #65536	; 0x10000
     822:	4298      	cmp	r0, r3
     824:	d0e3      	beq.n	7ee <sysclk_get_peripheral_bus_hz+0x56>
     826:	d907      	bls.n	838 <sysclk_get_peripheral_bus_hz+0xa0>
     828:	4b3d      	ldr	r3, [pc, #244]	; (920 <sysclk_get_peripheral_bus_hz+0x188>)
     82a:	4298      	cmp	r0, r3
     82c:	d0df      	beq.n	7ee <sysclk_get_peripheral_bus_hz+0x56>
     82e:	f503 4380 	add.w	r3, r3, #16384	; 0x4000
     832:	4298      	cmp	r0, r3
     834:	d1e0      	bne.n	7f8 <sysclk_get_peripheral_bus_hz+0x60>
     836:	e7da      	b.n	7ee <sysclk_get_peripheral_bus_hz+0x56>
     838:	f5a3 4380 	sub.w	r3, r3, #16384	; 0x4000
     83c:	4298      	cmp	r0, r3
     83e:	d1db      	bne.n	7f8 <sysclk_get_peripheral_bus_hz+0x60>
     840:	e7d5      	b.n	7ee <sysclk_get_peripheral_bus_hz+0x56>
     842:	4b38      	ldr	r3, [pc, #224]	; (924 <sysclk_get_peripheral_bus_hz+0x18c>)
     844:	4298      	cmp	r0, r3
     846:	d0d2      	beq.n	7ee <sysclk_get_peripheral_bus_hz+0x56>
     848:	f503 4380 	add.w	r3, r3, #16384	; 0x4000
     84c:	4298      	cmp	r0, r3
     84e:	d1d3      	bne.n	7f8 <sysclk_get_peripheral_bus_hz+0x60>
     850:	e7cd      	b.n	7ee <sysclk_get_peripheral_bus_hz+0x56>
     852:	4b35      	ldr	r3, [pc, #212]	; (928 <sysclk_get_peripheral_bus_hz+0x190>)
     854:	4298      	cmp	r0, r3
     856:	d0ca      	beq.n	7ee <sysclk_get_peripheral_bus_hz+0x56>
     858:	d910      	bls.n	87c <sysclk_get_peripheral_bus_hz+0xe4>
     85a:	4b34      	ldr	r3, [pc, #208]	; (92c <sysclk_get_peripheral_bus_hz+0x194>)
     85c:	4298      	cmp	r0, r3
     85e:	d0c6      	beq.n	7ee <sysclk_get_peripheral_bus_hz+0x56>
     860:	d934      	bls.n	8cc <sysclk_get_peripheral_bus_hz+0x134>
     862:	4b33      	ldr	r3, [pc, #204]	; (930 <sysclk_get_peripheral_bus_hz+0x198>)
     864:	4298      	cmp	r0, r3
     866:	d0c2      	beq.n	7ee <sysclk_get_peripheral_bus_hz+0x56>
     868:	d842      	bhi.n	8f0 <sysclk_get_peripheral_bus_hz+0x158>
     86a:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
     86e:	4298      	cmp	r0, r3
     870:	d0bd      	beq.n	7ee <sysclk_get_peripheral_bus_hz+0x56>
     872:	f503 6380 	add.w	r3, r3, #1024	; 0x400
     876:	4298      	cmp	r0, r3
     878:	d1be      	bne.n	7f8 <sysclk_get_peripheral_bus_hz+0x60>
     87a:	e7b8      	b.n	7ee <sysclk_get_peripheral_bus_hz+0x56>
     87c:	f5a3 337c 	sub.w	r3, r3, #258048	; 0x3f000
     880:	4298      	cmp	r0, r3
     882:	d0b4      	beq.n	7ee <sysclk_get_peripheral_bus_hz+0x56>
     884:	d811      	bhi.n	8aa <sysclk_get_peripheral_bus_hz+0x112>
     886:	f5a3 3304 	sub.w	r3, r3, #135168	; 0x21000
     88a:	4298      	cmp	r0, r3
     88c:	d0af      	beq.n	7ee <sysclk_get_peripheral_bus_hz+0x56>
     88e:	d907      	bls.n	8a0 <sysclk_get_peripheral_bus_hz+0x108>
     890:	4b28      	ldr	r3, [pc, #160]	; (934 <sysclk_get_peripheral_bus_hz+0x19c>)
     892:	4298      	cmp	r0, r3
     894:	d0ab      	beq.n	7ee <sysclk_get_peripheral_bus_hz+0x56>
     896:	f503 6380 	add.w	r3, r3, #1024	; 0x400
     89a:	4298      	cmp	r0, r3
     89c:	d1ac      	bne.n	7f8 <sysclk_get_peripheral_bus_hz+0x60>
     89e:	e7a6      	b.n	7ee <sysclk_get_peripheral_bus_hz+0x56>
     8a0:	f5a3 4380 	sub.w	r3, r3, #16384	; 0x4000
     8a4:	4298      	cmp	r0, r3
     8a6:	d1a7      	bne.n	7f8 <sysclk_get_peripheral_bus_hz+0x60>
     8a8:	e7a1      	b.n	7ee <sysclk_get_peripheral_bus_hz+0x56>
     8aa:	4b23      	ldr	r3, [pc, #140]	; (938 <sysclk_get_peripheral_bus_hz+0x1a0>)
     8ac:	4298      	cmp	r0, r3
     8ae:	d09e      	beq.n	7ee <sysclk_get_peripheral_bus_hz+0x56>
     8b0:	d907      	bls.n	8c2 <sysclk_get_peripheral_bus_hz+0x12a>
     8b2:	4b22      	ldr	r3, [pc, #136]	; (93c <sysclk_get_peripheral_bus_hz+0x1a4>)
     8b4:	4298      	cmp	r0, r3
     8b6:	d09a      	beq.n	7ee <sysclk_get_peripheral_bus_hz+0x56>
     8b8:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
     8bc:	4298      	cmp	r0, r3
     8be:	d19b      	bne.n	7f8 <sysclk_get_peripheral_bus_hz+0x60>
     8c0:	e795      	b.n	7ee <sysclk_get_peripheral_bus_hz+0x56>
     8c2:	f5a3 5300 	sub.w	r3, r3, #8192	; 0x2000
     8c6:	4298      	cmp	r0, r3
     8c8:	d196      	bne.n	7f8 <sysclk_get_peripheral_bus_hz+0x60>
     8ca:	e790      	b.n	7ee <sysclk_get_peripheral_bus_hz+0x56>
     8cc:	f5a3 4378 	sub.w	r3, r3, #63488	; 0xf800
     8d0:	4298      	cmp	r0, r3
     8d2:	d08c      	beq.n	7ee <sysclk_get_peripheral_bus_hz+0x56>
     8d4:	d907      	bls.n	8e6 <sysclk_get_peripheral_bus_hz+0x14e>
     8d6:	4b1a      	ldr	r3, [pc, #104]	; (940 <sysclk_get_peripheral_bus_hz+0x1a8>)
     8d8:	4298      	cmp	r0, r3
     8da:	d088      	beq.n	7ee <sysclk_get_peripheral_bus_hz+0x56>
     8dc:	f503 6380 	add.w	r3, r3, #1024	; 0x400
     8e0:	4298      	cmp	r0, r3
     8e2:	d189      	bne.n	7f8 <sysclk_get_peripheral_bus_hz+0x60>
     8e4:	e783      	b.n	7ee <sysclk_get_peripheral_bus_hz+0x56>
     8e6:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
     8ea:	4298      	cmp	r0, r3
     8ec:	d184      	bne.n	7f8 <sysclk_get_peripheral_bus_hz+0x60>
     8ee:	e77e      	b.n	7ee <sysclk_get_peripheral_bus_hz+0x56>
     8f0:	4b14      	ldr	r3, [pc, #80]	; (944 <sysclk_get_peripheral_bus_hz+0x1ac>)
     8f2:	4298      	cmp	r0, r3
     8f4:	f43f af7b 	beq.w	7ee <sysclk_get_peripheral_bus_hz+0x56>
     8f8:	f503 6380 	add.w	r3, r3, #1024	; 0x400
     8fc:	4298      	cmp	r0, r3
     8fe:	f47f af7b 	bne.w	7f8 <sysclk_get_peripheral_bus_hz+0x60>
     902:	e774      	b.n	7ee <sysclk_get_peripheral_bus_hz+0x56>
     904:	40078000 	.word	0x40078000
     908:	40040000 	.word	0x40040000
     90c:	40068000 	.word	0x40068000
     910:	40010000 	.word	0x40010000
     914:	0001c138 	.word	0x0001c138
     918:	4001c000 	.word	0x4001c000
     91c:	4001c400 	.word	0x4001c400
     920:	40038000 	.word	0x40038000
     924:	4006c000 	.word	0x4006c000
     928:	400e0000 	.word	0x400e0000
     92c:	400f0000 	.word	0x400f0000
     930:	400f0c00 	.word	0x400f0c00
     934:	400a0000 	.word	0x400a0000
     938:	400a4000 	.word	0x400a4000
     93c:	400a5000 	.word	0x400a5000
     940:	400e0c00 	.word	0x400e0c00
     944:	400f1000 	.word	0x400f1000

00000948 <sysclk_enable_peripheral_clock>:
 *  has an associated clock on the HSB bus, this will be enabled also.
 *
 * \param module Pointer to the module's base address.
 */
void sysclk_enable_peripheral_clock(const volatile void *module)
{
     948:	b508      	push	{r3, lr}
	switch ((uintptr_t)module) {
     94a:	4bae      	ldr	r3, [pc, #696]	; (c04 <sysclk_enable_peripheral_clock+0x2bc>)
     94c:	4298      	cmp	r0, r3
     94e:	f000 81a0 	beq.w	c92 <sysclk_enable_peripheral_clock+0x34a>
     952:	d924      	bls.n	99e <sysclk_enable_peripheral_clock+0x56>
     954:	4bac      	ldr	r3, [pc, #688]	; (c08 <sysclk_enable_peripheral_clock+0x2c0>)
     956:	4298      	cmp	r0, r3
     958:	f000 81c3 	beq.w	ce2 <sysclk_enable_peripheral_clock+0x39a>
     95c:	f200 80e6 	bhi.w	b2c <sysclk_enable_peripheral_clock+0x1e4>
     960:	f5a3 337c 	sub.w	r3, r3, #258048	; 0x3f000
     964:	4298      	cmp	r0, r3
     966:	f000 81a4 	beq.w	cb2 <sysclk_enable_peripheral_clock+0x36a>
     96a:	f240 80b0 	bls.w	ace <sysclk_enable_peripheral_clock+0x186>
     96e:	4ba7      	ldr	r3, [pc, #668]	; (c0c <sysclk_enable_peripheral_clock+0x2c4>)
     970:	4298      	cmp	r0, r3
     972:	f000 81aa 	beq.w	cca <sysclk_enable_peripheral_clock+0x382>
     976:	f200 80cb 	bhi.w	b10 <sysclk_enable_peripheral_clock+0x1c8>
     97a:	f5a3 5340 	sub.w	r3, r3, #12288	; 0x3000
     97e:	4298      	cmp	r0, r3
     980:	f000 819b 	beq.w	cba <sysclk_enable_peripheral_clock+0x372>
     984:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
     988:	4298      	cmp	r0, r3
     98a:	f040 80c0 	bne.w	b0e <sysclk_enable_peripheral_clock+0x1c6>
	sysclk_priv_enable_module(PM_CLK_GRP_HSB, module_index);
     98e:	2104      	movs	r1, #4
     990:	2001      	movs	r0, #1
     992:	4b9f      	ldr	r3, [pc, #636]	; (c10 <sysclk_enable_peripheral_clock+0x2c8>)
     994:	4798      	blx	r3
		sysclk_enable_pbb_module(SYSCLK_PDCA_PB);
		break;

	case CRCCU_ADDR:
		sysclk_enable_hsb_module(SYSCLK_CRCCU_DATA);
		sysclk_enable_pbb_module(SYSCLK_CRCCU_REGS);
     996:	2004      	movs	r0, #4
     998:	4b9e      	ldr	r3, [pc, #632]	; (c14 <sysclk_enable_peripheral_clock+0x2cc>)
     99a:	4798      	blx	r3
		break;
     99c:	bd08      	pop	{r3, pc}
	switch ((uintptr_t)module) {
     99e:	f5a3 23a0 	sub.w	r3, r3, #327680	; 0x50000
     9a2:	4298      	cmp	r0, r3
     9a4:	f000 8122 	beq.w	bec <sysclk_enable_peripheral_clock+0x2a4>
     9a8:	d916      	bls.n	9d8 <sysclk_enable_peripheral_clock+0x90>
     9aa:	4b9b      	ldr	r3, [pc, #620]	; (c18 <sysclk_enable_peripheral_clock+0x2d0>)
     9ac:	4298      	cmp	r0, r3
     9ae:	f000 8160 	beq.w	c72 <sysclk_enable_peripheral_clock+0x32a>
     9b2:	d95b      	bls.n	a6c <sysclk_enable_peripheral_clock+0x124>
     9b4:	4b99      	ldr	r3, [pc, #612]	; (c1c <sysclk_enable_peripheral_clock+0x2d4>)
     9b6:	4298      	cmp	r0, r3
     9b8:	f000 8163 	beq.w	c82 <sysclk_enable_peripheral_clock+0x33a>
     9bc:	d87a      	bhi.n	ab4 <sysclk_enable_peripheral_clock+0x16c>
     9be:	f5a3 4300 	sub.w	r3, r3, #32768	; 0x8000
     9c2:	4298      	cmp	r0, r3
     9c4:	f000 8159 	beq.w	c7a <sysclk_enable_peripheral_clock+0x332>
     9c8:	f503 4380 	add.w	r3, r3, #16384	; 0x4000
     9cc:	4298      	cmp	r0, r3
     9ce:	d170      	bne.n	ab2 <sysclk_enable_peripheral_clock+0x16a>
		sysclk_enable_pba_module(SYSCLK_ABDACB);
     9d0:	2010      	movs	r0, #16
     9d2:	4b93      	ldr	r3, [pc, #588]	; (c20 <sysclk_enable_peripheral_clock+0x2d8>)
     9d4:	4798      	blx	r3
		break;
     9d6:	bd08      	pop	{r3, pc}
	switch ((uintptr_t)module) {
     9d8:	f5a3 3380 	sub.w	r3, r3, #65536	; 0x10000
     9dc:	4298      	cmp	r0, r3
     9de:	f000 80f9 	beq.w	bd4 <sysclk_enable_peripheral_clock+0x28c>
     9e2:	d821      	bhi.n	a28 <sysclk_enable_peripheral_clock+0xe0>
     9e4:	f5a3 3380 	sub.w	r3, r3, #65536	; 0x10000
     9e8:	4298      	cmp	r0, r3
     9ea:	f000 80e4 	beq.w	bb6 <sysclk_enable_peripheral_clock+0x26e>
     9ee:	d912      	bls.n	a16 <sysclk_enable_peripheral_clock+0xce>
     9f0:	4b8c      	ldr	r3, [pc, #560]	; (c24 <sysclk_enable_peripheral_clock+0x2dc>)
     9f2:	4298      	cmp	r0, r3
     9f4:	f000 80e3 	beq.w	bbe <sysclk_enable_peripheral_clock+0x276>
     9f8:	f503 4380 	add.w	r3, r3, #16384	; 0x4000
     9fc:	4298      	cmp	r0, r3
     9fe:	d112      	bne.n	a26 <sysclk_enable_peripheral_clock+0xde>
		sysclk_enable_pba_module(SYSCLK_TC1);
     a00:	2003      	movs	r0, #3
     a02:	4b87      	ldr	r3, [pc, #540]	; (c20 <sysclk_enable_peripheral_clock+0x2d8>)
     a04:	4798      	blx	r3
 */
static inline void sysclk_enable_pba_divmask(uint32_t mask)
{
	uint32_t temp_mask;

	temp_mask = PM->PM_PBADIVMASK;
     a06:	4b80      	ldr	r3, [pc, #512]	; (c08 <sysclk_enable_peripheral_clock+0x2c0>)
     a08:	6c1a      	ldr	r2, [r3, #64]	; 0x40
	temp_mask |= mask;
     a0a:	f042 0255 	orr.w	r2, r2, #85	; 0x55
	PM->PM_UNLOCK = PM_UNLOCK_KEY(0xAAu)
     a0e:	4986      	ldr	r1, [pc, #536]	; (c28 <sysclk_enable_peripheral_clock+0x2e0>)
     a10:	6599      	str	r1, [r3, #88]	; 0x58
			| PM_UNLOCK_ADDR((uint32_t)&PM->PM_PBADIVMASK - (uint32_t)PM);
	PM->PM_PBADIVMASK = temp_mask;
     a12:	641a      	str	r2, [r3, #64]	; 0x40
     a14:	bd08      	pop	{r3, pc}
	switch ((uintptr_t)module) {
     a16:	f1b0 2f40 	cmp.w	r0, #1073758208	; 0x40004000
     a1a:	d103      	bne.n	a24 <sysclk_enable_peripheral_clock+0xdc>
		sysclk_enable_pba_module(SYSCLK_IISC);
     a1c:	2000      	movs	r0, #0
     a1e:	4b80      	ldr	r3, [pc, #512]	; (c20 <sysclk_enable_peripheral_clock+0x2d8>)
     a20:	4798      	blx	r3
		break;
     a22:	bd08      	pop	{r3, pc}
     a24:	bd08      	pop	{r3, pc}
     a26:	bd08      	pop	{r3, pc}
	switch ((uintptr_t)module) {
     a28:	4b80      	ldr	r3, [pc, #512]	; (c2c <sysclk_enable_peripheral_clock+0x2e4>)
     a2a:	4298      	cmp	r0, r3
     a2c:	f000 80d6 	beq.w	bdc <sysclk_enable_peripheral_clock+0x294>
     a30:	d912      	bls.n	a58 <sysclk_enable_peripheral_clock+0x110>
     a32:	4b7f      	ldr	r3, [pc, #508]	; (c30 <sysclk_enable_peripheral_clock+0x2e8>)
     a34:	4298      	cmp	r0, r3
     a36:	f000 80d5 	beq.w	be4 <sysclk_enable_peripheral_clock+0x29c>
     a3a:	f503 43f8 	add.w	r3, r3, #31744	; 0x7c00
     a3e:	4298      	cmp	r0, r3
     a40:	d113      	bne.n	a6a <sysclk_enable_peripheral_clock+0x122>
		sysclk_enable_pba_module(SYSCLK_USART0);
     a42:	2008      	movs	r0, #8
     a44:	4b76      	ldr	r3, [pc, #472]	; (c20 <sysclk_enable_peripheral_clock+0x2d8>)
     a46:	4798      	blx	r3
	temp_mask = PM->PM_PBADIVMASK;
     a48:	4b6f      	ldr	r3, [pc, #444]	; (c08 <sysclk_enable_peripheral_clock+0x2c0>)
     a4a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
	temp_mask |= mask;
     a4c:	f042 0204 	orr.w	r2, r2, #4
	PM->PM_UNLOCK = PM_UNLOCK_KEY(0xAAu)
     a50:	4975      	ldr	r1, [pc, #468]	; (c28 <sysclk_enable_peripheral_clock+0x2e0>)
     a52:	6599      	str	r1, [r3, #88]	; 0x58
	PM->PM_PBADIVMASK = temp_mask;
     a54:	641a      	str	r2, [r3, #64]	; 0x40
     a56:	bd08      	pop	{r3, pc}
	switch ((uintptr_t)module) {
     a58:	f5a3 5370 	sub.w	r3, r3, #15360	; 0x3c00
     a5c:	4298      	cmp	r0, r3
     a5e:	d103      	bne.n	a68 <sysclk_enable_peripheral_clock+0x120>
		sysclk_enable_pba_module(SYSCLK_TWIS0);
     a60:	2005      	movs	r0, #5
     a62:	4b6f      	ldr	r3, [pc, #444]	; (c20 <sysclk_enable_peripheral_clock+0x2d8>)
     a64:	4798      	blx	r3
		break;
     a66:	bd08      	pop	{r3, pc}
     a68:	bd08      	pop	{r3, pc}
     a6a:	bd08      	pop	{r3, pc}
	switch ((uintptr_t)module) {
     a6c:	f5a3 3380 	sub.w	r3, r3, #65536	; 0x10000
     a70:	4298      	cmp	r0, r3
     a72:	f000 80ef 	beq.w	c54 <sysclk_enable_peripheral_clock+0x30c>
     a76:	d90b      	bls.n	a90 <sysclk_enable_peripheral_clock+0x148>
     a78:	4b6e      	ldr	r3, [pc, #440]	; (c34 <sysclk_enable_peripheral_clock+0x2ec>)
     a7a:	4298      	cmp	r0, r3
     a7c:	f000 80f5 	beq.w	c6a <sysclk_enable_peripheral_clock+0x322>
     a80:	f503 4380 	add.w	r3, r3, #16384	; 0x4000
     a84:	4298      	cmp	r0, r3
     a86:	d113      	bne.n	ab0 <sysclk_enable_peripheral_clock+0x168>
		sysclk_enable_pba_module(SYSCLK_DACC);
     a88:	200d      	movs	r0, #13
     a8a:	4b65      	ldr	r3, [pc, #404]	; (c20 <sysclk_enable_peripheral_clock+0x2d8>)
     a8c:	4798      	blx	r3
		break;
     a8e:	bd08      	pop	{r3, pc}
	switch ((uintptr_t)module) {
     a90:	f5a3 4380 	sub.w	r3, r3, #16384	; 0x4000
     a94:	4298      	cmp	r0, r3
     a96:	d10a      	bne.n	aae <sysclk_enable_peripheral_clock+0x166>
		sysclk_enable_pba_module(SYSCLK_USART2);
     a98:	200a      	movs	r0, #10
     a9a:	4b61      	ldr	r3, [pc, #388]	; (c20 <sysclk_enable_peripheral_clock+0x2d8>)
     a9c:	4798      	blx	r3
	temp_mask = PM->PM_PBADIVMASK;
     a9e:	4b5a      	ldr	r3, [pc, #360]	; (c08 <sysclk_enable_peripheral_clock+0x2c0>)
     aa0:	6c1a      	ldr	r2, [r3, #64]	; 0x40
	temp_mask |= mask;
     aa2:	f042 0204 	orr.w	r2, r2, #4
	PM->PM_UNLOCK = PM_UNLOCK_KEY(0xAAu)
     aa6:	4960      	ldr	r1, [pc, #384]	; (c28 <sysclk_enable_peripheral_clock+0x2e0>)
     aa8:	6599      	str	r1, [r3, #88]	; 0x58
	PM->PM_PBADIVMASK = temp_mask;
     aaa:	641a      	str	r2, [r3, #64]	; 0x40
     aac:	bd08      	pop	{r3, pc}
     aae:	bd08      	pop	{r3, pc}
     ab0:	bd08      	pop	{r3, pc}
     ab2:	bd08      	pop	{r3, pc}
	switch ((uintptr_t)module) {
     ab4:	4b60      	ldr	r3, [pc, #384]	; (c38 <sysclk_enable_peripheral_clock+0x2f0>)
     ab6:	4298      	cmp	r0, r3
     ab8:	f000 80e7 	beq.w	c8a <sysclk_enable_peripheral_clock+0x342>
     abc:	f503 4380 	add.w	r3, r3, #16384	; 0x4000
     ac0:	4298      	cmp	r0, r3
     ac2:	d103      	bne.n	acc <sysclk_enable_peripheral_clock+0x184>
		sysclk_enable_pba_module(SYSCLK_CATB);
     ac4:	2013      	movs	r0, #19
     ac6:	4b56      	ldr	r3, [pc, #344]	; (c20 <sysclk_enable_peripheral_clock+0x2d8>)
     ac8:	4798      	blx	r3
		break;
     aca:	bd08      	pop	{r3, pc}
     acc:	bd08      	pop	{r3, pc}
	switch ((uintptr_t)module) {
     ace:	f5a3 3304 	sub.w	r3, r3, #135168	; 0x21000
     ad2:	4298      	cmp	r0, r3
     ad4:	f000 80e1 	beq.w	c9a <sysclk_enable_peripheral_clock+0x352>
     ad8:	d90f      	bls.n	afa <sysclk_enable_peripheral_clock+0x1b2>
     ada:	4b58      	ldr	r3, [pc, #352]	; (c3c <sysclk_enable_peripheral_clock+0x2f4>)
     adc:	4298      	cmp	r0, r3
     ade:	f000 80e0 	beq.w	ca2 <sysclk_enable_peripheral_clock+0x35a>
     ae2:	f503 6380 	add.w	r3, r3, #1024	; 0x400
     ae6:	4298      	cmp	r0, r3
     ae8:	d110      	bne.n	b0c <sysclk_enable_peripheral_clock+0x1c4>
	sysclk_priv_enable_module(PM_CLK_GRP_HSB, module_index);
     aea:	2102      	movs	r1, #2
     aec:	2001      	movs	r0, #1
     aee:	4b48      	ldr	r3, [pc, #288]	; (c10 <sysclk_enable_peripheral_clock+0x2c8>)
     af0:	4798      	blx	r3
		sysclk_enable_pbb_module(SYSCLK_HRAMC1_REGS);
     af2:	2001      	movs	r0, #1
     af4:	4b47      	ldr	r3, [pc, #284]	; (c14 <sysclk_enable_peripheral_clock+0x2cc>)
     af6:	4798      	blx	r3
		break;
     af8:	bd08      	pop	{r3, pc}
	switch ((uintptr_t)module) {
     afa:	f5a3 4380 	sub.w	r3, r3, #16384	; 0x4000
     afe:	4298      	cmp	r0, r3
     b00:	d103      	bne.n	b0a <sysclk_enable_peripheral_clock+0x1c2>
		sysclk_enable_pba_module(SYSCLK_TWIM3);
     b02:	2016      	movs	r0, #22
     b04:	4b46      	ldr	r3, [pc, #280]	; (c20 <sysclk_enable_peripheral_clock+0x2d8>)
     b06:	4798      	blx	r3
		break;
     b08:	bd08      	pop	{r3, pc}
     b0a:	bd08      	pop	{r3, pc}
     b0c:	bd08      	pop	{r3, pc}
     b0e:	bd08      	pop	{r3, pc}
	switch ((uintptr_t)module) {
     b10:	4b4b      	ldr	r3, [pc, #300]	; (c40 <sysclk_enable_peripheral_clock+0x2f8>)
     b12:	4298      	cmp	r0, r3
     b14:	f000 80e1 	beq.w	cda <sysclk_enable_peripheral_clock+0x392>
     b18:	f503 4320 	add.w	r3, r3, #40960	; 0xa000
     b1c:	4298      	cmp	r0, r3
     b1e:	d104      	bne.n	b2a <sysclk_enable_peripheral_clock+0x1e2>
     b20:	2109      	movs	r1, #9
     b22:	2001      	movs	r0, #1
     b24:	4b3a      	ldr	r3, [pc, #232]	; (c10 <sysclk_enable_peripheral_clock+0x2c8>)
     b26:	4798      	blx	r3
     b28:	bd08      	pop	{r3, pc}
     b2a:	bd08      	pop	{r3, pc}
     b2c:	4b45      	ldr	r3, [pc, #276]	; (c44 <sysclk_enable_peripheral_clock+0x2fc>)
     b2e:	4298      	cmp	r0, r3
     b30:	f000 80e6 	beq.w	d00 <sysclk_enable_peripheral_clock+0x3b8>
     b34:	d912      	bls.n	b5c <sysclk_enable_peripheral_clock+0x214>
     b36:	4b44      	ldr	r3, [pc, #272]	; (c48 <sysclk_enable_peripheral_clock+0x300>)
     b38:	4298      	cmp	r0, r3
     b3a:	f000 80eb 	beq.w	d14 <sysclk_enable_peripheral_clock+0x3cc>
     b3e:	d82c      	bhi.n	b9a <sysclk_enable_peripheral_clock+0x252>
     b40:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
     b44:	4298      	cmp	r0, r3
     b46:	f000 80e0 	beq.w	d0a <sysclk_enable_peripheral_clock+0x3c2>
     b4a:	f503 6380 	add.w	r3, r3, #1024	; 0x400
     b4e:	4298      	cmp	r0, r3
     b50:	d122      	bne.n	b98 <sysclk_enable_peripheral_clock+0x250>
	sysclk_priv_enable_module(PM_CLK_GRP_PBD, module_index);
     b52:	2102      	movs	r1, #2
     b54:	2005      	movs	r0, #5
     b56:	4b2e      	ldr	r3, [pc, #184]	; (c10 <sysclk_enable_peripheral_clock+0x2c8>)
     b58:	4798      	blx	r3
     b5a:	bd08      	pop	{r3, pc}
     b5c:	f5a3 4378 	sub.w	r3, r3, #63488	; 0xf800
     b60:	4298      	cmp	r0, r3
     b62:	f000 80c3 	beq.w	cec <sysclk_enable_peripheral_clock+0x3a4>
     b66:	d90c      	bls.n	b82 <sysclk_enable_peripheral_clock+0x23a>
     b68:	4b38      	ldr	r3, [pc, #224]	; (c4c <sysclk_enable_peripheral_clock+0x304>)
     b6a:	4298      	cmp	r0, r3
     b6c:	f000 80c3 	beq.w	cf6 <sysclk_enable_peripheral_clock+0x3ae>
     b70:	f503 6380 	add.w	r3, r3, #1024	; 0x400
     b74:	4298      	cmp	r0, r3
     b76:	d10e      	bne.n	b96 <sysclk_enable_peripheral_clock+0x24e>
	sysclk_priv_enable_module(PM_CLK_GRP_PBC, module_index);
     b78:	2104      	movs	r1, #4
     b7a:	4608      	mov	r0, r1
     b7c:	4b24      	ldr	r3, [pc, #144]	; (c10 <sysclk_enable_peripheral_clock+0x2c8>)
     b7e:	4798      	blx	r3
     b80:	bd08      	pop	{r3, pc}
     b82:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
     b86:	4298      	cmp	r0, r3
     b88:	d104      	bne.n	b94 <sysclk_enable_peripheral_clock+0x24c>
     b8a:	2101      	movs	r1, #1
     b8c:	2004      	movs	r0, #4
     b8e:	4b20      	ldr	r3, [pc, #128]	; (c10 <sysclk_enable_peripheral_clock+0x2c8>)
     b90:	4798      	blx	r3
     b92:	bd08      	pop	{r3, pc}
     b94:	bd08      	pop	{r3, pc}
     b96:	bd08      	pop	{r3, pc}
     b98:	bd08      	pop	{r3, pc}
     b9a:	4b2d      	ldr	r3, [pc, #180]	; (c50 <sysclk_enable_peripheral_clock+0x308>)
     b9c:	4298      	cmp	r0, r3
     b9e:	f000 80be 	beq.w	d1e <sysclk_enable_peripheral_clock+0x3d6>
     ba2:	f503 6380 	add.w	r3, r3, #1024	; 0x400
     ba6:	4298      	cmp	r0, r3
     ba8:	d104      	bne.n	bb4 <sysclk_enable_peripheral_clock+0x26c>
	sysclk_priv_enable_module(PM_CLK_GRP_PBD, module_index);
     baa:	2105      	movs	r1, #5
     bac:	4608      	mov	r0, r1
     bae:	4b18      	ldr	r3, [pc, #96]	; (c10 <sysclk_enable_peripheral_clock+0x2c8>)
     bb0:	4798      	blx	r3
     bb2:	bd08      	pop	{r3, pc}
     bb4:	bd08      	pop	{r3, pc}
		sysclk_enable_pba_module(SYSCLK_SPI);
     bb6:	2001      	movs	r0, #1
     bb8:	4b19      	ldr	r3, [pc, #100]	; (c20 <sysclk_enable_peripheral_clock+0x2d8>)
     bba:	4798      	blx	r3
		break;
     bbc:	bd08      	pop	{r3, pc}
		sysclk_enable_pba_module(SYSCLK_TC0);
     bbe:	2002      	movs	r0, #2
     bc0:	4b17      	ldr	r3, [pc, #92]	; (c20 <sysclk_enable_peripheral_clock+0x2d8>)
     bc2:	4798      	blx	r3
	temp_mask = PM->PM_PBADIVMASK;
     bc4:	4b10      	ldr	r3, [pc, #64]	; (c08 <sysclk_enable_peripheral_clock+0x2c0>)
     bc6:	6c1a      	ldr	r2, [r3, #64]	; 0x40
	temp_mask |= mask;
     bc8:	f042 0255 	orr.w	r2, r2, #85	; 0x55
	PM->PM_UNLOCK = PM_UNLOCK_KEY(0xAAu)
     bcc:	4916      	ldr	r1, [pc, #88]	; (c28 <sysclk_enable_peripheral_clock+0x2e0>)
     bce:	6599      	str	r1, [r3, #88]	; 0x58
	PM->PM_PBADIVMASK = temp_mask;
     bd0:	641a      	str	r2, [r3, #64]	; 0x40
     bd2:	bd08      	pop	{r3, pc}
		sysclk_enable_pba_module(SYSCLK_TWIM0);
     bd4:	2004      	movs	r0, #4
     bd6:	4b12      	ldr	r3, [pc, #72]	; (c20 <sysclk_enable_peripheral_clock+0x2d8>)
     bd8:	4798      	blx	r3
		break;
     bda:	bd08      	pop	{r3, pc}
		sysclk_enable_pba_module(SYSCLK_TWIM1);
     bdc:	2006      	movs	r0, #6
     bde:	4b10      	ldr	r3, [pc, #64]	; (c20 <sysclk_enable_peripheral_clock+0x2d8>)
     be0:	4798      	blx	r3
		break;
     be2:	bd08      	pop	{r3, pc}
		sysclk_enable_pba_module(SYSCLK_TWIS1);
     be4:	2007      	movs	r0, #7
     be6:	4b0e      	ldr	r3, [pc, #56]	; (c20 <sysclk_enable_peripheral_clock+0x2d8>)
     be8:	4798      	blx	r3
		break;
     bea:	bd08      	pop	{r3, pc}
		sysclk_enable_pba_module(SYSCLK_USART1);
     bec:	2009      	movs	r0, #9
     bee:	4b0c      	ldr	r3, [pc, #48]	; (c20 <sysclk_enable_peripheral_clock+0x2d8>)
     bf0:	4798      	blx	r3
	temp_mask = PM->PM_PBADIVMASK;
     bf2:	4b05      	ldr	r3, [pc, #20]	; (c08 <sysclk_enable_peripheral_clock+0x2c0>)
     bf4:	6c1a      	ldr	r2, [r3, #64]	; 0x40
	temp_mask |= mask;
     bf6:	f042 0204 	orr.w	r2, r2, #4
	PM->PM_UNLOCK = PM_UNLOCK_KEY(0xAAu)
     bfa:	490b      	ldr	r1, [pc, #44]	; (c28 <sysclk_enable_peripheral_clock+0x2e0>)
     bfc:	6599      	str	r1, [r3, #88]	; 0x58
	PM->PM_PBADIVMASK = temp_mask;
     bfe:	641a      	str	r2, [r3, #64]	; 0x40
     c00:	bd08      	pop	{r3, pc}
     c02:	bf00      	nop
     c04:	40078000 	.word	0x40078000
     c08:	400e0000 	.word	0x400e0000
     c0c:	400a5000 	.word	0x400a5000
     c10:	00000581 	.word	0x00000581
     c14:	000006ed 	.word	0x000006ed
     c18:	40040000 	.word	0x40040000
     c1c:	40068000 	.word	0x40068000
     c20:	00000641 	.word	0x00000641
     c24:	40010000 	.word	0x40010000
     c28:	aa000040 	.word	0xaa000040
     c2c:	4001c000 	.word	0x4001c000
     c30:	4001c400 	.word	0x4001c400
     c34:	40038000 	.word	0x40038000
     c38:	4006c000 	.word	0x4006c000
     c3c:	400a0000 	.word	0x400a0000
     c40:	400a6000 	.word	0x400a6000
     c44:	400f0000 	.word	0x400f0000
     c48:	400f0c00 	.word	0x400f0c00
     c4c:	400e0c00 	.word	0x400e0c00
     c50:	400f1000 	.word	0x400f1000
		sysclk_enable_pba_module(SYSCLK_USART3);
     c54:	200b      	movs	r0, #11
     c56:	4b34      	ldr	r3, [pc, #208]	; (d28 <sysclk_enable_peripheral_clock+0x3e0>)
     c58:	4798      	blx	r3
	temp_mask = PM->PM_PBADIVMASK;
     c5a:	4b34      	ldr	r3, [pc, #208]	; (d2c <sysclk_enable_peripheral_clock+0x3e4>)
     c5c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
	temp_mask |= mask;
     c5e:	f042 0204 	orr.w	r2, r2, #4
	PM->PM_UNLOCK = PM_UNLOCK_KEY(0xAAu)
     c62:	4933      	ldr	r1, [pc, #204]	; (d30 <sysclk_enable_peripheral_clock+0x3e8>)
     c64:	6599      	str	r1, [r3, #88]	; 0x58
	PM->PM_PBADIVMASK = temp_mask;
     c66:	641a      	str	r2, [r3, #64]	; 0x40
     c68:	bd08      	pop	{r3, pc}
		sysclk_enable_pba_module(SYSCLK_ADCIFE);
     c6a:	200c      	movs	r0, #12
     c6c:	4b2e      	ldr	r3, [pc, #184]	; (d28 <sysclk_enable_peripheral_clock+0x3e0>)
     c6e:	4798      	blx	r3
		break;
     c70:	bd08      	pop	{r3, pc}
		sysclk_enable_pba_module(SYSCLK_ACIFC);
     c72:	200e      	movs	r0, #14
     c74:	4b2c      	ldr	r3, [pc, #176]	; (d28 <sysclk_enable_peripheral_clock+0x3e0>)
     c76:	4798      	blx	r3
		break;
     c78:	bd08      	pop	{r3, pc}
		sysclk_enable_pba_module(SYSCLK_GLOC);
     c7a:	200f      	movs	r0, #15
     c7c:	4b2a      	ldr	r3, [pc, #168]	; (d28 <sysclk_enable_peripheral_clock+0x3e0>)
     c7e:	4798      	blx	r3
		break;
     c80:	bd08      	pop	{r3, pc}
		sysclk_enable_pba_module(SYSCLK_TRNG);
     c82:	2011      	movs	r0, #17
     c84:	4b28      	ldr	r3, [pc, #160]	; (d28 <sysclk_enable_peripheral_clock+0x3e0>)
     c86:	4798      	blx	r3
		break;
     c88:	bd08      	pop	{r3, pc}
		sysclk_enable_pba_module(SYSCLK_PARC);
     c8a:	2012      	movs	r0, #18
     c8c:	4b26      	ldr	r3, [pc, #152]	; (d28 <sysclk_enable_peripheral_clock+0x3e0>)
     c8e:	4798      	blx	r3
		break;
     c90:	bd08      	pop	{r3, pc}
		sysclk_enable_pba_module(SYSCLK_TWIM2);
     c92:	2015      	movs	r0, #21
     c94:	4b24      	ldr	r3, [pc, #144]	; (d28 <sysclk_enable_peripheral_clock+0x3e0>)
     c96:	4798      	blx	r3
		break;
     c98:	bd08      	pop	{r3, pc}
		sysclk_enable_pba_module(SYSCLK_LCDCA);
     c9a:	2017      	movs	r0, #23
     c9c:	4b22      	ldr	r3, [pc, #136]	; (d28 <sysclk_enable_peripheral_clock+0x3e0>)
     c9e:	4798      	blx	r3
		break;
     ca0:	bd08      	pop	{r3, pc}
	sysclk_priv_enable_module(PM_CLK_GRP_HSB, module_index);
     ca2:	2101      	movs	r1, #1
     ca4:	4608      	mov	r0, r1
     ca6:	4b23      	ldr	r3, [pc, #140]	; (d34 <sysclk_enable_peripheral_clock+0x3ec>)
     ca8:	4798      	blx	r3
		sysclk_enable_pbb_module(SYSCLK_HFLASHC_REGS);
     caa:	2000      	movs	r0, #0
     cac:	4b22      	ldr	r3, [pc, #136]	; (d38 <sysclk_enable_peripheral_clock+0x3f0>)
     cae:	4798      	blx	r3
		break;
     cb0:	bd08      	pop	{r3, pc}
		sysclk_enable_pbb_module(SYSCLK_HMATRIX);
     cb2:	2002      	movs	r0, #2
     cb4:	4b20      	ldr	r3, [pc, #128]	; (d38 <sysclk_enable_peripheral_clock+0x3f0>)
     cb6:	4798      	blx	r3
		break;
     cb8:	bd08      	pop	{r3, pc}
     cba:	2100      	movs	r1, #0
     cbc:	2001      	movs	r0, #1
     cbe:	4b1d      	ldr	r3, [pc, #116]	; (d34 <sysclk_enable_peripheral_clock+0x3ec>)
     cc0:	4798      	blx	r3
		sysclk_enable_pbb_module(SYSCLK_PDCA_PB);
     cc2:	2003      	movs	r0, #3
     cc4:	4b1c      	ldr	r3, [pc, #112]	; (d38 <sysclk_enable_peripheral_clock+0x3f0>)
     cc6:	4798      	blx	r3
		break;
     cc8:	bd08      	pop	{r3, pc}
     cca:	2103      	movs	r1, #3
     ccc:	2001      	movs	r0, #1
     cce:	4b19      	ldr	r3, [pc, #100]	; (d34 <sysclk_enable_peripheral_clock+0x3ec>)
     cd0:	4798      	blx	r3

	case USBC_ADDR:
		sysclk_enable_hsb_module(SYSCLK_USBC_DATA);
		sysclk_enable_pbb_module(SYSCLK_USBC_REGS);
     cd2:	2005      	movs	r0, #5
     cd4:	4b18      	ldr	r3, [pc, #96]	; (d38 <sysclk_enable_peripheral_clock+0x3f0>)
     cd6:	4798      	blx	r3
		break;
     cd8:	bd08      	pop	{r3, pc}

	case PEVC_ADDR:
		sysclk_enable_pbb_module(SYSCLK_PEVC);
     cda:	2006      	movs	r0, #6
     cdc:	4b16      	ldr	r3, [pc, #88]	; (d38 <sysclk_enable_peripheral_clock+0x3f0>)
     cde:	4798      	blx	r3
		break;
     ce0:	bd08      	pop	{r3, pc}
	sysclk_priv_enable_module(PM_CLK_GRP_PBC, module_index);
     ce2:	2100      	movs	r1, #0
     ce4:	2004      	movs	r0, #4
     ce6:	4b13      	ldr	r3, [pc, #76]	; (d34 <sysclk_enable_peripheral_clock+0x3ec>)
     ce8:	4798      	blx	r3
     cea:	bd08      	pop	{r3, pc}
     cec:	2102      	movs	r1, #2
     cee:	2004      	movs	r0, #4
     cf0:	4b10      	ldr	r3, [pc, #64]	; (d34 <sysclk_enable_peripheral_clock+0x3ec>)
     cf2:	4798      	blx	r3
     cf4:	bd08      	pop	{r3, pc}
     cf6:	2103      	movs	r1, #3
     cf8:	2004      	movs	r0, #4
     cfa:	4b0e      	ldr	r3, [pc, #56]	; (d34 <sysclk_enable_peripheral_clock+0x3ec>)
     cfc:	4798      	blx	r3
     cfe:	bd08      	pop	{r3, pc}
	sysclk_priv_enable_module(PM_CLK_GRP_PBD, module_index);
     d00:	2100      	movs	r1, #0
     d02:	2005      	movs	r0, #5
     d04:	4b0b      	ldr	r3, [pc, #44]	; (d34 <sysclk_enable_peripheral_clock+0x3ec>)
     d06:	4798      	blx	r3
     d08:	bd08      	pop	{r3, pc}
     d0a:	2101      	movs	r1, #1
     d0c:	2005      	movs	r0, #5
     d0e:	4b09      	ldr	r3, [pc, #36]	; (d34 <sysclk_enable_peripheral_clock+0x3ec>)
     d10:	4798      	blx	r3
     d12:	bd08      	pop	{r3, pc}
     d14:	2103      	movs	r1, #3
     d16:	2005      	movs	r0, #5
     d18:	4b06      	ldr	r3, [pc, #24]	; (d34 <sysclk_enable_peripheral_clock+0x3ec>)
     d1a:	4798      	blx	r3
     d1c:	bd08      	pop	{r3, pc}
     d1e:	2104      	movs	r1, #4
     d20:	2005      	movs	r0, #5
     d22:	4b04      	ldr	r3, [pc, #16]	; (d34 <sysclk_enable_peripheral_clock+0x3ec>)
     d24:	4798      	blx	r3
     d26:	bd08      	pop	{r3, pc}
     d28:	00000641 	.word	0x00000641
     d2c:	400e0000 	.word	0x400e0000
     d30:	aa000040 	.word	0xaa000040
     d34:	00000581 	.word	0x00000581
     d38:	000006ed 	.word	0x000006ed

00000d3c <sysclk_disable_peripheral_clock>:
 *  has an associated clock on the HSB bus, this will be disabled also.
 *
 * \param module Pointer to the module's base address.
 */
void sysclk_disable_peripheral_clock(const volatile void *module)
{
     d3c:	b508      	push	{r3, lr}
	switch ((uintptr_t)module) {
     d3e:	4baf      	ldr	r3, [pc, #700]	; (ffc <sysclk_disable_peripheral_clock+0x2c0>)
     d40:	4298      	cmp	r0, r3
     d42:	f000 8183 	beq.w	104c <__stack_size__+0x4c>
     d46:	d924      	bls.n	d92 <sysclk_disable_peripheral_clock+0x56>
     d48:	4bad      	ldr	r3, [pc, #692]	; (1000 <__stack_size__>)
     d4a:	4298      	cmp	r0, r3
     d4c:	f000 81a2 	beq.w	1094 <__stack_size__+0x94>
     d50:	f200 80de 	bhi.w	f10 <sysclk_disable_peripheral_clock+0x1d4>
     d54:	f5a3 337c 	sub.w	r3, r3, #258048	; 0x3f000
     d58:	4298      	cmp	r0, r3
     d5a:	f000 8183 	beq.w	1064 <__stack_size__+0x64>
     d5e:	f240 809b 	bls.w	e98 <sysclk_disable_peripheral_clock+0x15c>
     d62:	4ba8      	ldr	r3, [pc, #672]	; (1004 <__stack_size__+0x4>)
     d64:	4298      	cmp	r0, r3
     d66:	f000 8189 	beq.w	107c <__stack_size__+0x7c>
     d6a:	f200 80b6 	bhi.w	eda <sysclk_disable_peripheral_clock+0x19e>
     d6e:	f5a3 5340 	sub.w	r3, r3, #12288	; 0x3000
     d72:	4298      	cmp	r0, r3
     d74:	f000 817a 	beq.w	106c <__stack_size__+0x6c>
     d78:	f503 5300 	add.w	r3, r3, #8192	; 0x2000
     d7c:	4298      	cmp	r0, r3
     d7e:	f040 80ab 	bne.w	ed8 <sysclk_disable_peripheral_clock+0x19c>
	sysclk_priv_disable_module(PM_CLK_GRP_HSB, module_index);
     d82:	2104      	movs	r1, #4
     d84:	2001      	movs	r0, #1
     d86:	4ba0      	ldr	r3, [pc, #640]	; (1008 <__stack_size__+0x8>)
     d88:	4798      	blx	r3
		sysclk_disable_pbb_module(SYSCLK_PDCA_PB);
		break;

	case CRCCU_ADDR:
		sysclk_disable_hsb_module(SYSCLK_CRCCU_DATA);
		sysclk_disable_pbb_module(SYSCLK_CRCCU_REGS);
     d8a:	2004      	movs	r0, #4
     d8c:	4b9f      	ldr	r3, [pc, #636]	; (100c <__stack_size__+0xc>)
     d8e:	4798      	blx	r3
		break;
     d90:	e0af      	b.n	ef2 <sysclk_disable_peripheral_clock+0x1b6>
	switch ((uintptr_t)module) {
     d92:	f5a3 23a0 	sub.w	r3, r3, #327680	; 0x50000
     d96:	4298      	cmp	r0, r3
     d98:	f000 8113 	beq.w	fc2 <sysclk_disable_peripheral_clock+0x286>
     d9c:	d916      	bls.n	dcc <sysclk_disable_peripheral_clock+0x90>
     d9e:	4b9c      	ldr	r3, [pc, #624]	; (1010 <__stack_size__+0x10>)
     da0:	4298      	cmp	r0, r3
     da2:	f000 811a 	beq.w	fda <sysclk_disable_peripheral_clock+0x29e>
     da6:	d94d      	bls.n	e44 <sysclk_disable_peripheral_clock+0x108>
     da8:	4b9a      	ldr	r3, [pc, #616]	; (1014 <__stack_size__+0x14>)
     daa:	4298      	cmp	r0, r3
     dac:	f000 811d 	beq.w	fea <sysclk_disable_peripheral_clock+0x2ae>
     db0:	d865      	bhi.n	e7e <sysclk_disable_peripheral_clock+0x142>
     db2:	f5a3 4300 	sub.w	r3, r3, #32768	; 0x8000
     db6:	4298      	cmp	r0, r3
     db8:	f000 8113 	beq.w	fe2 <sysclk_disable_peripheral_clock+0x2a6>
     dbc:	f503 4380 	add.w	r3, r3, #16384	; 0x4000
     dc0:	4298      	cmp	r0, r3
     dc2:	d15b      	bne.n	e7c <sysclk_disable_peripheral_clock+0x140>
		sysclk_disable_pba_module(SYSCLK_ABDACB);
     dc4:	2010      	movs	r0, #16
     dc6:	4b94      	ldr	r3, [pc, #592]	; (1018 <__stack_size__+0x18>)
     dc8:	4798      	blx	r3
		break;
     dca:	e092      	b.n	ef2 <sysclk_disable_peripheral_clock+0x1b6>
	switch ((uintptr_t)module) {
     dcc:	f5a3 3380 	sub.w	r3, r3, #65536	; 0x10000
     dd0:	4298      	cmp	r0, r3
     dd2:	f000 80ea 	beq.w	faa <sysclk_disable_peripheral_clock+0x26e>
     dd6:	d81a      	bhi.n	e0e <sysclk_disable_peripheral_clock+0xd2>
     dd8:	f5a3 3380 	sub.w	r3, r3, #65536	; 0x10000
     ddc:	4298      	cmp	r0, r3
     dde:	f000 80dc 	beq.w	f9a <sysclk_disable_peripheral_clock+0x25e>
     de2:	d90b      	bls.n	dfc <sysclk_disable_peripheral_clock+0xc0>
     de4:	4b8d      	ldr	r3, [pc, #564]	; (101c <__stack_size__+0x1c>)
     de6:	4298      	cmp	r0, r3
     de8:	f000 80db 	beq.w	fa2 <sysclk_disable_peripheral_clock+0x266>
     dec:	f503 4380 	add.w	r3, r3, #16384	; 0x4000
     df0:	4298      	cmp	r0, r3
     df2:	d10b      	bne.n	e0c <sysclk_disable_peripheral_clock+0xd0>
		sysclk_disable_pba_module(SYSCLK_TC1);
     df4:	2003      	movs	r0, #3
     df6:	4b88      	ldr	r3, [pc, #544]	; (1018 <__stack_size__+0x18>)
     df8:	4798      	blx	r3
		break;
     dfa:	e07a      	b.n	ef2 <sysclk_disable_peripheral_clock+0x1b6>
	switch ((uintptr_t)module) {
     dfc:	f1b0 2f40 	cmp.w	r0, #1073758208	; 0x40004000
     e00:	d103      	bne.n	e0a <sysclk_disable_peripheral_clock+0xce>
		sysclk_disable_pba_module(SYSCLK_IISC);
     e02:	2000      	movs	r0, #0
     e04:	4b84      	ldr	r3, [pc, #528]	; (1018 <__stack_size__+0x18>)
     e06:	4798      	blx	r3
		break;
     e08:	e073      	b.n	ef2 <sysclk_disable_peripheral_clock+0x1b6>
     e0a:	bd08      	pop	{r3, pc}
     e0c:	bd08      	pop	{r3, pc}
	switch ((uintptr_t)module) {
     e0e:	4b84      	ldr	r3, [pc, #528]	; (1020 <__stack_size__+0x20>)
     e10:	4298      	cmp	r0, r3
     e12:	f000 80ce 	beq.w	fb2 <sysclk_disable_peripheral_clock+0x276>
     e16:	d90b      	bls.n	e30 <sysclk_disable_peripheral_clock+0xf4>
     e18:	4b82      	ldr	r3, [pc, #520]	; (1024 <__stack_size__+0x24>)
     e1a:	4298      	cmp	r0, r3
     e1c:	f000 80cd 	beq.w	fba <sysclk_disable_peripheral_clock+0x27e>
     e20:	f503 43f8 	add.w	r3, r3, #31744	; 0x7c00
     e24:	4298      	cmp	r0, r3
     e26:	d10c      	bne.n	e42 <sysclk_disable_peripheral_clock+0x106>
		sysclk_disable_pba_module(SYSCLK_USART0);
     e28:	2008      	movs	r0, #8
     e2a:	4b7b      	ldr	r3, [pc, #492]	; (1018 <__stack_size__+0x18>)
     e2c:	4798      	blx	r3
		break;
     e2e:	e060      	b.n	ef2 <sysclk_disable_peripheral_clock+0x1b6>
	switch ((uintptr_t)module) {
     e30:	f5a3 5370 	sub.w	r3, r3, #15360	; 0x3c00
     e34:	4298      	cmp	r0, r3
     e36:	d103      	bne.n	e40 <sysclk_disable_peripheral_clock+0x104>
		sysclk_disable_pba_module(SYSCLK_TWIS0);
     e38:	2005      	movs	r0, #5
     e3a:	4b77      	ldr	r3, [pc, #476]	; (1018 <__stack_size__+0x18>)
     e3c:	4798      	blx	r3
		break;
     e3e:	e058      	b.n	ef2 <sysclk_disable_peripheral_clock+0x1b6>
     e40:	bd08      	pop	{r3, pc}
     e42:	bd08      	pop	{r3, pc}
	switch ((uintptr_t)module) {
     e44:	f5a3 3380 	sub.w	r3, r3, #65536	; 0x10000
     e48:	4298      	cmp	r0, r3
     e4a:	f000 80be 	beq.w	fca <sysclk_disable_peripheral_clock+0x28e>
     e4e:	d90b      	bls.n	e68 <sysclk_disable_peripheral_clock+0x12c>
     e50:	4b75      	ldr	r3, [pc, #468]	; (1028 <__stack_size__+0x28>)
     e52:	4298      	cmp	r0, r3
     e54:	f000 80bd 	beq.w	fd2 <sysclk_disable_peripheral_clock+0x296>
     e58:	f503 4380 	add.w	r3, r3, #16384	; 0x4000
     e5c:	4298      	cmp	r0, r3
     e5e:	d10c      	bne.n	e7a <sysclk_disable_peripheral_clock+0x13e>
		sysclk_disable_pba_module(SYSCLK_DACC);
     e60:	200d      	movs	r0, #13
     e62:	4b6d      	ldr	r3, [pc, #436]	; (1018 <__stack_size__+0x18>)
     e64:	4798      	blx	r3
		break;
     e66:	e044      	b.n	ef2 <sysclk_disable_peripheral_clock+0x1b6>
	switch ((uintptr_t)module) {
     e68:	f5a3 4380 	sub.w	r3, r3, #16384	; 0x4000
     e6c:	4298      	cmp	r0, r3
     e6e:	d103      	bne.n	e78 <sysclk_disable_peripheral_clock+0x13c>
		sysclk_disable_pba_module(SYSCLK_USART2);
     e70:	200a      	movs	r0, #10
     e72:	4b69      	ldr	r3, [pc, #420]	; (1018 <__stack_size__+0x18>)
     e74:	4798      	blx	r3
		break;
     e76:	e03c      	b.n	ef2 <sysclk_disable_peripheral_clock+0x1b6>
     e78:	bd08      	pop	{r3, pc}
     e7a:	bd08      	pop	{r3, pc}
     e7c:	bd08      	pop	{r3, pc}
	switch ((uintptr_t)module) {
     e7e:	4b6b      	ldr	r3, [pc, #428]	; (102c <__stack_size__+0x2c>)
     e80:	4298      	cmp	r0, r3
     e82:	f000 80b6 	beq.w	ff2 <sysclk_disable_peripheral_clock+0x2b6>
     e86:	f503 4380 	add.w	r3, r3, #16384	; 0x4000
     e8a:	4298      	cmp	r0, r3
     e8c:	d103      	bne.n	e96 <sysclk_disable_peripheral_clock+0x15a>
		sysclk_disable_pba_module(SYSCLK_CATB);
     e8e:	2013      	movs	r0, #19
     e90:	4b61      	ldr	r3, [pc, #388]	; (1018 <__stack_size__+0x18>)
     e92:	4798      	blx	r3
		break;
     e94:	e02d      	b.n	ef2 <sysclk_disable_peripheral_clock+0x1b6>
     e96:	bd08      	pop	{r3, pc}
	switch ((uintptr_t)module) {
     e98:	f5a3 3304 	sub.w	r3, r3, #135168	; 0x21000
     e9c:	4298      	cmp	r0, r3
     e9e:	f000 80d9 	beq.w	1054 <__stack_size__+0x54>
     ea2:	d90f      	bls.n	ec4 <sysclk_disable_peripheral_clock+0x188>
     ea4:	4b62      	ldr	r3, [pc, #392]	; (1030 <__stack_size__+0x30>)
     ea6:	4298      	cmp	r0, r3
     ea8:	f000 80d8 	beq.w	105c <__stack_size__+0x5c>
     eac:	f503 6380 	add.w	r3, r3, #1024	; 0x400
     eb0:	4298      	cmp	r0, r3
     eb2:	d110      	bne.n	ed6 <sysclk_disable_peripheral_clock+0x19a>
     eb4:	2102      	movs	r1, #2
     eb6:	2001      	movs	r0, #1
     eb8:	4b53      	ldr	r3, [pc, #332]	; (1008 <__stack_size__+0x8>)
     eba:	4798      	blx	r3
		sysclk_disable_pbb_module(SYSCLK_HRAMC1_REGS);
     ebc:	2001      	movs	r0, #1
     ebe:	4b53      	ldr	r3, [pc, #332]	; (100c <__stack_size__+0xc>)
     ec0:	4798      	blx	r3
		break;
     ec2:	e016      	b.n	ef2 <sysclk_disable_peripheral_clock+0x1b6>
	switch ((uintptr_t)module) {
     ec4:	f5a3 4380 	sub.w	r3, r3, #16384	; 0x4000
     ec8:	4298      	cmp	r0, r3
     eca:	d103      	bne.n	ed4 <sysclk_disable_peripheral_clock+0x198>
		sysclk_disable_pba_module(SYSCLK_TWIM3);
     ecc:	2016      	movs	r0, #22
     ece:	4b52      	ldr	r3, [pc, #328]	; (1018 <__stack_size__+0x18>)
     ed0:	4798      	blx	r3
		break;
     ed2:	e00e      	b.n	ef2 <sysclk_disable_peripheral_clock+0x1b6>
     ed4:	bd08      	pop	{r3, pc}
     ed6:	bd08      	pop	{r3, pc}
     ed8:	bd08      	pop	{r3, pc}
	switch ((uintptr_t)module) {
     eda:	4b56      	ldr	r3, [pc, #344]	; (1034 <__stack_size__+0x34>)
     edc:	4298      	cmp	r0, r3
     ede:	f000 80d5 	beq.w	108c <__stack_size__+0x8c>
     ee2:	f503 4320 	add.w	r3, r3, #40960	; 0xa000
     ee6:	4298      	cmp	r0, r3
     ee8:	d111      	bne.n	f0e <sysclk_disable_peripheral_clock+0x1d2>
     eea:	2109      	movs	r1, #9
     eec:	2001      	movs	r0, #1
     eee:	4b46      	ldr	r3, [pc, #280]	; (1008 <__stack_size__+0x8>)
     ef0:	4798      	blx	r3
							(1 << SYSCLK_TC1) | \
							(1 << SYSCLK_USART0) | \
							(1 << SYSCLK_USART1) | \
							(1 << SYSCLK_USART2) | \
							(1 << SYSCLK_USART3))
	if ((PM->PM_PBAMASK & PBADIV_CLKSRC_MASK) == 0) {
     ef2:	4b43      	ldr	r3, [pc, #268]	; (1000 <__stack_size__>)
     ef4:	6a9a      	ldr	r2, [r3, #40]	; 0x28
     ef6:	f640 730c 	movw	r3, #3852	; 0xf0c
     efa:	421a      	tst	r2, r3
     efc:	d106      	bne.n	f0c <sysclk_disable_peripheral_clock+0x1d0>
 */
static inline void sysclk_disable_pba_divmask(uint32_t mask)
{
	uint32_t temp_mask;

	temp_mask = PM->PM_PBADIVMASK;
     efe:	4b40      	ldr	r3, [pc, #256]	; (1000 <__stack_size__>)
     f00:	6c1a      	ldr	r2, [r3, #64]	; 0x40
	temp_mask &= ~mask;
     f02:	f022 027f 	bic.w	r2, r2, #127	; 0x7f
	PM->PM_UNLOCK = PM_UNLOCK_KEY(0xAAu)
     f06:	494c      	ldr	r1, [pc, #304]	; (1038 <__stack_size__+0x38>)
     f08:	6599      	str	r1, [r3, #88]	; 0x58
			| PM_UNLOCK_ADDR((uint32_t)&PM->PM_PBADIVMASK - (uint32_t)PM);
	PM->PM_PBADIVMASK = temp_mask;
     f0a:	641a      	str	r2, [r3, #64]	; 0x40
     f0c:	bd08      	pop	{r3, pc}
     f0e:	bd08      	pop	{r3, pc}
	switch ((uintptr_t)module) {
     f10:	4b4a      	ldr	r3, [pc, #296]	; (103c <__stack_size__+0x3c>)
     f12:	4298      	cmp	r0, r3
     f14:	f000 80cd 	beq.w	10b2 <__stack_size__+0xb2>
     f18:	d912      	bls.n	f40 <sysclk_disable_peripheral_clock+0x204>
     f1a:	4b49      	ldr	r3, [pc, #292]	; (1040 <__stack_size__+0x40>)
     f1c:	4298      	cmp	r0, r3
     f1e:	f000 80d2 	beq.w	10c6 <__stack_size__+0xc6>
     f22:	d82c      	bhi.n	f7e <sysclk_disable_peripheral_clock+0x242>
     f24:	f5a3 6300 	sub.w	r3, r3, #2048	; 0x800
     f28:	4298      	cmp	r0, r3
     f2a:	f000 80c7 	beq.w	10bc <__stack_size__+0xbc>
     f2e:	f503 6380 	add.w	r3, r3, #1024	; 0x400
     f32:	4298      	cmp	r0, r3
     f34:	d122      	bne.n	f7c <sysclk_disable_peripheral_clock+0x240>
	sysclk_priv_disable_module(PM_CLK_GRP_PBD, module_index);
     f36:	2102      	movs	r1, #2
     f38:	2005      	movs	r0, #5
     f3a:	4b33      	ldr	r3, [pc, #204]	; (1008 <__stack_size__+0x8>)
     f3c:	4798      	blx	r3
     f3e:	e7d8      	b.n	ef2 <sysclk_disable_peripheral_clock+0x1b6>
     f40:	f5a3 4378 	sub.w	r3, r3, #63488	; 0xf800
     f44:	4298      	cmp	r0, r3
     f46:	f000 80aa 	beq.w	109e <__stack_size__+0x9e>
     f4a:	d90c      	bls.n	f66 <sysclk_disable_peripheral_clock+0x22a>
     f4c:	4b3d      	ldr	r3, [pc, #244]	; (1044 <__stack_size__+0x44>)
     f4e:	4298      	cmp	r0, r3
     f50:	f000 80aa 	beq.w	10a8 <__stack_size__+0xa8>
     f54:	f503 6380 	add.w	r3, r3, #1024	; 0x400
     f58:	4298      	cmp	r0, r3
     f5a:	d10e      	bne.n	f7a <sysclk_disable_peripheral_clock+0x23e>
	sysclk_priv_disable_module(PM_CLK_GRP_PBC, module_index);
     f5c:	2104      	movs	r1, #4
     f5e:	4608      	mov	r0, r1
     f60:	4b29      	ldr	r3, [pc, #164]	; (1008 <__stack_size__+0x8>)
     f62:	4798      	blx	r3
     f64:	e7c5      	b.n	ef2 <sysclk_disable_peripheral_clock+0x1b6>
     f66:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
     f6a:	4298      	cmp	r0, r3
     f6c:	d104      	bne.n	f78 <sysclk_disable_peripheral_clock+0x23c>
     f6e:	2101      	movs	r1, #1
     f70:	2004      	movs	r0, #4
     f72:	4b25      	ldr	r3, [pc, #148]	; (1008 <__stack_size__+0x8>)
     f74:	4798      	blx	r3
     f76:	e7bc      	b.n	ef2 <sysclk_disable_peripheral_clock+0x1b6>
     f78:	bd08      	pop	{r3, pc}
     f7a:	bd08      	pop	{r3, pc}
     f7c:	bd08      	pop	{r3, pc}
     f7e:	4b32      	ldr	r3, [pc, #200]	; (1048 <__stack_size__+0x48>)
     f80:	4298      	cmp	r0, r3
     f82:	f000 80a5 	beq.w	10d0 <__stack_size__+0xd0>
     f86:	f503 6380 	add.w	r3, r3, #1024	; 0x400
     f8a:	4298      	cmp	r0, r3
     f8c:	d104      	bne.n	f98 <sysclk_disable_peripheral_clock+0x25c>
	sysclk_priv_disable_module(PM_CLK_GRP_PBD, module_index);
     f8e:	2105      	movs	r1, #5
     f90:	4608      	mov	r0, r1
     f92:	4b1d      	ldr	r3, [pc, #116]	; (1008 <__stack_size__+0x8>)
     f94:	4798      	blx	r3
     f96:	e7ac      	b.n	ef2 <sysclk_disable_peripheral_clock+0x1b6>
     f98:	bd08      	pop	{r3, pc}
		sysclk_disable_pba_module(SYSCLK_SPI);
     f9a:	2001      	movs	r0, #1
     f9c:	4b1e      	ldr	r3, [pc, #120]	; (1018 <__stack_size__+0x18>)
     f9e:	4798      	blx	r3
		break;
     fa0:	e7a7      	b.n	ef2 <sysclk_disable_peripheral_clock+0x1b6>
		sysclk_disable_pba_module(SYSCLK_TC0);
     fa2:	2002      	movs	r0, #2
     fa4:	4b1c      	ldr	r3, [pc, #112]	; (1018 <__stack_size__+0x18>)
     fa6:	4798      	blx	r3
		break;
     fa8:	e7a3      	b.n	ef2 <sysclk_disable_peripheral_clock+0x1b6>
		sysclk_disable_pba_module(SYSCLK_TWIM0);
     faa:	2004      	movs	r0, #4
     fac:	4b1a      	ldr	r3, [pc, #104]	; (1018 <__stack_size__+0x18>)
     fae:	4798      	blx	r3
		break;
     fb0:	e79f      	b.n	ef2 <sysclk_disable_peripheral_clock+0x1b6>
		sysclk_disable_pba_module(SYSCLK_TWIM1);
     fb2:	2006      	movs	r0, #6
     fb4:	4b18      	ldr	r3, [pc, #96]	; (1018 <__stack_size__+0x18>)
     fb6:	4798      	blx	r3
		break;
     fb8:	e79b      	b.n	ef2 <sysclk_disable_peripheral_clock+0x1b6>
		sysclk_disable_pba_module(SYSCLK_TWIS1);
     fba:	2007      	movs	r0, #7
     fbc:	4b16      	ldr	r3, [pc, #88]	; (1018 <__stack_size__+0x18>)
     fbe:	4798      	blx	r3
		break;
     fc0:	e797      	b.n	ef2 <sysclk_disable_peripheral_clock+0x1b6>
		sysclk_disable_pba_module(SYSCLK_USART1);
     fc2:	2009      	movs	r0, #9
     fc4:	4b14      	ldr	r3, [pc, #80]	; (1018 <__stack_size__+0x18>)
     fc6:	4798      	blx	r3
		break;
     fc8:	e793      	b.n	ef2 <sysclk_disable_peripheral_clock+0x1b6>
		sysclk_disable_pba_module(SYSCLK_USART3);
     fca:	200b      	movs	r0, #11
     fcc:	4b12      	ldr	r3, [pc, #72]	; (1018 <__stack_size__+0x18>)
     fce:	4798      	blx	r3
		break;
     fd0:	e78f      	b.n	ef2 <sysclk_disable_peripheral_clock+0x1b6>
		sysclk_disable_pba_module(SYSCLK_ADCIFE);
     fd2:	200c      	movs	r0, #12
     fd4:	4b10      	ldr	r3, [pc, #64]	; (1018 <__stack_size__+0x18>)
     fd6:	4798      	blx	r3
		break;
     fd8:	e78b      	b.n	ef2 <sysclk_disable_peripheral_clock+0x1b6>
		sysclk_disable_pba_module(SYSCLK_ACIFC);
     fda:	200e      	movs	r0, #14
     fdc:	4b0e      	ldr	r3, [pc, #56]	; (1018 <__stack_size__+0x18>)
     fde:	4798      	blx	r3
		break;
     fe0:	e787      	b.n	ef2 <sysclk_disable_peripheral_clock+0x1b6>
		sysclk_disable_pba_module(SYSCLK_GLOC);
     fe2:	200f      	movs	r0, #15
     fe4:	4b0c      	ldr	r3, [pc, #48]	; (1018 <__stack_size__+0x18>)
     fe6:	4798      	blx	r3
		break;
     fe8:	e783      	b.n	ef2 <sysclk_disable_peripheral_clock+0x1b6>
		sysclk_disable_pba_module(SYSCLK_TRNG);
     fea:	2011      	movs	r0, #17
     fec:	4b0a      	ldr	r3, [pc, #40]	; (1018 <__stack_size__+0x18>)
     fee:	4798      	blx	r3
		break;
     ff0:	e77f      	b.n	ef2 <sysclk_disable_peripheral_clock+0x1b6>
		sysclk_disable_pba_module(SYSCLK_PARC);
     ff2:	2012      	movs	r0, #18
     ff4:	4b08      	ldr	r3, [pc, #32]	; (1018 <__stack_size__+0x18>)
     ff6:	4798      	blx	r3
		break;
     ff8:	e77b      	b.n	ef2 <sysclk_disable_peripheral_clock+0x1b6>
     ffa:	bf00      	nop
     ffc:	40078000 	.word	0x40078000
    1000:	400e0000 	.word	0x400e0000
    1004:	400a5000 	.word	0x400a5000
    1008:	000005e1 	.word	0x000005e1
    100c:	00000745 	.word	0x00000745
    1010:	40040000 	.word	0x40040000
    1014:	40068000 	.word	0x40068000
    1018:	00000699 	.word	0x00000699
    101c:	40010000 	.word	0x40010000
    1020:	4001c000 	.word	0x4001c000
    1024:	4001c400 	.word	0x4001c400
    1028:	40038000 	.word	0x40038000
    102c:	4006c000 	.word	0x4006c000
    1030:	400a0000 	.word	0x400a0000
    1034:	400a6000 	.word	0x400a6000
    1038:	aa000040 	.word	0xaa000040
    103c:	400f0000 	.word	0x400f0000
    1040:	400f0c00 	.word	0x400f0c00
    1044:	400e0c00 	.word	0x400e0c00
    1048:	400f1000 	.word	0x400f1000
		sysclk_disable_pba_module(SYSCLK_TWIM2);
    104c:	2015      	movs	r0, #21
    104e:	4b23      	ldr	r3, [pc, #140]	; (10dc <__stack_size__+0xdc>)
    1050:	4798      	blx	r3
		break;
    1052:	e74e      	b.n	ef2 <sysclk_disable_peripheral_clock+0x1b6>
		sysclk_disable_pba_module(SYSCLK_LCDCA);
    1054:	2017      	movs	r0, #23
    1056:	4b21      	ldr	r3, [pc, #132]	; (10dc <__stack_size__+0xdc>)
    1058:	4798      	blx	r3
		break;
    105a:	e74a      	b.n	ef2 <sysclk_disable_peripheral_clock+0x1b6>
		sysclk_disable_pbb_module(SYSCLK_HFLASHC_REGS);
    105c:	2000      	movs	r0, #0
    105e:	4b20      	ldr	r3, [pc, #128]	; (10e0 <__stack_size__+0xe0>)
    1060:	4798      	blx	r3
		break;
    1062:	e746      	b.n	ef2 <sysclk_disable_peripheral_clock+0x1b6>
		sysclk_disable_pbb_module(SYSCLK_HMATRIX);
    1064:	2002      	movs	r0, #2
    1066:	4b1e      	ldr	r3, [pc, #120]	; (10e0 <__stack_size__+0xe0>)
    1068:	4798      	blx	r3
		break;
    106a:	e742      	b.n	ef2 <sysclk_disable_peripheral_clock+0x1b6>
	sysclk_priv_disable_module(PM_CLK_GRP_HSB, module_index);
    106c:	2100      	movs	r1, #0
    106e:	2001      	movs	r0, #1
    1070:	4b1c      	ldr	r3, [pc, #112]	; (10e4 <__stack_size__+0xe4>)
    1072:	4798      	blx	r3
		sysclk_disable_pbb_module(SYSCLK_PDCA_PB);
    1074:	2003      	movs	r0, #3
    1076:	4b1a      	ldr	r3, [pc, #104]	; (10e0 <__stack_size__+0xe0>)
    1078:	4798      	blx	r3
		break;
    107a:	e73a      	b.n	ef2 <sysclk_disable_peripheral_clock+0x1b6>
    107c:	2103      	movs	r1, #3
    107e:	2001      	movs	r0, #1
    1080:	4b18      	ldr	r3, [pc, #96]	; (10e4 <__stack_size__+0xe4>)
    1082:	4798      	blx	r3
		sysclk_disable_pbb_module(SYSCLK_USBC_REGS);
    1084:	2005      	movs	r0, #5
    1086:	4b16      	ldr	r3, [pc, #88]	; (10e0 <__stack_size__+0xe0>)
    1088:	4798      	blx	r3
		break;
    108a:	e732      	b.n	ef2 <sysclk_disable_peripheral_clock+0x1b6>
		sysclk_disable_pbb_module(SYSCLK_PEVC);
    108c:	2006      	movs	r0, #6
    108e:	4b14      	ldr	r3, [pc, #80]	; (10e0 <__stack_size__+0xe0>)
    1090:	4798      	blx	r3
		break;
    1092:	e72e      	b.n	ef2 <sysclk_disable_peripheral_clock+0x1b6>
	sysclk_priv_disable_module(PM_CLK_GRP_PBC, module_index);
    1094:	2100      	movs	r1, #0
    1096:	2004      	movs	r0, #4
    1098:	4b12      	ldr	r3, [pc, #72]	; (10e4 <__stack_size__+0xe4>)
    109a:	4798      	blx	r3
    109c:	e729      	b.n	ef2 <sysclk_disable_peripheral_clock+0x1b6>
    109e:	2102      	movs	r1, #2
    10a0:	2004      	movs	r0, #4
    10a2:	4b10      	ldr	r3, [pc, #64]	; (10e4 <__stack_size__+0xe4>)
    10a4:	4798      	blx	r3
    10a6:	e724      	b.n	ef2 <sysclk_disable_peripheral_clock+0x1b6>
    10a8:	2103      	movs	r1, #3
    10aa:	2004      	movs	r0, #4
    10ac:	4b0d      	ldr	r3, [pc, #52]	; (10e4 <__stack_size__+0xe4>)
    10ae:	4798      	blx	r3
    10b0:	e71f      	b.n	ef2 <sysclk_disable_peripheral_clock+0x1b6>
	sysclk_priv_disable_module(PM_CLK_GRP_PBD, module_index);
    10b2:	2100      	movs	r1, #0
    10b4:	2005      	movs	r0, #5
    10b6:	4b0b      	ldr	r3, [pc, #44]	; (10e4 <__stack_size__+0xe4>)
    10b8:	4798      	blx	r3
    10ba:	e71a      	b.n	ef2 <sysclk_disable_peripheral_clock+0x1b6>
    10bc:	2101      	movs	r1, #1
    10be:	2005      	movs	r0, #5
    10c0:	4b08      	ldr	r3, [pc, #32]	; (10e4 <__stack_size__+0xe4>)
    10c2:	4798      	blx	r3
    10c4:	e715      	b.n	ef2 <sysclk_disable_peripheral_clock+0x1b6>
    10c6:	2103      	movs	r1, #3
    10c8:	2005      	movs	r0, #5
    10ca:	4b06      	ldr	r3, [pc, #24]	; (10e4 <__stack_size__+0xe4>)
    10cc:	4798      	blx	r3
    10ce:	e710      	b.n	ef2 <sysclk_disable_peripheral_clock+0x1b6>
    10d0:	2104      	movs	r1, #4
    10d2:	2005      	movs	r0, #5
    10d4:	4b03      	ldr	r3, [pc, #12]	; (10e4 <__stack_size__+0xe4>)
    10d6:	4798      	blx	r3
    10d8:	e70b      	b.n	ef2 <sysclk_disable_peripheral_clock+0x1b6>
    10da:	bf00      	nop
    10dc:	00000699 	.word	0x00000699
    10e0:	00000745 	.word	0x00000745
    10e4:	000005e1 	.word	0x000005e1

000010e8 <sysclk_init>:
   genclk_disable(7);
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
    10e8:	b530      	push	{r4, r5, lr}
    10ea:	b083      	sub	sp, #12
	uint32_t ps_value = 0;
	bool is_fwu_enabled = false;

#if CONFIG_HCACHE_ENABLE == 1
	/* Enable HCACHE */
	sysclk_enable_peripheral_clock(HCACHE);
    10ec:	4c16      	ldr	r4, [pc, #88]	; (1148 <sysclk_init+0x60>)
    10ee:	4620      	mov	r0, r4
    10f0:	4b16      	ldr	r3, [pc, #88]	; (114c <sysclk_init+0x64>)
    10f2:	4798      	blx	r3
	HCACHE->HCACHE_CTRL = HCACHE_CTRL_CEN_YES;
    10f4:	2301      	movs	r3, #1
    10f6:	60a3      	str	r3, [r4, #8]
	while (!(HCACHE->HCACHE_SR & HCACHE_SR_CSTS_EN));
    10f8:	4622      	mov	r2, r4
    10fa:	68d3      	ldr	r3, [r2, #12]
    10fc:	f013 0f01 	tst.w	r3, #1
    1100:	d0fb      	beq.n	10fa <sysclk_init+0x12>
	if (!no_halt) {
		bpm_power_scaling_cpu(bpm, ps_value);
		return true;
	}

	return bpm_power_scaling_cpu_failsafe(bpm, ps_value, 240000);
    1102:	4a13      	ldr	r2, [pc, #76]	; (1150 <sysclk_init+0x68>)
    1104:	2100      	movs	r1, #0
    1106:	4813      	ldr	r0, [pc, #76]	; (1154 <sysclk_init+0x6c>)
    1108:	4b13      	ldr	r3, [pc, #76]	; (1158 <sysclk_init+0x70>)
    110a:	4798      	blx	r3
		Assert(false);
	}

	/* Automatically switch to low power mode */
	bpm_configure_power_scaling(BPM, ps_value, BPM_PSCM_CPU_NOT_HALT);
	while ((bpm_get_status(BPM) & BPM_SR_PSOK) == 0);
    110c:	4d11      	ldr	r5, [pc, #68]	; (1154 <sysclk_init+0x6c>)
    110e:	4c13      	ldr	r4, [pc, #76]	; (115c <sysclk_init+0x74>)
    1110:	4628      	mov	r0, r5
    1112:	47a0      	blx	r4
    1114:	f010 0f01 	tst.w	r0, #1
    1118:	d0fa      	beq.n	1110 <sysclk_init+0x28>
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
    111a:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
    111e:	fab3 f383 	clz	r3, r3
    1122:	095b      	lsrs	r3, r3, #5
    1124:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
    1126:	b672      	cpsid	i
    1128:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
    112c:	2200      	movs	r2, #0
    112e:	4b0c      	ldr	r3, [pc, #48]	; (1160 <sysclk_init+0x78>)
    1130:	701a      	strb	r2, [r3, #0]
	return flags;
    1132:	9b01      	ldr	r3, [sp, #4]
	if (cpu_irq_is_enabled_flags(flags))
    1134:	b12b      	cbz	r3, 1142 <sysclk_init+0x5a>
		cpu_irq_enable();
    1136:	2201      	movs	r2, #1
    1138:	4b09      	ldr	r3, [pc, #36]	; (1160 <sysclk_init+0x78>)
    113a:	701a      	strb	r2, [r3, #0]
    113c:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
    1140:	b662      	cpsie	i

#if (defined CONFIG_SYSCLK_DEFAULT_RETURNS_SLOW_OSC)
	/* Signal that the internal frequencies are setup */
	sysclk_initialized = true;
#endif
}
    1142:	b003      	add	sp, #12
    1144:	bd30      	pop	{r4, r5, pc}
    1146:	bf00      	nop
    1148:	400a0400 	.word	0x400a0400
    114c:	00000949 	.word	0x00000949
    1150:	0003a980 	.word	0x0003a980
    1154:	400f0000 	.word	0x400f0000
    1158:	00001205 	.word	0x00001205
    115c:	00001279 	.word	0x00001279
    1160:	2000002c 	.word	0x2000002c

00001164 <board_init>:
		ioport_set_pin_mode(pin, mode);\
		ioport_disable_pin(pin);\
	} while (0)

void board_init(void)
{
    1164:	b500      	push	{lr}
    1166:	b089      	sub	sp, #36	; 0x24
#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	struct wdt_dev_inst wdt_inst;
	struct wdt_config   wdt_cfg;

	wdt_get_config_defaults(&wdt_cfg);
    1168:	a801      	add	r0, sp, #4
    116a:	4b1f      	ldr	r3, [pc, #124]	; (11e8 <board_init+0x84>)
    116c:	4798      	blx	r3
	wdt_init(&wdt_inst, WDT, &wdt_cfg);
    116e:	aa01      	add	r2, sp, #4
    1170:	491e      	ldr	r1, [pc, #120]	; (11ec <board_init+0x88>)
    1172:	a806      	add	r0, sp, #24
    1174:	4b1e      	ldr	r3, [pc, #120]	; (11f0 <board_init+0x8c>)
    1176:	4798      	blx	r3
	wdt_disable(&wdt_inst);
    1178:	a806      	add	r0, sp, #24
    117a:	4b1e      	ldr	r3, [pc, #120]	; (11f4 <board_init+0x90>)
    117c:	4798      	blx	r3
	return 1U << (pin & 0x1F);
}

__always_inline static void arch_ioport_init(void)
{
	sysclk_enable_peripheral_clock(GPIO);
    117e:	481e      	ldr	r0, [pc, #120]	; (11f8 <board_init+0x94>)
    1180:	4b1e      	ldr	r3, [pc, #120]	; (11fc <board_init+0x98>)
    1182:	4798      	blx	r3

__always_inline static void arch_ioport_set_pin_dir(ioport_pin_t pin,
		enum ioport_direction dir)
{
	if (dir == IOPORT_DIR_OUTPUT) {
		arch_ioport_pin_to_base(pin)->GPIO_ODERS = arch_ioport_pin_to_mask(pin);
    1184:	4b1e      	ldr	r3, [pc, #120]	; (1200 <board_init+0x9c>)
    1186:	2280      	movs	r2, #128	; 0x80
    1188:	645a      	str	r2, [r3, #68]	; 0x44
		// Always disable the Schmitt trigger for output pins.
		arch_ioport_pin_to_base(pin)->GPIO_STERC = arch_ioport_pin_to_mask(pin);
    118a:	f8c3 2168 	str.w	r2, [r3, #360]	; 0x168

__always_inline static void arch_ioport_set_pin_level(ioport_pin_t pin,
		bool level)
{
	if (level) {
		arch_ioport_pin_to_base(pin)->GPIO_OVRS = arch_ioport_pin_to_mask(pin);
    118e:	655a      	str	r2, [r3, #84]	; 0x54
		arch_ioport_pin_to_base(pin)->GPIO_ODERC = arch_ioport_pin_to_mask(pin);
    1190:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
    1194:	649a      	str	r2, [r3, #72]	; 0x48
		arch_ioport_pin_to_base(pin)->GPIO_STERS = arch_ioport_pin_to_mask(pin);
    1196:	f8c3 2164 	str.w	r2, [r3, #356]	; 0x164
		base->GPIO_PUERS = mask;
    119a:	675a      	str	r2, [r3, #116]	; 0x74
		base->GPIO_PDERC = mask;
    119c:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
		base->GPIO_GFERC = mask;
    11a0:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8
		base->GPIO_ODCR0C = mask;
    11a4:	f8c3 2108 	str.w	r2, [r3, #264]	; 0x108
		base->GPIO_PMR0C = mask;
    11a8:	619a      	str	r2, [r3, #24]
		base->GPIO_PMR1C = mask;
    11aa:	629a      	str	r2, [r3, #40]	; 0x28
		base->GPIO_PMR2C = mask;
    11ac:	639a      	str	r2, [r3, #56]	; 0x38
		base->GPIO_PUERC = mask;
    11ae:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
    11b2:	679a      	str	r2, [r3, #120]	; 0x78
		base->GPIO_PDERC = mask;
    11b4:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
		base->GPIO_GFERC = mask;
    11b8:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8
		base->GPIO_ODCR0C = mask;
    11bc:	f8c3 2108 	str.w	r2, [r3, #264]	; 0x108
		base->GPIO_PMR0C = mask;
    11c0:	619a      	str	r2, [r3, #24]
		base->GPIO_PMR1C = mask;
    11c2:	629a      	str	r2, [r3, #40]	; 0x28
		base->GPIO_PMR2C = mask;
    11c4:	639a      	str	r2, [r3, #56]	; 0x38
	arch_ioport_port_to_base(port)->GPIO_GPERC = mask;
    11c6:	609a      	str	r2, [r3, #8]
		base->GPIO_PUERC = mask;
    11c8:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
    11cc:	679a      	str	r2, [r3, #120]	; 0x78
		base->GPIO_PDERC = mask;
    11ce:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
		base->GPIO_GFERC = mask;
    11d2:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8
		base->GPIO_ODCR0C = mask;
    11d6:	f8c3 2108 	str.w	r2, [r3, #264]	; 0x108
		base->GPIO_PMR0C = mask;
    11da:	619a      	str	r2, [r3, #24]
		base->GPIO_PMR1C = mask;
    11dc:	629a      	str	r2, [r3, #40]	; 0x28
		base->GPIO_PMR2C = mask;
    11de:	639a      	str	r2, [r3, #56]	; 0x38
	arch_ioport_port_to_base(port)->GPIO_GPERC = mask;
    11e0:	609a      	str	r2, [r3, #8]
	ioport_set_pin_dir(UG_2832HSWEG04_DATA_CMD_GPIO, IOPORT_DIR_OUTPUT);
	ioport_set_pin_mode(UG_2832HSWEG04_DATA_CMD_GPIO, IOPORT_MODE_PULLUP);
	ioport_set_pin_dir(UG_2832HSWEG04_RESET_GPIO, IOPORT_DIR_OUTPUT);
	ioport_set_pin_mode(UG_2832HSWEG04_RESET_GPIO, IOPORT_MODE_PULLUP);
#endif
}
    11e2:	b009      	add	sp, #36	; 0x24
    11e4:	f85d fb04 	ldr.w	pc, [sp], #4
    11e8:	000012b5 	.word	0x000012b5
    11ec:	400f0c00 	.word	0x400f0c00
    11f0:	000012cd 	.word	0x000012cd
    11f4:	00001381 	.word	0x00001381
    11f8:	400e1000 	.word	0x400e1000
    11fc:	00000949 	.word	0x00000949
    1200:	400e1400 	.word	0x400e1400

00001204 <bpm_power_scaling_cpu_failsafe>:
}


bool bpm_power_scaling_cpu_failsafe(Bpm *bpm, uint32_t ps_value,
	uint32_t timeout)
{
    1204:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    1208:	b083      	sub	sp, #12
	uint32_t pmcon = 0;

	/* Read last PM_CON value */
	pmcon = bpm->BPM_PMCON;
    120a:	69c3      	ldr	r3, [r0, #28]

	/* Clear last PS Value & Write new one */
	pmcon &= ~BPM_PMCON_PS_Msk;
    120c:	f023 0e03 	bic.w	lr, r3, #3
  __ASM volatile ("MRS %0, primask" : "=r" (result) );
    1210:	f3ef 8310 	mrs	r3, PRIMASK
	volatile irqflags_t flags = cpu_irq_is_enabled();
    1214:	fab3 f383 	clz	r3, r3
    1218:	095b      	lsrs	r3, r3, #5
    121a:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
    121c:	b672      	cpsid	i
    121e:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
    1222:	2500      	movs	r5, #0
    1224:	4b11      	ldr	r3, [pc, #68]	; (126c <bpm_power_scaling_cpu_failsafe+0x68>)
    1226:	701d      	strb	r5, [r3, #0]
	return flags;
    1228:	9e01      	ldr	r6, [sp, #4]
	uint32_t ctrl, load, val;
	/* Avoid interrupt while flash halt */
	flags = cpu_irq_save();

	/* Save SysTick */
	val = SysTick->VAL;
    122a:	4c11      	ldr	r4, [pc, #68]	; (1270 <bpm_power_scaling_cpu_failsafe+0x6c>)
    122c:	f8d4 8008 	ldr.w	r8, [r4, #8]
	ctrl = SysTick->CTRL;
    1230:	6827      	ldr	r7, [r4, #0]
	load = SysTick->LOAD;
    1232:	f8d4 9004 	ldr.w	r9, [r4, #4]
	/* Setup SysTick & start counting */
	SysTick->LOAD = timeout;
    1236:	6062      	str	r2, [r4, #4]
	SysTick->CTRL = SysTick_CTRL_CLKSOURCE_Msk | SysTick_CTRL_ENABLE_Msk;
    1238:	2305      	movs	r3, #5
    123a:	6023      	str	r3, [r4, #0]
	pmcon |= BPM_PMCON_PS(ps_value);
    123c:	f001 0103 	and.w	r1, r1, #3
	pmcon |= BPM_PMCON_PSCREQ;
    1240:	f041 010c 	orr.w	r1, r1, #12

	b_psok = bpm_ps_no_halt_exec(bpm, pmcon);
    1244:	ea41 010e 	orr.w	r1, r1, lr
    1248:	4b0a      	ldr	r3, [pc, #40]	; (1274 <bpm_power_scaling_cpu_failsafe+0x70>)
    124a:	4798      	blx	r3

	/* Restore SysTick */
	SysTick->CTRL = 0;
    124c:	6025      	str	r5, [r4, #0]
	SysTick->LOAD = load;
    124e:	f8c4 9004 	str.w	r9, [r4, #4]
	SysTick->VAL = val;
    1252:	f8c4 8008 	str.w	r8, [r4, #8]
	SysTick->CTRL = ctrl;
    1256:	6027      	str	r7, [r4, #0]
	if (cpu_irq_is_enabled_flags(flags))
    1258:	b12e      	cbz	r6, 1266 <bpm_power_scaling_cpu_failsafe+0x62>
		cpu_irq_enable();
    125a:	2201      	movs	r2, #1
    125c:	4b03      	ldr	r3, [pc, #12]	; (126c <bpm_power_scaling_cpu_failsafe+0x68>)
    125e:	701a      	strb	r2, [r3, #0]
    1260:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
    1264:	b662      	cpsie	i

	cpu_irq_restore(flags);
	return b_psok;
}
    1266:	b003      	add	sp, #12
    1268:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    126c:	2000002c 	.word	0x2000002c
    1270:	e000e010 	.word	0xe000e010
    1274:	20000001 	.word	0x20000001

00001278 <bpm_get_status>:
	bpm->BPM_ICR = sources;
}

uint32_t bpm_get_status(Bpm *bpm)
{
	return bpm->BPM_SR;
    1278:	6940      	ldr	r0, [r0, #20]
}
    127a:	4770      	bx	lr

0000127c <wdt_set_ctrl>:
 *        to the WatchDog Timer key.
 *
 * \param ctrl  Value to set the WatchDog Timer Control register to.
 */
static void wdt_set_ctrl(uint32_t ctrl)
{
    127c:	b082      	sub	sp, #8
	volatile uint32_t dly;

	/* Calculate delay for internal synchronization, see 44.1.2 WDT errata */
	if ((WDT->WDT_CTRL & WDT_CTRL_CSSEL) == WDT_CLK_SRC_RCSYS) {
    127e:	4b0c      	ldr	r3, [pc, #48]	; (12b0 <wdt_set_ctrl+0x34>)
    1280:	681b      	ldr	r3, [r3, #0]
    1282:	f413 3f00 	tst.w	r3, #131072	; 0x20000
		dly = div_ceil(sysclk_get_cpu_hz() * 2, OSC_RCSYS_NOMINAL_HZ);
    1286:	bf0c      	ite	eq
    1288:	2302      	moveq	r3, #2
	} else { /* WDT_CLK_SRC_32K */
		dly = div_ceil(sysclk_get_cpu_hz() * 2, OSC_RC32K_NOMINAL_HZ);
    128a:	2308      	movne	r3, #8
    128c:	9301      	str	r3, [sp, #4]
	}
	dly >>= 3; /* ~8 cycles for one while loop */
    128e:	9b01      	ldr	r3, [sp, #4]
    1290:	08db      	lsrs	r3, r3, #3
    1292:	9301      	str	r3, [sp, #4]
	while(dly--);
    1294:	9b01      	ldr	r3, [sp, #4]
    1296:	1e5a      	subs	r2, r3, #1
    1298:	9201      	str	r2, [sp, #4]
    129a:	2b00      	cmp	r3, #0
    129c:	d1fa      	bne.n	1294 <wdt_set_ctrl+0x18>
	WDT->WDT_CTRL = ctrl | WDT_CTRL_KEY(WDT_FIRST_KEY);
    129e:	f040 42aa 	orr.w	r2, r0, #1426063360	; 0x55000000
    12a2:	4b03      	ldr	r3, [pc, #12]	; (12b0 <wdt_set_ctrl+0x34>)
    12a4:	601a      	str	r2, [r3, #0]
	WDT->WDT_CTRL = ctrl | WDT_CTRL_KEY(WDT_SECOND_KEY);
    12a6:	f040 402a 	orr.w	r0, r0, #2852126720	; 0xaa000000
    12aa:	6018      	str	r0, [r3, #0]
}
    12ac:	b002      	add	sp, #8
    12ae:	4770      	bx	lr
    12b0:	400f0c00 	.word	0x400f0c00

000012b4 <wdt_get_config_defaults>:
{
	/* Sanity check arguments */
	Assert(cfg);

	/* Default configuration values */
	cfg->clk_src = WDT_CLK_SRC_RCSYS;
    12b4:	2300      	movs	r3, #0
    12b6:	6003      	str	r3, [r0, #0]
	cfg->wdt_mode = WDT_MODE_BASIC;
    12b8:	6043      	str	r3, [r0, #4]
	cfg->wdt_int = WDT_INT_DIS;
    12ba:	6083      	str	r3, [r0, #8]
	cfg->timeout_period = WDT_PERIOD_131072_CLK;
    12bc:	2210      	movs	r2, #16
    12be:	7302      	strb	r2, [r0, #12]
	cfg->window_period = WDT_PERIOD_NONE;
    12c0:	7343      	strb	r3, [r0, #13]
	cfg->disable_flash_cali = true;
    12c2:	2201      	movs	r2, #1
    12c4:	7382      	strb	r2, [r0, #14]
	cfg->disable_wdt_after_reset = true;
    12c6:	73c2      	strb	r2, [r0, #15]
	cfg->always_on = false;
    12c8:	7403      	strb	r3, [r0, #16]
    12ca:	4770      	bx	lr

000012cc <wdt_init>:
 */
bool wdt_init(
		struct wdt_dev_inst *const dev_inst,
		Wdt *const wdt,
		struct wdt_config *const cfg)
{
    12cc:	b570      	push	{r4, r5, r6, lr}
    12ce:	460c      	mov	r4, r1
    12d0:	4616      	mov	r6, r2
	/* Sanity check arguments */
	Assert(dev_inst);
	Assert(wdt);
	Assert(cfg);

	dev_inst->hw_dev = wdt;
    12d2:	6001      	str	r1, [r0, #0]
	dev_inst->wdt_cfg = cfg;
    12d4:	6042      	str	r2, [r0, #4]

	/* Enable APB clock for WDT */
	sysclk_enable_peripheral_clock(wdt);
    12d6:	4608      	mov	r0, r1
    12d8:	4b26      	ldr	r3, [pc, #152]	; (1374 <wdt_init+0xa8>)
    12da:	4798      	blx	r3

	/* Check SFV bit: if SFV bit is set, Control Register is locked */
	if (wdt->WDT_CTRL & WDT_CTRL_SFV) {
    12dc:	6825      	ldr	r5, [r4, #0]
    12de:	f015 0508 	ands.w	r5, r5, #8
    12e2:	d144      	bne.n	136e <wdt_init+0xa2>
		return false;
	}

	/* Disable the WDT */
	if (wdt->WDT_CTRL & WDT_CTRL_EN) {
    12e4:	6823      	ldr	r3, [r4, #0]
    12e6:	f013 0f01 	tst.w	r3, #1
    12ea:	d12c      	bne.n	1346 <wdt_init+0x7a>
		wdt_set_ctrl(wdt->WDT_CTRL & ~WDT_CTRL_EN);
		while (wdt->WDT_CTRL & WDT_CTRL_EN) {
		}
	}
	/* Disable the WDT clock */
	if (wdt->WDT_CTRL & WDT_CTRL_CEN) {
    12ec:	6823      	ldr	r3, [r4, #0]
    12ee:	f413 3f80 	tst.w	r3, #65536	; 0x10000
    12f2:	d132      	bne.n	135a <wdt_init+0x8e>
		while (wdt->WDT_CTRL & WDT_CTRL_CEN) {
		}
	}

	/* Initialize the WDT with new configurations */
	wdt_set_ctrl(cfg->clk_src |
    12f4:	6833      	ldr	r3, [r6, #0]
    12f6:	6870      	ldr	r0, [r6, #4]
    12f8:	4318      	orrs	r0, r3
			cfg->wdt_mode |
    12fa:	68b3      	ldr	r3, [r6, #8]
    12fc:	4318      	orrs	r0, r3
			cfg->wdt_int |
			WDT_CTRL_PSEL(cfg->timeout_period) |
    12fe:	7b33      	ldrb	r3, [r6, #12]
    1300:	021b      	lsls	r3, r3, #8
    1302:	f403 53f8 	and.w	r3, r3, #7936	; 0x1f00
			cfg->wdt_int |
    1306:	4318      	orrs	r0, r3
			WDT_CTRL_TBAN(cfg->window_period) |
    1308:	7b73      	ldrb	r3, [r6, #13]
    130a:	049b      	lsls	r3, r3, #18
    130c:	f403 03f8 	and.w	r3, r3, #8126464	; 0x7c0000
			WDT_CTRL_PSEL(cfg->timeout_period) |
    1310:	4318      	orrs	r0, r3
			(cfg->disable_flash_cali ? WDT_CTRL_FCD : 0) |
    1312:	7bb3      	ldrb	r3, [r6, #14]
    1314:	2b00      	cmp	r3, #0
    1316:	bf0c      	ite	eq
    1318:	462b      	moveq	r3, r5
    131a:	2380      	movne	r3, #128	; 0x80
			WDT_CTRL_TBAN(cfg->window_period) |
    131c:	4318      	orrs	r0, r3
			(cfg->disable_wdt_after_reset ? WDT_CTRL_DAR : 0)
    131e:	7bf3      	ldrb	r3, [r6, #15]
    1320:	2b00      	cmp	r3, #0
    1322:	bf18      	it	ne
    1324:	2502      	movne	r5, #2
	wdt_set_ctrl(cfg->clk_src |
    1326:	4328      	orrs	r0, r5
    1328:	4d13      	ldr	r5, [pc, #76]	; (1378 <wdt_init+0xac>)
    132a:	47a8      	blx	r5
	);
	wdt_set_ctrl(wdt->WDT_CTRL | WDT_CTRL_CEN);
    132c:	6820      	ldr	r0, [r4, #0]
    132e:	f440 3080 	orr.w	r0, r0, #65536	; 0x10000
    1332:	47a8      	blx	r5
	while (!(wdt->WDT_CTRL & WDT_CTRL_CEN)) {
    1334:	6823      	ldr	r3, [r4, #0]
    1336:	f413 3f80 	tst.w	r3, #65536	; 0x10000
    133a:	d0fb      	beq.n	1334 <wdt_init+0x68>
	}

	/* Disable APB clock for WDT */
	sysclk_disable_peripheral_clock(wdt);
    133c:	4620      	mov	r0, r4
    133e:	4b0f      	ldr	r3, [pc, #60]	; (137c <wdt_init+0xb0>)
    1340:	4798      	blx	r3

	return true;
    1342:	2001      	movs	r0, #1
    1344:	bd70      	pop	{r4, r5, r6, pc}
		wdt_set_ctrl(wdt->WDT_CTRL & ~WDT_CTRL_EN);
    1346:	6820      	ldr	r0, [r4, #0]
    1348:	f020 0001 	bic.w	r0, r0, #1
    134c:	4b0a      	ldr	r3, [pc, #40]	; (1378 <wdt_init+0xac>)
    134e:	4798      	blx	r3
		while (wdt->WDT_CTRL & WDT_CTRL_EN) {
    1350:	6823      	ldr	r3, [r4, #0]
    1352:	f013 0f01 	tst.w	r3, #1
    1356:	d1fb      	bne.n	1350 <wdt_init+0x84>
    1358:	e7c8      	b.n	12ec <wdt_init+0x20>
		wdt_set_ctrl(wdt->WDT_CTRL & ~WDT_CTRL_CEN);
    135a:	6820      	ldr	r0, [r4, #0]
    135c:	f420 3080 	bic.w	r0, r0, #65536	; 0x10000
    1360:	4b05      	ldr	r3, [pc, #20]	; (1378 <wdt_init+0xac>)
    1362:	4798      	blx	r3
		while (wdt->WDT_CTRL & WDT_CTRL_CEN) {
    1364:	6823      	ldr	r3, [r4, #0]
    1366:	f413 3f80 	tst.w	r3, #65536	; 0x10000
    136a:	d1fb      	bne.n	1364 <wdt_init+0x98>
    136c:	e7c2      	b.n	12f4 <wdt_init+0x28>
		return false;
    136e:	2000      	movs	r0, #0
}
    1370:	bd70      	pop	{r4, r5, r6, pc}
    1372:	bf00      	nop
    1374:	00000949 	.word	0x00000949
    1378:	0000127d 	.word	0x0000127d
    137c:	00000d3d 	.word	0x00000d3d

00001380 <wdt_disable>:
 * \brief Disable the WDT module.
 *
 * \param dev_inst    Device structure pointer.
 */
void wdt_disable(struct wdt_dev_inst *const dev_inst)
{
    1380:	b510      	push	{r4, lr}
	Wdt *wdt = dev_inst->hw_dev;
    1382:	6804      	ldr	r4, [r0, #0]

	/* Disable the WDT */
	wdt_set_ctrl(wdt->WDT_CTRL & ~WDT_CTRL_EN);
    1384:	6820      	ldr	r0, [r4, #0]
    1386:	f020 0001 	bic.w	r0, r0, #1
    138a:	4b05      	ldr	r3, [pc, #20]	; (13a0 <wdt_disable+0x20>)
    138c:	4798      	blx	r3
	while (wdt->WDT_CTRL & WDT_CTRL_EN) {
    138e:	6823      	ldr	r3, [r4, #0]
    1390:	f013 0f01 	tst.w	r3, #1
    1394:	d1fb      	bne.n	138e <wdt_disable+0xe>
	}

	/* Disable APB clock for WDT */
	sysclk_disable_peripheral_clock(wdt);
    1396:	4620      	mov	r0, r4
    1398:	4b02      	ldr	r3, [pc, #8]	; (13a4 <wdt_disable+0x24>)
    139a:	4798      	blx	r3
    139c:	bd10      	pop	{r4, pc}
    139e:	bf00      	nop
    13a0:	0000127d 	.word	0x0000127d
    13a4:	00000d3d 	.word	0x00000d3d

000013a8 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
    13a8:	e7fe      	b.n	13a8 <Dummy_Handler>
	...

000013ac <Reset_Handler>:
/**
 * \brief This is the code that gets called on processor reset.
 * To initialize the device, and call the main() routine.
 */
void Reset_Handler(void)
{
    13ac:	b508      	push	{r3, lr}

	/* Initialize the relocate segment */
	pSrc = &_etext;
	pDest = &_srelocate;

	if (pSrc != pDest) {
    13ae:	4b17      	ldr	r3, [pc, #92]	; (140c <Reset_Handler+0x60>)
    13b0:	4a17      	ldr	r2, [pc, #92]	; (1410 <Reset_Handler+0x64>)
    13b2:	429a      	cmp	r2, r3
    13b4:	d010      	beq.n	13d8 <Reset_Handler+0x2c>
		for (; pDest < &_erelocate;) {
    13b6:	4b17      	ldr	r3, [pc, #92]	; (1414 <Reset_Handler+0x68>)
    13b8:	4a14      	ldr	r2, [pc, #80]	; (140c <Reset_Handler+0x60>)
    13ba:	429a      	cmp	r2, r3
    13bc:	d20c      	bcs.n	13d8 <Reset_Handler+0x2c>
    13be:	3b01      	subs	r3, #1
    13c0:	1a9b      	subs	r3, r3, r2
    13c2:	f023 0303 	bic.w	r3, r3, #3
    13c6:	3304      	adds	r3, #4
    13c8:	4413      	add	r3, r2
    13ca:	4911      	ldr	r1, [pc, #68]	; (1410 <Reset_Handler+0x64>)
			*pDest++ = *pSrc++;
    13cc:	f851 0b04 	ldr.w	r0, [r1], #4
    13d0:	f842 0b04 	str.w	r0, [r2], #4
		for (; pDest < &_erelocate;) {
    13d4:	429a      	cmp	r2, r3
    13d6:	d1f9      	bne.n	13cc <Reset_Handler+0x20>
		}
	}

	/* Clear the zero segment */
	for (pDest = &_szero; pDest < &_ezero;) {
    13d8:	4b0f      	ldr	r3, [pc, #60]	; (1418 <Reset_Handler+0x6c>)
    13da:	4a10      	ldr	r2, [pc, #64]	; (141c <Reset_Handler+0x70>)
    13dc:	429a      	cmp	r2, r3
    13de:	d20a      	bcs.n	13f6 <Reset_Handler+0x4a>
    13e0:	3b01      	subs	r3, #1
    13e2:	1a9b      	subs	r3, r3, r2
    13e4:	f023 0303 	bic.w	r3, r3, #3
    13e8:	3304      	adds	r3, #4
    13ea:	4413      	add	r3, r2
		*pDest++ = 0;
    13ec:	2100      	movs	r1, #0
    13ee:	f842 1b04 	str.w	r1, [r2], #4
	for (pDest = &_szero; pDest < &_ezero;) {
    13f2:	4293      	cmp	r3, r2
    13f4:	d1fb      	bne.n	13ee <Reset_Handler+0x42>
	}

	/* Set the vector table base address */
	pSrc = (uint32_t *) &_sfixed;
	SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
    13f6:	4a0a      	ldr	r2, [pc, #40]	; (1420 <Reset_Handler+0x74>)
    13f8:	4b0a      	ldr	r3, [pc, #40]	; (1424 <Reset_Handler+0x78>)
    13fa:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
    13fe:	6093      	str	r3, [r2, #8]

	/* Initialize the C library */
	__libc_init_array();
    1400:	4b09      	ldr	r3, [pc, #36]	; (1428 <Reset_Handler+0x7c>)
    1402:	4798      	blx	r3

	/* Branch to main function */
	main();
    1404:	4b09      	ldr	r3, [pc, #36]	; (142c <Reset_Handler+0x80>)
    1406:	4798      	blx	r3
    1408:	e7fe      	b.n	1408 <Reset_Handler+0x5c>
    140a:	bf00      	nop
    140c:	20000000 	.word	0x20000000
    1410:	000048b8 	.word	0x000048b8
    1414:	200009e0 	.word	0x200009e0
    1418:	20000a70 	.word	0x20000a70
    141c:	200009e0 	.word	0x200009e0
    1420:	e000ed00 	.word	0xe000ed00
    1424:	00000000 	.word	0x00000000
    1428:	00001651 	.word	0x00001651
    142c:	000014c5 	.word	0x000014c5

00001430 <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
    1430:	4b0a      	ldr	r3, [pc, #40]	; (145c <_sbrk+0x2c>)
    1432:	681b      	ldr	r3, [r3, #0]
    1434:	b153      	cbz	r3, 144c <_sbrk+0x1c>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
    1436:	4b09      	ldr	r3, [pc, #36]	; (145c <_sbrk+0x2c>)
    1438:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
    143a:	181a      	adds	r2, r3, r0
    143c:	4908      	ldr	r1, [pc, #32]	; (1460 <_sbrk+0x30>)
    143e:	4291      	cmp	r1, r2
    1440:	db08      	blt.n	1454 <_sbrk+0x24>
		return (caddr_t) -1;	
	}

	heap += incr;
    1442:	4610      	mov	r0, r2
    1444:	4a05      	ldr	r2, [pc, #20]	; (145c <_sbrk+0x2c>)
    1446:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
    1448:	4618      	mov	r0, r3
    144a:	4770      	bx	lr
		heap = (unsigned char *)&_end;
    144c:	4a05      	ldr	r2, [pc, #20]	; (1464 <_sbrk+0x34>)
    144e:	4b03      	ldr	r3, [pc, #12]	; (145c <_sbrk+0x2c>)
    1450:	601a      	str	r2, [r3, #0]
    1452:	e7f0      	b.n	1436 <_sbrk+0x6>
		return (caddr_t) -1;	
    1454:	f04f 30ff 	mov.w	r0, #4294967295
}
    1458:	4770      	bx	lr
    145a:	bf00      	nop
    145c:	20000a00 	.word	0x20000a00
    1460:	20007ffc 	.word	0x20007ffc
    1464:	20001a70 	.word	0x20001a70

00001468 <_close>:
}

extern int _close(int file)
{
	return -1;
}
    1468:	f04f 30ff 	mov.w	r0, #4294967295
    146c:	4770      	bx	lr

0000146e <_fstat>:

extern int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
    146e:	f44f 5300 	mov.w	r3, #8192	; 0x2000
    1472:	604b      	str	r3, [r1, #4]

	return 0;
}
    1474:	2000      	movs	r0, #0
    1476:	4770      	bx	lr

00001478 <_isatty>:

extern int _isatty(int file)
{
	return 1;
}
    1478:	2001      	movs	r0, #1
    147a:	4770      	bx	lr

0000147c <_lseek>:

extern int _lseek(int file, int ptr, int dir)
{
	return 0;
}
    147c:	2000      	movs	r0, #0
    147e:	4770      	bx	lr

00001480 <TC11_Handler>:
	| TC_CMR_ABETRG /* External Trigger: TIOA */
	| TC_CMR_ETRGEDG_FALLING /* External Trigger Edge: Falling edge */
	);
}
void TC_Handler(void)
{
    1480:	b510      	push	{r4, lr}
	if ((tc_get_status(TC, TC_CHANNEL_CAPTURE) & TC_SR_LDRBS) == TC_SR_LDRBS) {
    1482:	2101      	movs	r1, #1
    1484:	480a      	ldr	r0, [pc, #40]	; (14b0 <TC11_Handler+0x30>)
    1486:	4b0b      	ldr	r3, [pc, #44]	; (14b4 <TC11_Handler+0x34>)
    1488:	4798      	blx	r3
    148a:	f010 0f40 	tst.w	r0, #64	; 0x40
    148e:	d100      	bne.n	1492 <TC11_Handler+0x12>
    1490:	bd10      	pop	{r4, pc}
		gs_ul_captured_pulses++;
    1492:	4a09      	ldr	r2, [pc, #36]	; (14b8 <TC11_Handler+0x38>)
    1494:	6813      	ldr	r3, [r2, #0]
    1496:	3301      	adds	r3, #1
    1498:	6013      	str	r3, [r2, #0]
		gs_ul_captured_ra = tc_read_ra(TC, TC_CHANNEL_CAPTURE);
    149a:	4c05      	ldr	r4, [pc, #20]	; (14b0 <TC11_Handler+0x30>)
    149c:	2101      	movs	r1, #1
    149e:	4620      	mov	r0, r4
    14a0:	4b06      	ldr	r3, [pc, #24]	; (14bc <TC11_Handler+0x3c>)
    14a2:	4798      	blx	r3
		gs_ul_captured_rb = tc_read_rb(TC, TC_CHANNEL_CAPTURE);
    14a4:	2101      	movs	r1, #1
    14a6:	4620      	mov	r0, r4
    14a8:	4b05      	ldr	r3, [pc, #20]	; (14c0 <TC11_Handler+0x40>)
    14aa:	4798      	blx	r3
	}
}
    14ac:	e7f0      	b.n	1490 <TC11_Handler+0x10>
    14ae:	bf00      	nop
    14b0:	40014000 	.word	0x40014000
    14b4:	000003d5 	.word	0x000003d5
    14b8:	20000a04 	.word	0x20000a04
    14bc:	000003ad 	.word	0x000003ad
    14c0:	000003b5 	.word	0x000003b5

000014c4 <main>:


int main (void)
{
    14c4:	b580      	push	{r7, lr}
	sysclk_init();
    14c6:	4b44      	ldr	r3, [pc, #272]	; (15d8 <main+0x114>)
    14c8:	4798      	blx	r3
	board_init();
    14ca:	4b44      	ldr	r3, [pc, #272]	; (15dc <main+0x118>)
    14cc:	4798      	blx	r3
	uart_init();
    14ce:	4b44      	ldr	r3, [pc, #272]	; (15e0 <main+0x11c>)
    14d0:	4798      	blx	r3

	/* Output example information */
	printf("-- TC capture waveform Example --\r\n");
    14d2:	4844      	ldr	r0, [pc, #272]	; (15e4 <main+0x120>)
    14d4:	4d44      	ldr	r5, [pc, #272]	; (15e8 <main+0x124>)
    14d6:	47a8      	blx	r5
	printf("-- %s\n\r", BOARD_NAME);
    14d8:	4944      	ldr	r1, [pc, #272]	; (15ec <main+0x128>)
    14da:	4845      	ldr	r0, [pc, #276]	; (15f0 <main+0x12c>)
    14dc:	47a8      	blx	r5
	printf("-- Compiled: %s %s --\n\r", __DATE__, __TIME__);
    14de:	4a45      	ldr	r2, [pc, #276]	; (15f4 <main+0x130>)
    14e0:	4945      	ldr	r1, [pc, #276]	; (15f8 <main+0x134>)
    14e2:	4846      	ldr	r0, [pc, #280]	; (15fc <main+0x138>)
    14e4:	47a8      	blx	r5
		base->GPIO_PUERC = mask;
    14e6:	4b46      	ldr	r3, [pc, #280]	; (1600 <main+0x13c>)
    14e8:	2210      	movs	r2, #16
    14ea:	679a      	str	r2, [r3, #120]	; 0x78
		base->GPIO_PDERC = mask;
    14ec:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
		base->GPIO_GFERC = mask;
    14f0:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8
		base->GPIO_ODCR0C = mask;
    14f4:	f8c3 2108 	str.w	r2, [r3, #264]	; 0x108
		base->GPIO_PMR0S = mask;
    14f8:	615a      	str	r2, [r3, #20]
		base->GPIO_PMR1S = mask;
    14fa:	625a      	str	r2, [r3, #36]	; 0x24
		base->GPIO_PMR2C = mask;
    14fc:	639a      	str	r2, [r3, #56]	; 0x38
	arch_ioport_port_to_base(port)->GPIO_GPERC = mask;
    14fe:	609a      	str	r2, [r3, #8]
		base->GPIO_PUERC = mask;
    1500:	2204      	movs	r2, #4
    1502:	679a      	str	r2, [r3, #120]	; 0x78
		base->GPIO_PDERC = mask;
    1504:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
		base->GPIO_GFERC = mask;
    1508:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8
		base->GPIO_ODCR0C = mask;
    150c:	f8c3 2108 	str.w	r2, [r3, #264]	; 0x108
		base->GPIO_PMR0S = mask;
    1510:	615a      	str	r2, [r3, #20]
		base->GPIO_PMR1S = mask;
    1512:	625a      	str	r2, [r3, #36]	; 0x24
		base->GPIO_PMR2C = mask;
    1514:	639a      	str	r2, [r3, #56]	; 0x38
	arch_ioport_port_to_base(port)->GPIO_GPERC = mask;
    1516:	609a      	str	r2, [r3, #8]
	/** Disable I/O to enable peripheral mode) */
	ioport_disable_pin(PIN_TC_CAPTURE);
	//! [tc_capture_gpio]

	/* Configure TC TC_CHANNEL_WAVEFORM as waveform operating mode */
	printf("Configure TC%d channel %d as waveform operating mode \n\r",
    1518:	2202      	movs	r2, #2
    151a:	2101      	movs	r1, #1
    151c:	4839      	ldr	r0, [pc, #228]	; (1604 <main+0x140>)
    151e:	47a8      	blx	r5
	sysclk_enable_peripheral_clock(ID_TC_WAVEFORM);
    1520:	4c39      	ldr	r4, [pc, #228]	; (1608 <main+0x144>)
    1522:	4620      	mov	r0, r4
    1524:	f8df 8124 	ldr.w	r8, [pc, #292]	; 164c <main+0x188>
    1528:	47c0      	blx	r8
	tc_init(TC, TC_CHANNEL_WAVEFORM,
    152a:	4a38      	ldr	r2, [pc, #224]	; (160c <main+0x148>)
    152c:	2102      	movs	r1, #2
    152e:	4620      	mov	r0, r4
    1530:	4f37      	ldr	r7, [pc, #220]	; (1610 <main+0x14c>)
    1532:	47b8      	blx	r7
	rc = (sysclk_get_peripheral_bus_hz(TC) /
    1534:	4620      	mov	r0, r4
    1536:	4b37      	ldr	r3, [pc, #220]	; (1614 <main+0x150>)
    1538:	4798      	blx	r3
    153a:	4e37      	ldr	r6, [pc, #220]	; (1618 <main+0x154>)
    153c:	fba6 3600 	umull	r3, r6, r6, r0
    1540:	0b36      	lsrs	r6, r6, #12
	tc_write_rc(TC, TC_CHANNEL_WAVEFORM, rc);
    1542:	4632      	mov	r2, r6
    1544:	2102      	movs	r1, #2
    1546:	4620      	mov	r0, r4
    1548:	4b34      	ldr	r3, [pc, #208]	; (161c <main+0x158>)
    154a:	4798      	blx	r3
	ra = (100 - gc_waveconfig[gs_uc_configuration].us_dutycycle) * rc / 100;
    154c:	2246      	movs	r2, #70	; 0x46
    154e:	fb02 f206 	mul.w	r2, r2, r6
    1552:	4b33      	ldr	r3, [pc, #204]	; (1620 <main+0x15c>)
    1554:	fba3 3202 	umull	r3, r2, r3, r2
	tc_write_ra(TC, TC_CHANNEL_WAVEFORM, ra);
    1558:	0952      	lsrs	r2, r2, #5
    155a:	2102      	movs	r1, #2
    155c:	4620      	mov	r0, r4
    155e:	4b31      	ldr	r3, [pc, #196]	; (1624 <main+0x160>)
    1560:	4798      	blx	r3
	tc_start(TC, TC_CHANNEL_WAVEFORM);
    1562:	2102      	movs	r1, #2
    1564:	4620      	mov	r0, r4
    1566:	4e30      	ldr	r6, [pc, #192]	; (1628 <main+0x164>)
    1568:	47b0      	blx	r6
	printf("Start waveform: Frequency = %d Hz,Duty Cycle = %2d%%\n\r",
    156a:	221e      	movs	r2, #30
    156c:	21b2      	movs	r1, #178	; 0xb2
    156e:	482f      	ldr	r0, [pc, #188]	; (162c <main+0x168>)
    1570:	47a8      	blx	r5
	//! [tc_waveform_init_call]
	tc_waveform_initialize();
	//! [tc_waveform_init_call]

	/* Configure TC TC_CHANNEL_CAPTURE as capture operating mode */
	printf("Configure TC%d channel %d as capture operating mode \n\r",
    1572:	2201      	movs	r2, #1
    1574:	4611      	mov	r1, r2
    1576:	482e      	ldr	r0, [pc, #184]	; (1630 <main+0x16c>)
    1578:	47a8      	blx	r5
	sysclk_enable_peripheral_clock(ID_TC_CAPTURE);
    157a:	4620      	mov	r0, r4
    157c:	47c0      	blx	r8
	tc_init(TC, TC_CHANNEL_CAPTURE,
    157e:	4a2d      	ldr	r2, [pc, #180]	; (1634 <main+0x170>)
    1580:	2101      	movs	r1, #1
    1582:	4620      	mov	r0, r4
    1584:	47b8      	blx	r7

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
{
  NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
    1586:	4b2c      	ldr	r3, [pc, #176]	; (1638 <main+0x174>)
    1588:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
    158c:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84

    \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
  NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrupt */
    1590:	f8c3 2184 	str.w	r2, [r3, #388]	; 0x184
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if(IRQn < 0) {
    SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M  System Interrupts */
  else {
    NVIC->IP[(uint32_t)(IRQn)] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff);    }        /* set Priority for device specific Interrupts  */
    1594:	2100      	movs	r1, #0
    1596:	f883 133b 	strb.w	r1, [r3, #827]	; 0x33b
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
    159a:	605a      	str	r2, [r3, #4]
	NVIC_SetPriority(TC_IRQn, 0);
	NVIC_EnableIRQ(TC_IRQn);
	//! [tc_capture_init_irq]

	/* Insert application code here, after the board has been initialized. */
	printf("\r\n[INFO] Board initialization complete\r\n");
    159c:	4827      	ldr	r0, [pc, #156]	; (163c <main+0x178>)
    159e:	47a8      	blx	r5

	//! [tc_capture_init_module_irq]
	tc_enable_interrupt(TC, TC_CHANNEL_CAPTURE, TC_IER_LDRBS);
    15a0:	2240      	movs	r2, #64	; 0x40
    15a2:	2101      	movs	r1, #1
    15a4:	4620      	mov	r0, r4
    15a6:	4b26      	ldr	r3, [pc, #152]	; (1640 <main+0x17c>)
    15a8:	4798      	blx	r3

	/* Start the timer counter on TC TC_CHANNEL_CAPTURE */
	//! [tc_capture_start_now]
	tc_start(TC, TC_CHANNEL_CAPTURE);
    15aa:	2101      	movs	r1, #1
    15ac:	4620      	mov	r0, r4
    15ae:	47b0      	blx	r6
	while (1) {
	
		//! [tc_capture_init_module_irq]

		/* Is button pressed? */
		printf("\r\nRun main loop %d\r\n", gs_ul_captured_pulses);
    15b0:	4e24      	ldr	r6, [pc, #144]	; (1644 <main+0x180>)
    15b2:	4d25      	ldr	r5, [pc, #148]	; (1648 <main+0x184>)
	}
}

__always_inline static bool arch_ioport_get_pin_level(ioport_pin_t pin)
{
	return arch_ioport_pin_to_base(pin)->GPIO_PVR & arch_ioport_pin_to_mask(pin);
    15b4:	f504 244d 	add.w	r4, r4, #839680	; 0xcd000
    15b8:	f504 6480 	add.w	r4, r4, #1024	; 0x400
    15bc:	6831      	ldr	r1, [r6, #0]
    15be:	4628      	mov	r0, r5
    15c0:	4b09      	ldr	r3, [pc, #36]	; (15e8 <main+0x124>)
    15c2:	4798      	blx	r3
    15c4:	6e23      	ldr	r3, [r4, #96]	; 0x60

		if (ioport_get_pin_level(BUTTON_0_PIN) == BUTTON_0_ACTIVE) {
    15c6:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
		arch_ioport_pin_to_base(pin)->GPIO_OVRC = arch_ioport_pin_to_mask(pin);
    15ca:	f04f 0380 	mov.w	r3, #128	; 0x80
    15ce:	bf0c      	ite	eq
    15d0:	65a3      	streq	r3, [r4, #88]	; 0x58
		arch_ioport_pin_to_base(pin)->GPIO_OVRS = arch_ioport_pin_to_mask(pin);
    15d2:	6563      	strne	r3, [r4, #84]	; 0x54
    15d4:	e7f2      	b.n	15bc <main+0xf8>
    15d6:	bf00      	nop
    15d8:	000010e9 	.word	0x000010e9
    15dc:	00001165 	.word	0x00001165
    15e0:	000004e5 	.word	0x000004e5
    15e4:	000045c8 	.word	0x000045c8
    15e8:	000016a1 	.word	0x000016a1
    15ec:	000045ec 	.word	0x000045ec
    15f0:	00004600 	.word	0x00004600
    15f4:	00004608 	.word	0x00004608
    15f8:	00004614 	.word	0x00004614
    15fc:	00004620 	.word	0x00004620
    1600:	400e1400 	.word	0x400e1400
    1604:	00004638 	.word	0x00004638
    1608:	40014000 	.word	0x40014000
    160c:	0009c003 	.word	0x0009c003
    1610:	0000038d 	.word	0x0000038d
    1614:	00000799 	.word	0x00000799
    1618:	b81702e1 	.word	0xb81702e1
    161c:	000003c5 	.word	0x000003c5
    1620:	51eb851f 	.word	0x51eb851f
    1624:	000003bd 	.word	0x000003bd
    1628:	000003a5 	.word	0x000003a5
    162c:	00004670 	.word	0x00004670
    1630:	000046a8 	.word	0x000046a8
    1634:	00090602 	.word	0x00090602
    1638:	e000e100 	.word	0xe000e100
    163c:	000046e0 	.word	0x000046e0
    1640:	000003cd 	.word	0x000003cd
    1644:	20000a04 	.word	0x20000a04
    1648:	0000470c 	.word	0x0000470c
    164c:	00000949 	.word	0x00000949

00001650 <__libc_init_array>:
    1650:	b570      	push	{r4, r5, r6, lr}
    1652:	4e0f      	ldr	r6, [pc, #60]	; (1690 <__libc_init_array+0x40>)
    1654:	4d0f      	ldr	r5, [pc, #60]	; (1694 <__libc_init_array+0x44>)
    1656:	1b76      	subs	r6, r6, r5
    1658:	10b6      	asrs	r6, r6, #2
    165a:	bf18      	it	ne
    165c:	2400      	movne	r4, #0
    165e:	d005      	beq.n	166c <__libc_init_array+0x1c>
    1660:	3401      	adds	r4, #1
    1662:	f855 3b04 	ldr.w	r3, [r5], #4
    1666:	4798      	blx	r3
    1668:	42a6      	cmp	r6, r4
    166a:	d1f9      	bne.n	1660 <__libc_init_array+0x10>
    166c:	4e0a      	ldr	r6, [pc, #40]	; (1698 <__libc_init_array+0x48>)
    166e:	4d0b      	ldr	r5, [pc, #44]	; (169c <__libc_init_array+0x4c>)
    1670:	1b76      	subs	r6, r6, r5
    1672:	f003 f90b 	bl	488c <_init>
    1676:	10b6      	asrs	r6, r6, #2
    1678:	bf18      	it	ne
    167a:	2400      	movne	r4, #0
    167c:	d006      	beq.n	168c <__libc_init_array+0x3c>
    167e:	3401      	adds	r4, #1
    1680:	f855 3b04 	ldr.w	r3, [r5], #4
    1684:	4798      	blx	r3
    1686:	42a6      	cmp	r6, r4
    1688:	d1f9      	bne.n	167e <__libc_init_array+0x2e>
    168a:	bd70      	pop	{r4, r5, r6, pc}
    168c:	bd70      	pop	{r4, r5, r6, pc}
    168e:	bf00      	nop
    1690:	00004898 	.word	0x00004898
    1694:	00004898 	.word	0x00004898
    1698:	000048a0 	.word	0x000048a0
    169c:	00004898 	.word	0x00004898

000016a0 <iprintf>:
    16a0:	b40f      	push	{r0, r1, r2, r3}
    16a2:	b500      	push	{lr}
    16a4:	4907      	ldr	r1, [pc, #28]	; (16c4 <iprintf+0x24>)
    16a6:	b083      	sub	sp, #12
    16a8:	ab04      	add	r3, sp, #16
    16aa:	6808      	ldr	r0, [r1, #0]
    16ac:	f853 2b04 	ldr.w	r2, [r3], #4
    16b0:	6881      	ldr	r1, [r0, #8]
    16b2:	9301      	str	r3, [sp, #4]
    16b4:	f000 f966 	bl	1984 <_vfiprintf_r>
    16b8:	b003      	add	sp, #12
    16ba:	f85d eb04 	ldr.w	lr, [sp], #4
    16be:	b004      	add	sp, #16
    16c0:	4770      	bx	lr
    16c2:	bf00      	nop
    16c4:	20000030 	.word	0x20000030

000016c8 <memset>:
    16c8:	b470      	push	{r4, r5, r6}
    16ca:	0786      	lsls	r6, r0, #30
    16cc:	d046      	beq.n	175c <memset+0x94>
    16ce:	1e54      	subs	r4, r2, #1
    16d0:	2a00      	cmp	r2, #0
    16d2:	d041      	beq.n	1758 <memset+0x90>
    16d4:	b2ca      	uxtb	r2, r1
    16d6:	4603      	mov	r3, r0
    16d8:	e002      	b.n	16e0 <memset+0x18>
    16da:	f114 34ff 	adds.w	r4, r4, #4294967295
    16de:	d33b      	bcc.n	1758 <memset+0x90>
    16e0:	f803 2b01 	strb.w	r2, [r3], #1
    16e4:	079d      	lsls	r5, r3, #30
    16e6:	d1f8      	bne.n	16da <memset+0x12>
    16e8:	2c03      	cmp	r4, #3
    16ea:	d92e      	bls.n	174a <memset+0x82>
    16ec:	b2cd      	uxtb	r5, r1
    16ee:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
    16f2:	2c0f      	cmp	r4, #15
    16f4:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
    16f8:	d919      	bls.n	172e <memset+0x66>
    16fa:	f103 0210 	add.w	r2, r3, #16
    16fe:	4626      	mov	r6, r4
    1700:	3e10      	subs	r6, #16
    1702:	2e0f      	cmp	r6, #15
    1704:	f842 5c10 	str.w	r5, [r2, #-16]
    1708:	f842 5c0c 	str.w	r5, [r2, #-12]
    170c:	f842 5c08 	str.w	r5, [r2, #-8]
    1710:	f842 5c04 	str.w	r5, [r2, #-4]
    1714:	f102 0210 	add.w	r2, r2, #16
    1718:	d8f2      	bhi.n	1700 <memset+0x38>
    171a:	f1a4 0210 	sub.w	r2, r4, #16
    171e:	f022 020f 	bic.w	r2, r2, #15
    1722:	f004 040f 	and.w	r4, r4, #15
    1726:	3210      	adds	r2, #16
    1728:	2c03      	cmp	r4, #3
    172a:	4413      	add	r3, r2
    172c:	d90d      	bls.n	174a <memset+0x82>
    172e:	461e      	mov	r6, r3
    1730:	4622      	mov	r2, r4
    1732:	3a04      	subs	r2, #4
    1734:	2a03      	cmp	r2, #3
    1736:	f846 5b04 	str.w	r5, [r6], #4
    173a:	d8fa      	bhi.n	1732 <memset+0x6a>
    173c:	1f22      	subs	r2, r4, #4
    173e:	f022 0203 	bic.w	r2, r2, #3
    1742:	3204      	adds	r2, #4
    1744:	4413      	add	r3, r2
    1746:	f004 0403 	and.w	r4, r4, #3
    174a:	b12c      	cbz	r4, 1758 <memset+0x90>
    174c:	b2c9      	uxtb	r1, r1
    174e:	441c      	add	r4, r3
    1750:	f803 1b01 	strb.w	r1, [r3], #1
    1754:	429c      	cmp	r4, r3
    1756:	d1fb      	bne.n	1750 <memset+0x88>
    1758:	bc70      	pop	{r4, r5, r6}
    175a:	4770      	bx	lr
    175c:	4614      	mov	r4, r2
    175e:	4603      	mov	r3, r0
    1760:	e7c2      	b.n	16e8 <memset+0x20>
    1762:	bf00      	nop

00001764 <setbuf>:
    1764:	2900      	cmp	r1, #0
    1766:	bf0c      	ite	eq
    1768:	2202      	moveq	r2, #2
    176a:	2200      	movne	r2, #0
    176c:	f44f 6380 	mov.w	r3, #1024	; 0x400
    1770:	f000 b800 	b.w	1774 <setvbuf>

00001774 <setvbuf>:
    1774:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
    1778:	4c61      	ldr	r4, [pc, #388]	; (1900 <setvbuf+0x18c>)
    177a:	6825      	ldr	r5, [r4, #0]
    177c:	b083      	sub	sp, #12
    177e:	4604      	mov	r4, r0
    1780:	460f      	mov	r7, r1
    1782:	4690      	mov	r8, r2
    1784:	461e      	mov	r6, r3
    1786:	b115      	cbz	r5, 178e <setvbuf+0x1a>
    1788:	6bab      	ldr	r3, [r5, #56]	; 0x38
    178a:	2b00      	cmp	r3, #0
    178c:	d064      	beq.n	1858 <setvbuf+0xe4>
    178e:	f1b8 0f02 	cmp.w	r8, #2
    1792:	d006      	beq.n	17a2 <setvbuf+0x2e>
    1794:	f1b8 0f01 	cmp.w	r8, #1
    1798:	f200 809f 	bhi.w	18da <setvbuf+0x166>
    179c:	2e00      	cmp	r6, #0
    179e:	f2c0 809c 	blt.w	18da <setvbuf+0x166>
    17a2:	6e63      	ldr	r3, [r4, #100]	; 0x64
    17a4:	07d8      	lsls	r0, r3, #31
    17a6:	d534      	bpl.n	1812 <setvbuf+0x9e>
    17a8:	4621      	mov	r1, r4
    17aa:	4628      	mov	r0, r5
    17ac:	f001 f888 	bl	28c0 <_fflush_r>
    17b0:	6b21      	ldr	r1, [r4, #48]	; 0x30
    17b2:	b141      	cbz	r1, 17c6 <setvbuf+0x52>
    17b4:	f104 0340 	add.w	r3, r4, #64	; 0x40
    17b8:	4299      	cmp	r1, r3
    17ba:	d002      	beq.n	17c2 <setvbuf+0x4e>
    17bc:	4628      	mov	r0, r5
    17be:	f001 f9fd 	bl	2bbc <_free_r>
    17c2:	2300      	movs	r3, #0
    17c4:	6323      	str	r3, [r4, #48]	; 0x30
    17c6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    17ca:	2200      	movs	r2, #0
    17cc:	61a2      	str	r2, [r4, #24]
    17ce:	6062      	str	r2, [r4, #4]
    17d0:	061a      	lsls	r2, r3, #24
    17d2:	d43a      	bmi.n	184a <setvbuf+0xd6>
    17d4:	f423 634a 	bic.w	r3, r3, #3232	; 0xca0
    17d8:	f023 0303 	bic.w	r3, r3, #3
    17dc:	f1b8 0f02 	cmp.w	r8, #2
    17e0:	81a3      	strh	r3, [r4, #12]
    17e2:	d01d      	beq.n	1820 <setvbuf+0xac>
    17e4:	ab01      	add	r3, sp, #4
    17e6:	466a      	mov	r2, sp
    17e8:	4621      	mov	r1, r4
    17ea:	4628      	mov	r0, r5
    17ec:	f001 fc84 	bl	30f8 <__swhatbuf_r>
    17f0:	89a3      	ldrh	r3, [r4, #12]
    17f2:	4318      	orrs	r0, r3
    17f4:	81a0      	strh	r0, [r4, #12]
    17f6:	2e00      	cmp	r6, #0
    17f8:	d132      	bne.n	1860 <setvbuf+0xec>
    17fa:	9e00      	ldr	r6, [sp, #0]
    17fc:	4630      	mov	r0, r6
    17fe:	f001 fcf3 	bl	31e8 <malloc>
    1802:	4607      	mov	r7, r0
    1804:	2800      	cmp	r0, #0
    1806:	d06b      	beq.n	18e0 <setvbuf+0x16c>
    1808:	89a3      	ldrh	r3, [r4, #12]
    180a:	f043 0380 	orr.w	r3, r3, #128	; 0x80
    180e:	81a3      	strh	r3, [r4, #12]
    1810:	e028      	b.n	1864 <setvbuf+0xf0>
    1812:	89a3      	ldrh	r3, [r4, #12]
    1814:	0599      	lsls	r1, r3, #22
    1816:	d4c7      	bmi.n	17a8 <setvbuf+0x34>
    1818:	6da0      	ldr	r0, [r4, #88]	; 0x58
    181a:	f001 fc69 	bl	30f0 <__retarget_lock_acquire_recursive>
    181e:	e7c3      	b.n	17a8 <setvbuf+0x34>
    1820:	2500      	movs	r5, #0
    1822:	6e61      	ldr	r1, [r4, #100]	; 0x64
    1824:	2600      	movs	r6, #0
    1826:	f104 0243 	add.w	r2, r4, #67	; 0x43
    182a:	f043 0302 	orr.w	r3, r3, #2
    182e:	2001      	movs	r0, #1
    1830:	60a6      	str	r6, [r4, #8]
    1832:	07ce      	lsls	r6, r1, #31
    1834:	81a3      	strh	r3, [r4, #12]
    1836:	6022      	str	r2, [r4, #0]
    1838:	6122      	str	r2, [r4, #16]
    183a:	6160      	str	r0, [r4, #20]
    183c:	d401      	bmi.n	1842 <setvbuf+0xce>
    183e:	0598      	lsls	r0, r3, #22
    1840:	d53e      	bpl.n	18c0 <setvbuf+0x14c>
    1842:	4628      	mov	r0, r5
    1844:	b003      	add	sp, #12
    1846:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    184a:	6921      	ldr	r1, [r4, #16]
    184c:	4628      	mov	r0, r5
    184e:	f001 f9b5 	bl	2bbc <_free_r>
    1852:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    1856:	e7bd      	b.n	17d4 <setvbuf+0x60>
    1858:	4628      	mov	r0, r5
    185a:	f001 f889 	bl	2970 <__sinit>
    185e:	e796      	b.n	178e <setvbuf+0x1a>
    1860:	2f00      	cmp	r7, #0
    1862:	d0cb      	beq.n	17fc <setvbuf+0x88>
    1864:	6bab      	ldr	r3, [r5, #56]	; 0x38
    1866:	2b00      	cmp	r3, #0
    1868:	d033      	beq.n	18d2 <setvbuf+0x15e>
    186a:	9b00      	ldr	r3, [sp, #0]
    186c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
    1870:	6027      	str	r7, [r4, #0]
    1872:	429e      	cmp	r6, r3
    1874:	bf1c      	itt	ne
    1876:	f442 6200 	orrne.w	r2, r2, #2048	; 0x800
    187a:	81a2      	strhne	r2, [r4, #12]
    187c:	f1b8 0f01 	cmp.w	r8, #1
    1880:	bf04      	itt	eq
    1882:	f042 0201 	orreq.w	r2, r2, #1
    1886:	81a2      	strheq	r2, [r4, #12]
    1888:	b292      	uxth	r2, r2
    188a:	f012 0308 	ands.w	r3, r2, #8
    188e:	6127      	str	r7, [r4, #16]
    1890:	6166      	str	r6, [r4, #20]
    1892:	d00e      	beq.n	18b2 <setvbuf+0x13e>
    1894:	07d1      	lsls	r1, r2, #31
    1896:	d51a      	bpl.n	18ce <setvbuf+0x15a>
    1898:	6e65      	ldr	r5, [r4, #100]	; 0x64
    189a:	4276      	negs	r6, r6
    189c:	2300      	movs	r3, #0
    189e:	f015 0501 	ands.w	r5, r5, #1
    18a2:	61a6      	str	r6, [r4, #24]
    18a4:	60a3      	str	r3, [r4, #8]
    18a6:	d009      	beq.n	18bc <setvbuf+0x148>
    18a8:	2500      	movs	r5, #0
    18aa:	4628      	mov	r0, r5
    18ac:	b003      	add	sp, #12
    18ae:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    18b2:	60a3      	str	r3, [r4, #8]
    18b4:	6e65      	ldr	r5, [r4, #100]	; 0x64
    18b6:	f015 0501 	ands.w	r5, r5, #1
    18ba:	d1f5      	bne.n	18a8 <setvbuf+0x134>
    18bc:	0593      	lsls	r3, r2, #22
    18be:	d4c0      	bmi.n	1842 <setvbuf+0xce>
    18c0:	6da0      	ldr	r0, [r4, #88]	; 0x58
    18c2:	f001 fc17 	bl	30f4 <__retarget_lock_release_recursive>
    18c6:	4628      	mov	r0, r5
    18c8:	b003      	add	sp, #12
    18ca:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    18ce:	60a6      	str	r6, [r4, #8]
    18d0:	e7f0      	b.n	18b4 <setvbuf+0x140>
    18d2:	4628      	mov	r0, r5
    18d4:	f001 f84c 	bl	2970 <__sinit>
    18d8:	e7c7      	b.n	186a <setvbuf+0xf6>
    18da:	f04f 35ff 	mov.w	r5, #4294967295
    18de:	e7b0      	b.n	1842 <setvbuf+0xce>
    18e0:	f8dd 9000 	ldr.w	r9, [sp]
    18e4:	45b1      	cmp	r9, r6
    18e6:	d004      	beq.n	18f2 <setvbuf+0x17e>
    18e8:	4648      	mov	r0, r9
    18ea:	f001 fc7d 	bl	31e8 <malloc>
    18ee:	4607      	mov	r7, r0
    18f0:	b920      	cbnz	r0, 18fc <setvbuf+0x188>
    18f2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    18f6:	f04f 35ff 	mov.w	r5, #4294967295
    18fa:	e792      	b.n	1822 <setvbuf+0xae>
    18fc:	464e      	mov	r6, r9
    18fe:	e783      	b.n	1808 <setvbuf+0x94>
    1900:	20000030 	.word	0x20000030

00001904 <__sprint_r.part.0>:
    1904:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1908:	6e4b      	ldr	r3, [r1, #100]	; 0x64
    190a:	049c      	lsls	r4, r3, #18
    190c:	4693      	mov	fp, r2
    190e:	d52f      	bpl.n	1970 <__sprint_r.part.0+0x6c>
    1910:	6893      	ldr	r3, [r2, #8]
    1912:	6812      	ldr	r2, [r2, #0]
    1914:	b353      	cbz	r3, 196c <__sprint_r.part.0+0x68>
    1916:	460e      	mov	r6, r1
    1918:	4607      	mov	r7, r0
    191a:	f102 0908 	add.w	r9, r2, #8
    191e:	e919 0420 	ldmdb	r9, {r5, sl}
    1922:	ea5f 089a 	movs.w	r8, sl, lsr #2
    1926:	d017      	beq.n	1958 <__sprint_r.part.0+0x54>
    1928:	3d04      	subs	r5, #4
    192a:	2400      	movs	r4, #0
    192c:	e001      	b.n	1932 <__sprint_r.part.0+0x2e>
    192e:	45a0      	cmp	r8, r4
    1930:	d010      	beq.n	1954 <__sprint_r.part.0+0x50>
    1932:	4632      	mov	r2, r6
    1934:	f855 1f04 	ldr.w	r1, [r5, #4]!
    1938:	4638      	mov	r0, r7
    193a:	f001 f8bb 	bl	2ab4 <_fputwc_r>
    193e:	1c43      	adds	r3, r0, #1
    1940:	f104 0401 	add.w	r4, r4, #1
    1944:	d1f3      	bne.n	192e <__sprint_r.part.0+0x2a>
    1946:	2300      	movs	r3, #0
    1948:	f8cb 3008 	str.w	r3, [fp, #8]
    194c:	f8cb 3004 	str.w	r3, [fp, #4]
    1950:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1954:	f8db 3008 	ldr.w	r3, [fp, #8]
    1958:	f02a 0a03 	bic.w	sl, sl, #3
    195c:	eba3 030a 	sub.w	r3, r3, sl
    1960:	f8cb 3008 	str.w	r3, [fp, #8]
    1964:	f109 0908 	add.w	r9, r9, #8
    1968:	2b00      	cmp	r3, #0
    196a:	d1d8      	bne.n	191e <__sprint_r.part.0+0x1a>
    196c:	2000      	movs	r0, #0
    196e:	e7ea      	b.n	1946 <__sprint_r.part.0+0x42>
    1970:	f001 fa0a 	bl	2d88 <__sfvwrite_r>
    1974:	2300      	movs	r3, #0
    1976:	f8cb 3008 	str.w	r3, [fp, #8]
    197a:	f8cb 3004 	str.w	r3, [fp, #4]
    197e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1982:	bf00      	nop

00001984 <_vfiprintf_r>:
    1984:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1988:	b0ad      	sub	sp, #180	; 0xb4
    198a:	461d      	mov	r5, r3
    198c:	468b      	mov	fp, r1
    198e:	4690      	mov	r8, r2
    1990:	9307      	str	r3, [sp, #28]
    1992:	9006      	str	r0, [sp, #24]
    1994:	b118      	cbz	r0, 199e <_vfiprintf_r+0x1a>
    1996:	6b83      	ldr	r3, [r0, #56]	; 0x38
    1998:	2b00      	cmp	r3, #0
    199a:	f000 80f3 	beq.w	1b84 <_vfiprintf_r+0x200>
    199e:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
    19a2:	f9bb 000c 	ldrsh.w	r0, [fp, #12]
    19a6:	07df      	lsls	r7, r3, #31
    19a8:	b281      	uxth	r1, r0
    19aa:	d402      	bmi.n	19b2 <_vfiprintf_r+0x2e>
    19ac:	058e      	lsls	r6, r1, #22
    19ae:	f140 80fc 	bpl.w	1baa <_vfiprintf_r+0x226>
    19b2:	048c      	lsls	r4, r1, #18
    19b4:	d40a      	bmi.n	19cc <_vfiprintf_r+0x48>
    19b6:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
    19ba:	f440 5100 	orr.w	r1, r0, #8192	; 0x2000
    19be:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
    19c2:	f8ab 100c 	strh.w	r1, [fp, #12]
    19c6:	f8cb 3064 	str.w	r3, [fp, #100]	; 0x64
    19ca:	b289      	uxth	r1, r1
    19cc:	0708      	lsls	r0, r1, #28
    19ce:	f140 80b3 	bpl.w	1b38 <_vfiprintf_r+0x1b4>
    19d2:	f8db 3010 	ldr.w	r3, [fp, #16]
    19d6:	2b00      	cmp	r3, #0
    19d8:	f000 80ae 	beq.w	1b38 <_vfiprintf_r+0x1b4>
    19dc:	f001 031a 	and.w	r3, r1, #26
    19e0:	2b0a      	cmp	r3, #10
    19e2:	f000 80b5 	beq.w	1b50 <_vfiprintf_r+0x1cc>
    19e6:	2300      	movs	r3, #0
    19e8:	f10d 0970 	add.w	r9, sp, #112	; 0x70
    19ec:	930b      	str	r3, [sp, #44]	; 0x2c
    19ee:	9311      	str	r3, [sp, #68]	; 0x44
    19f0:	9310      	str	r3, [sp, #64]	; 0x40
    19f2:	9303      	str	r3, [sp, #12]
    19f4:	f8cd 903c 	str.w	r9, [sp, #60]	; 0x3c
    19f8:	46ca      	mov	sl, r9
    19fa:	f8cd b010 	str.w	fp, [sp, #16]
    19fe:	f898 3000 	ldrb.w	r3, [r8]
    1a02:	4644      	mov	r4, r8
    1a04:	b1fb      	cbz	r3, 1a46 <_vfiprintf_r+0xc2>
    1a06:	2b25      	cmp	r3, #37	; 0x25
    1a08:	d102      	bne.n	1a10 <_vfiprintf_r+0x8c>
    1a0a:	e01c      	b.n	1a46 <_vfiprintf_r+0xc2>
    1a0c:	2b25      	cmp	r3, #37	; 0x25
    1a0e:	d003      	beq.n	1a18 <_vfiprintf_r+0x94>
    1a10:	f814 3f01 	ldrb.w	r3, [r4, #1]!
    1a14:	2b00      	cmp	r3, #0
    1a16:	d1f9      	bne.n	1a0c <_vfiprintf_r+0x88>
    1a18:	eba4 0508 	sub.w	r5, r4, r8
    1a1c:	b19d      	cbz	r5, 1a46 <_vfiprintf_r+0xc2>
    1a1e:	9b10      	ldr	r3, [sp, #64]	; 0x40
    1a20:	9a11      	ldr	r2, [sp, #68]	; 0x44
    1a22:	f8ca 8000 	str.w	r8, [sl]
    1a26:	3301      	adds	r3, #1
    1a28:	442a      	add	r2, r5
    1a2a:	2b07      	cmp	r3, #7
    1a2c:	f8ca 5004 	str.w	r5, [sl, #4]
    1a30:	9211      	str	r2, [sp, #68]	; 0x44
    1a32:	9310      	str	r3, [sp, #64]	; 0x40
    1a34:	dd7a      	ble.n	1b2c <_vfiprintf_r+0x1a8>
    1a36:	2a00      	cmp	r2, #0
    1a38:	f040 84b0 	bne.w	239c <_vfiprintf_r+0xa18>
    1a3c:	9b03      	ldr	r3, [sp, #12]
    1a3e:	9210      	str	r2, [sp, #64]	; 0x40
    1a40:	442b      	add	r3, r5
    1a42:	46ca      	mov	sl, r9
    1a44:	9303      	str	r3, [sp, #12]
    1a46:	7823      	ldrb	r3, [r4, #0]
    1a48:	2b00      	cmp	r3, #0
    1a4a:	f000 83e0 	beq.w	220e <_vfiprintf_r+0x88a>
    1a4e:	2000      	movs	r0, #0
    1a50:	f04f 0300 	mov.w	r3, #0
    1a54:	f88d 3037 	strb.w	r3, [sp, #55]	; 0x37
    1a58:	f104 0801 	add.w	r8, r4, #1
    1a5c:	7862      	ldrb	r2, [r4, #1]
    1a5e:	4605      	mov	r5, r0
    1a60:	4606      	mov	r6, r0
    1a62:	4603      	mov	r3, r0
    1a64:	f04f 34ff 	mov.w	r4, #4294967295
    1a68:	f108 0801 	add.w	r8, r8, #1
    1a6c:	f1a2 0120 	sub.w	r1, r2, #32
    1a70:	2958      	cmp	r1, #88	; 0x58
    1a72:	f200 82de 	bhi.w	2032 <_vfiprintf_r+0x6ae>
    1a76:	e8df f011 	tbh	[pc, r1, lsl #1]
    1a7a:	0221      	.short	0x0221
    1a7c:	02dc02dc 	.word	0x02dc02dc
    1a80:	02dc0229 	.word	0x02dc0229
    1a84:	02dc02dc 	.word	0x02dc02dc
    1a88:	02dc02dc 	.word	0x02dc02dc
    1a8c:	028902dc 	.word	0x028902dc
    1a90:	02dc0295 	.word	0x02dc0295
    1a94:	02bd00a2 	.word	0x02bd00a2
    1a98:	019f02dc 	.word	0x019f02dc
    1a9c:	01a401a4 	.word	0x01a401a4
    1aa0:	01a401a4 	.word	0x01a401a4
    1aa4:	01a401a4 	.word	0x01a401a4
    1aa8:	01a401a4 	.word	0x01a401a4
    1aac:	02dc01a4 	.word	0x02dc01a4
    1ab0:	02dc02dc 	.word	0x02dc02dc
    1ab4:	02dc02dc 	.word	0x02dc02dc
    1ab8:	02dc02dc 	.word	0x02dc02dc
    1abc:	02dc02dc 	.word	0x02dc02dc
    1ac0:	01b202dc 	.word	0x01b202dc
    1ac4:	02dc02dc 	.word	0x02dc02dc
    1ac8:	02dc02dc 	.word	0x02dc02dc
    1acc:	02dc02dc 	.word	0x02dc02dc
    1ad0:	02dc02dc 	.word	0x02dc02dc
    1ad4:	02dc02dc 	.word	0x02dc02dc
    1ad8:	02dc0197 	.word	0x02dc0197
    1adc:	02dc02dc 	.word	0x02dc02dc
    1ae0:	02dc02dc 	.word	0x02dc02dc
    1ae4:	02dc019b 	.word	0x02dc019b
    1ae8:	025302dc 	.word	0x025302dc
    1aec:	02dc02dc 	.word	0x02dc02dc
    1af0:	02dc02dc 	.word	0x02dc02dc
    1af4:	02dc02dc 	.word	0x02dc02dc
    1af8:	02dc02dc 	.word	0x02dc02dc
    1afc:	02dc02dc 	.word	0x02dc02dc
    1b00:	021b025a 	.word	0x021b025a
    1b04:	02dc02dc 	.word	0x02dc02dc
    1b08:	026e02dc 	.word	0x026e02dc
    1b0c:	02dc021b 	.word	0x02dc021b
    1b10:	027302dc 	.word	0x027302dc
    1b14:	01f502dc 	.word	0x01f502dc
    1b18:	02090182 	.word	0x02090182
    1b1c:	02dc02d7 	.word	0x02dc02d7
    1b20:	02dc029a 	.word	0x02dc029a
    1b24:	02dc00a7 	.word	0x02dc00a7
    1b28:	022e02dc 	.word	0x022e02dc
    1b2c:	f10a 0a08 	add.w	sl, sl, #8
    1b30:	9b03      	ldr	r3, [sp, #12]
    1b32:	442b      	add	r3, r5
    1b34:	9303      	str	r3, [sp, #12]
    1b36:	e786      	b.n	1a46 <_vfiprintf_r+0xc2>
    1b38:	4659      	mov	r1, fp
    1b3a:	9806      	ldr	r0, [sp, #24]
    1b3c:	f000 fdac 	bl	2698 <__swsetup_r>
    1b40:	bb18      	cbnz	r0, 1b8a <_vfiprintf_r+0x206>
    1b42:	f8bb 100c 	ldrh.w	r1, [fp, #12]
    1b46:	f001 031a 	and.w	r3, r1, #26
    1b4a:	2b0a      	cmp	r3, #10
    1b4c:	f47f af4b 	bne.w	19e6 <_vfiprintf_r+0x62>
    1b50:	f9bb 300e 	ldrsh.w	r3, [fp, #14]
    1b54:	2b00      	cmp	r3, #0
    1b56:	f6ff af46 	blt.w	19e6 <_vfiprintf_r+0x62>
    1b5a:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
    1b5e:	07db      	lsls	r3, r3, #31
    1b60:	d405      	bmi.n	1b6e <_vfiprintf_r+0x1ea>
    1b62:	058f      	lsls	r7, r1, #22
    1b64:	d403      	bmi.n	1b6e <_vfiprintf_r+0x1ea>
    1b66:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
    1b6a:	f001 fac3 	bl	30f4 <__retarget_lock_release_recursive>
    1b6e:	462b      	mov	r3, r5
    1b70:	4642      	mov	r2, r8
    1b72:	4659      	mov	r1, fp
    1b74:	9806      	ldr	r0, [sp, #24]
    1b76:	f000 fd4d 	bl	2614 <__sbprintf>
    1b7a:	9003      	str	r0, [sp, #12]
    1b7c:	9803      	ldr	r0, [sp, #12]
    1b7e:	b02d      	add	sp, #180	; 0xb4
    1b80:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1b84:	f000 fef4 	bl	2970 <__sinit>
    1b88:	e709      	b.n	199e <_vfiprintf_r+0x1a>
    1b8a:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
    1b8e:	07d9      	lsls	r1, r3, #31
    1b90:	d404      	bmi.n	1b9c <_vfiprintf_r+0x218>
    1b92:	f8bb 300c 	ldrh.w	r3, [fp, #12]
    1b96:	059a      	lsls	r2, r3, #22
    1b98:	f140 84aa 	bpl.w	24f0 <_vfiprintf_r+0xb6c>
    1b9c:	f04f 33ff 	mov.w	r3, #4294967295
    1ba0:	9303      	str	r3, [sp, #12]
    1ba2:	9803      	ldr	r0, [sp, #12]
    1ba4:	b02d      	add	sp, #180	; 0xb4
    1ba6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1baa:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
    1bae:	f001 fa9f 	bl	30f0 <__retarget_lock_acquire_recursive>
    1bb2:	f9bb 000c 	ldrsh.w	r0, [fp, #12]
    1bb6:	b281      	uxth	r1, r0
    1bb8:	e6fb      	b.n	19b2 <_vfiprintf_r+0x2e>
    1bba:	4276      	negs	r6, r6
    1bbc:	9207      	str	r2, [sp, #28]
    1bbe:	f043 0304 	orr.w	r3, r3, #4
    1bc2:	f898 2000 	ldrb.w	r2, [r8]
    1bc6:	e74f      	b.n	1a68 <_vfiprintf_r+0xe4>
    1bc8:	9608      	str	r6, [sp, #32]
    1bca:	069e      	lsls	r6, r3, #26
    1bcc:	f100 8450 	bmi.w	2470 <_vfiprintf_r+0xaec>
    1bd0:	9907      	ldr	r1, [sp, #28]
    1bd2:	06dd      	lsls	r5, r3, #27
    1bd4:	460a      	mov	r2, r1
    1bd6:	f100 83ef 	bmi.w	23b8 <_vfiprintf_r+0xa34>
    1bda:	0658      	lsls	r0, r3, #25
    1bdc:	f140 83ec 	bpl.w	23b8 <_vfiprintf_r+0xa34>
    1be0:	880e      	ldrh	r6, [r1, #0]
    1be2:	3104      	adds	r1, #4
    1be4:	2700      	movs	r7, #0
    1be6:	2201      	movs	r2, #1
    1be8:	9107      	str	r1, [sp, #28]
    1bea:	f04f 0100 	mov.w	r1, #0
    1bee:	f88d 1037 	strb.w	r1, [sp, #55]	; 0x37
    1bf2:	2500      	movs	r5, #0
    1bf4:	1c61      	adds	r1, r4, #1
    1bf6:	f000 8116 	beq.w	1e26 <_vfiprintf_r+0x4a2>
    1bfa:	f023 0180 	bic.w	r1, r3, #128	; 0x80
    1bfe:	9102      	str	r1, [sp, #8]
    1c00:	ea56 0107 	orrs.w	r1, r6, r7
    1c04:	f040 8114 	bne.w	1e30 <_vfiprintf_r+0x4ac>
    1c08:	2c00      	cmp	r4, #0
    1c0a:	f040 835c 	bne.w	22c6 <_vfiprintf_r+0x942>
    1c0e:	2a00      	cmp	r2, #0
    1c10:	f040 83b7 	bne.w	2382 <_vfiprintf_r+0x9fe>
    1c14:	f013 0301 	ands.w	r3, r3, #1
    1c18:	9305      	str	r3, [sp, #20]
    1c1a:	f000 8457 	beq.w	24cc <_vfiprintf_r+0xb48>
    1c1e:	f10d 0bb0 	add.w	fp, sp, #176	; 0xb0
    1c22:	2330      	movs	r3, #48	; 0x30
    1c24:	f80b 3d41 	strb.w	r3, [fp, #-65]!
    1c28:	9b05      	ldr	r3, [sp, #20]
    1c2a:	42a3      	cmp	r3, r4
    1c2c:	bfb8      	it	lt
    1c2e:	4623      	movlt	r3, r4
    1c30:	9301      	str	r3, [sp, #4]
    1c32:	b10d      	cbz	r5, 1c38 <_vfiprintf_r+0x2b4>
    1c34:	3301      	adds	r3, #1
    1c36:	9301      	str	r3, [sp, #4]
    1c38:	9b02      	ldr	r3, [sp, #8]
    1c3a:	f013 0302 	ands.w	r3, r3, #2
    1c3e:	9309      	str	r3, [sp, #36]	; 0x24
    1c40:	d002      	beq.n	1c48 <_vfiprintf_r+0x2c4>
    1c42:	9b01      	ldr	r3, [sp, #4]
    1c44:	3302      	adds	r3, #2
    1c46:	9301      	str	r3, [sp, #4]
    1c48:	9b02      	ldr	r3, [sp, #8]
    1c4a:	f013 0384 	ands.w	r3, r3, #132	; 0x84
    1c4e:	930a      	str	r3, [sp, #40]	; 0x28
    1c50:	f040 8217 	bne.w	2082 <_vfiprintf_r+0x6fe>
    1c54:	9b08      	ldr	r3, [sp, #32]
    1c56:	9a01      	ldr	r2, [sp, #4]
    1c58:	1a9d      	subs	r5, r3, r2
    1c5a:	2d00      	cmp	r5, #0
    1c5c:	f340 8211 	ble.w	2082 <_vfiprintf_r+0x6fe>
    1c60:	2d10      	cmp	r5, #16
    1c62:	f340 8490 	ble.w	2586 <_vfiprintf_r+0xc02>
    1c66:	9b10      	ldr	r3, [sp, #64]	; 0x40
    1c68:	9a11      	ldr	r2, [sp, #68]	; 0x44
    1c6a:	4ec4      	ldr	r6, [pc, #784]	; (1f7c <_vfiprintf_r+0x5f8>)
    1c6c:	46d6      	mov	lr, sl
    1c6e:	2710      	movs	r7, #16
    1c70:	46a2      	mov	sl, r4
    1c72:	4619      	mov	r1, r3
    1c74:	9c06      	ldr	r4, [sp, #24]
    1c76:	e007      	b.n	1c88 <_vfiprintf_r+0x304>
    1c78:	f101 0c02 	add.w	ip, r1, #2
    1c7c:	f10e 0e08 	add.w	lr, lr, #8
    1c80:	4601      	mov	r1, r0
    1c82:	3d10      	subs	r5, #16
    1c84:	2d10      	cmp	r5, #16
    1c86:	dd11      	ble.n	1cac <_vfiprintf_r+0x328>
    1c88:	1c48      	adds	r0, r1, #1
    1c8a:	3210      	adds	r2, #16
    1c8c:	2807      	cmp	r0, #7
    1c8e:	9211      	str	r2, [sp, #68]	; 0x44
    1c90:	e88e 00c0 	stmia.w	lr, {r6, r7}
    1c94:	9010      	str	r0, [sp, #64]	; 0x40
    1c96:	ddef      	ble.n	1c78 <_vfiprintf_r+0x2f4>
    1c98:	2a00      	cmp	r2, #0
    1c9a:	f040 81e4 	bne.w	2066 <_vfiprintf_r+0x6e2>
    1c9e:	3d10      	subs	r5, #16
    1ca0:	2d10      	cmp	r5, #16
    1ca2:	4611      	mov	r1, r2
    1ca4:	f04f 0c01 	mov.w	ip, #1
    1ca8:	46ce      	mov	lr, r9
    1caa:	dced      	bgt.n	1c88 <_vfiprintf_r+0x304>
    1cac:	4654      	mov	r4, sl
    1cae:	4661      	mov	r1, ip
    1cb0:	46f2      	mov	sl, lr
    1cb2:	442a      	add	r2, r5
    1cb4:	2907      	cmp	r1, #7
    1cb6:	9211      	str	r2, [sp, #68]	; 0x44
    1cb8:	f8ca 6000 	str.w	r6, [sl]
    1cbc:	f8ca 5004 	str.w	r5, [sl, #4]
    1cc0:	9110      	str	r1, [sp, #64]	; 0x40
    1cc2:	f300 82ec 	bgt.w	229e <_vfiprintf_r+0x91a>
    1cc6:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
    1cca:	f10a 0a08 	add.w	sl, sl, #8
    1cce:	1c48      	adds	r0, r1, #1
    1cd0:	2d00      	cmp	r5, #0
    1cd2:	f040 81de 	bne.w	2092 <_vfiprintf_r+0x70e>
    1cd6:	9b09      	ldr	r3, [sp, #36]	; 0x24
    1cd8:	2b00      	cmp	r3, #0
    1cda:	f000 81f8 	beq.w	20ce <_vfiprintf_r+0x74a>
    1cde:	3202      	adds	r2, #2
    1ce0:	a90e      	add	r1, sp, #56	; 0x38
    1ce2:	2302      	movs	r3, #2
    1ce4:	2807      	cmp	r0, #7
    1ce6:	9211      	str	r2, [sp, #68]	; 0x44
    1ce8:	9010      	str	r0, [sp, #64]	; 0x40
    1cea:	e88a 000a 	stmia.w	sl, {r1, r3}
    1cee:	f340 81ea 	ble.w	20c6 <_vfiprintf_r+0x742>
    1cf2:	2a00      	cmp	r2, #0
    1cf4:	f040 838c 	bne.w	2410 <_vfiprintf_r+0xa8c>
    1cf8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    1cfa:	2b80      	cmp	r3, #128	; 0x80
    1cfc:	f04f 0001 	mov.w	r0, #1
    1d00:	4611      	mov	r1, r2
    1d02:	46ca      	mov	sl, r9
    1d04:	f040 81e7 	bne.w	20d6 <_vfiprintf_r+0x752>
    1d08:	9b08      	ldr	r3, [sp, #32]
    1d0a:	9d01      	ldr	r5, [sp, #4]
    1d0c:	1b5e      	subs	r6, r3, r5
    1d0e:	2e00      	cmp	r6, #0
    1d10:	f340 81e1 	ble.w	20d6 <_vfiprintf_r+0x752>
    1d14:	2e10      	cmp	r6, #16
    1d16:	4d9a      	ldr	r5, [pc, #616]	; (1f80 <_vfiprintf_r+0x5fc>)
    1d18:	f340 8450 	ble.w	25bc <_vfiprintf_r+0xc38>
    1d1c:	46d4      	mov	ip, sl
    1d1e:	2710      	movs	r7, #16
    1d20:	46a2      	mov	sl, r4
    1d22:	9c06      	ldr	r4, [sp, #24]
    1d24:	e007      	b.n	1d36 <_vfiprintf_r+0x3b2>
    1d26:	f101 0e02 	add.w	lr, r1, #2
    1d2a:	f10c 0c08 	add.w	ip, ip, #8
    1d2e:	4601      	mov	r1, r0
    1d30:	3e10      	subs	r6, #16
    1d32:	2e10      	cmp	r6, #16
    1d34:	dd11      	ble.n	1d5a <_vfiprintf_r+0x3d6>
    1d36:	1c48      	adds	r0, r1, #1
    1d38:	3210      	adds	r2, #16
    1d3a:	2807      	cmp	r0, #7
    1d3c:	9211      	str	r2, [sp, #68]	; 0x44
    1d3e:	e88c 00a0 	stmia.w	ip, {r5, r7}
    1d42:	9010      	str	r0, [sp, #64]	; 0x40
    1d44:	ddef      	ble.n	1d26 <_vfiprintf_r+0x3a2>
    1d46:	2a00      	cmp	r2, #0
    1d48:	f040 829d 	bne.w	2286 <_vfiprintf_r+0x902>
    1d4c:	3e10      	subs	r6, #16
    1d4e:	2e10      	cmp	r6, #16
    1d50:	f04f 0e01 	mov.w	lr, #1
    1d54:	4611      	mov	r1, r2
    1d56:	46cc      	mov	ip, r9
    1d58:	dced      	bgt.n	1d36 <_vfiprintf_r+0x3b2>
    1d5a:	4654      	mov	r4, sl
    1d5c:	46e2      	mov	sl, ip
    1d5e:	4432      	add	r2, r6
    1d60:	f1be 0f07 	cmp.w	lr, #7
    1d64:	9211      	str	r2, [sp, #68]	; 0x44
    1d66:	e88a 0060 	stmia.w	sl, {r5, r6}
    1d6a:	f8cd e040 	str.w	lr, [sp, #64]	; 0x40
    1d6e:	f300 8369 	bgt.w	2444 <_vfiprintf_r+0xac0>
    1d72:	f10a 0a08 	add.w	sl, sl, #8
    1d76:	f10e 0001 	add.w	r0, lr, #1
    1d7a:	4671      	mov	r1, lr
    1d7c:	e1ab      	b.n	20d6 <_vfiprintf_r+0x752>
    1d7e:	9608      	str	r6, [sp, #32]
    1d80:	f013 0220 	ands.w	r2, r3, #32
    1d84:	f040 838c 	bne.w	24a0 <_vfiprintf_r+0xb1c>
    1d88:	f013 0110 	ands.w	r1, r3, #16
    1d8c:	f040 831a 	bne.w	23c4 <_vfiprintf_r+0xa40>
    1d90:	f013 0240 	ands.w	r2, r3, #64	; 0x40
    1d94:	f000 8316 	beq.w	23c4 <_vfiprintf_r+0xa40>
    1d98:	9807      	ldr	r0, [sp, #28]
    1d9a:	460a      	mov	r2, r1
    1d9c:	4601      	mov	r1, r0
    1d9e:	3104      	adds	r1, #4
    1da0:	8806      	ldrh	r6, [r0, #0]
    1da2:	9107      	str	r1, [sp, #28]
    1da4:	2700      	movs	r7, #0
    1da6:	e720      	b.n	1bea <_vfiprintf_r+0x266>
    1da8:	9608      	str	r6, [sp, #32]
    1daa:	f043 0310 	orr.w	r3, r3, #16
    1dae:	e7e7      	b.n	1d80 <_vfiprintf_r+0x3fc>
    1db0:	9608      	str	r6, [sp, #32]
    1db2:	f043 0310 	orr.w	r3, r3, #16
    1db6:	e708      	b.n	1bca <_vfiprintf_r+0x246>
    1db8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
    1dbc:	f898 2000 	ldrb.w	r2, [r8]
    1dc0:	e652      	b.n	1a68 <_vfiprintf_r+0xe4>
    1dc2:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
    1dc6:	2600      	movs	r6, #0
    1dc8:	f818 2b01 	ldrb.w	r2, [r8], #1
    1dcc:	eb06 0686 	add.w	r6, r6, r6, lsl #2
    1dd0:	eb01 0646 	add.w	r6, r1, r6, lsl #1
    1dd4:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
    1dd8:	2909      	cmp	r1, #9
    1dda:	d9f5      	bls.n	1dc8 <_vfiprintf_r+0x444>
    1ddc:	e646      	b.n	1a6c <_vfiprintf_r+0xe8>
    1dde:	9608      	str	r6, [sp, #32]
    1de0:	2800      	cmp	r0, #0
    1de2:	f040 8408 	bne.w	25f6 <_vfiprintf_r+0xc72>
    1de6:	f043 0310 	orr.w	r3, r3, #16
    1dea:	069e      	lsls	r6, r3, #26
    1dec:	f100 834c 	bmi.w	2488 <_vfiprintf_r+0xb04>
    1df0:	06dd      	lsls	r5, r3, #27
    1df2:	f100 82f3 	bmi.w	23dc <_vfiprintf_r+0xa58>
    1df6:	0658      	lsls	r0, r3, #25
    1df8:	f140 82f0 	bpl.w	23dc <_vfiprintf_r+0xa58>
    1dfc:	9d07      	ldr	r5, [sp, #28]
    1dfe:	f9b5 6000 	ldrsh.w	r6, [r5]
    1e02:	462a      	mov	r2, r5
    1e04:	17f7      	asrs	r7, r6, #31
    1e06:	3204      	adds	r2, #4
    1e08:	4630      	mov	r0, r6
    1e0a:	4639      	mov	r1, r7
    1e0c:	9207      	str	r2, [sp, #28]
    1e0e:	2800      	cmp	r0, #0
    1e10:	f171 0200 	sbcs.w	r2, r1, #0
    1e14:	f2c0 835d 	blt.w	24d2 <_vfiprintf_r+0xb4e>
    1e18:	1c61      	adds	r1, r4, #1
    1e1a:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
    1e1e:	f04f 0201 	mov.w	r2, #1
    1e22:	f47f aeea 	bne.w	1bfa <_vfiprintf_r+0x276>
    1e26:	ea56 0107 	orrs.w	r1, r6, r7
    1e2a:	f000 824d 	beq.w	22c8 <_vfiprintf_r+0x944>
    1e2e:	9302      	str	r3, [sp, #8]
    1e30:	2a01      	cmp	r2, #1
    1e32:	f000 828c 	beq.w	234e <_vfiprintf_r+0x9ca>
    1e36:	2a02      	cmp	r2, #2
    1e38:	f040 825c 	bne.w	22f4 <_vfiprintf_r+0x970>
    1e3c:	980b      	ldr	r0, [sp, #44]	; 0x2c
    1e3e:	46cb      	mov	fp, r9
    1e40:	0933      	lsrs	r3, r6, #4
    1e42:	f006 010f 	and.w	r1, r6, #15
    1e46:	ea43 7307 	orr.w	r3, r3, r7, lsl #28
    1e4a:	093a      	lsrs	r2, r7, #4
    1e4c:	461e      	mov	r6, r3
    1e4e:	4617      	mov	r7, r2
    1e50:	5c43      	ldrb	r3, [r0, r1]
    1e52:	f80b 3d01 	strb.w	r3, [fp, #-1]!
    1e56:	ea56 0307 	orrs.w	r3, r6, r7
    1e5a:	d1f1      	bne.n	1e40 <_vfiprintf_r+0x4bc>
    1e5c:	eba9 030b 	sub.w	r3, r9, fp
    1e60:	9305      	str	r3, [sp, #20]
    1e62:	e6e1      	b.n	1c28 <_vfiprintf_r+0x2a4>
    1e64:	2800      	cmp	r0, #0
    1e66:	f040 83c0 	bne.w	25ea <_vfiprintf_r+0xc66>
    1e6a:	0699      	lsls	r1, r3, #26
    1e6c:	f100 8367 	bmi.w	253e <_vfiprintf_r+0xbba>
    1e70:	06da      	lsls	r2, r3, #27
    1e72:	f100 80f1 	bmi.w	2058 <_vfiprintf_r+0x6d4>
    1e76:	065b      	lsls	r3, r3, #25
    1e78:	f140 80ee 	bpl.w	2058 <_vfiprintf_r+0x6d4>
    1e7c:	9a07      	ldr	r2, [sp, #28]
    1e7e:	6813      	ldr	r3, [r2, #0]
    1e80:	3204      	adds	r2, #4
    1e82:	9207      	str	r2, [sp, #28]
    1e84:	f8bd 200c 	ldrh.w	r2, [sp, #12]
    1e88:	801a      	strh	r2, [r3, #0]
    1e8a:	e5b8      	b.n	19fe <_vfiprintf_r+0x7a>
    1e8c:	9807      	ldr	r0, [sp, #28]
    1e8e:	4a3d      	ldr	r2, [pc, #244]	; (1f84 <_vfiprintf_r+0x600>)
    1e90:	9608      	str	r6, [sp, #32]
    1e92:	920b      	str	r2, [sp, #44]	; 0x2c
    1e94:	6806      	ldr	r6, [r0, #0]
    1e96:	2278      	movs	r2, #120	; 0x78
    1e98:	2130      	movs	r1, #48	; 0x30
    1e9a:	3004      	adds	r0, #4
    1e9c:	f88d 2039 	strb.w	r2, [sp, #57]	; 0x39
    1ea0:	f043 0302 	orr.w	r3, r3, #2
    1ea4:	9007      	str	r0, [sp, #28]
    1ea6:	2700      	movs	r7, #0
    1ea8:	f88d 1038 	strb.w	r1, [sp, #56]	; 0x38
    1eac:	2202      	movs	r2, #2
    1eae:	e69c      	b.n	1bea <_vfiprintf_r+0x266>
    1eb0:	9608      	str	r6, [sp, #32]
    1eb2:	2800      	cmp	r0, #0
    1eb4:	d099      	beq.n	1dea <_vfiprintf_r+0x466>
    1eb6:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
    1eba:	e796      	b.n	1dea <_vfiprintf_r+0x466>
    1ebc:	f898 2000 	ldrb.w	r2, [r8]
    1ec0:	2d00      	cmp	r5, #0
    1ec2:	f47f add1 	bne.w	1a68 <_vfiprintf_r+0xe4>
    1ec6:	2001      	movs	r0, #1
    1ec8:	2520      	movs	r5, #32
    1eca:	e5cd      	b.n	1a68 <_vfiprintf_r+0xe4>
    1ecc:	f043 0301 	orr.w	r3, r3, #1
    1ed0:	f898 2000 	ldrb.w	r2, [r8]
    1ed4:	e5c8      	b.n	1a68 <_vfiprintf_r+0xe4>
    1ed6:	9608      	str	r6, [sp, #32]
    1ed8:	2800      	cmp	r0, #0
    1eda:	f040 8393 	bne.w	2604 <_vfiprintf_r+0xc80>
    1ede:	4929      	ldr	r1, [pc, #164]	; (1f84 <_vfiprintf_r+0x600>)
    1ee0:	910b      	str	r1, [sp, #44]	; 0x2c
    1ee2:	069f      	lsls	r7, r3, #26
    1ee4:	f100 82e8 	bmi.w	24b8 <_vfiprintf_r+0xb34>
    1ee8:	9807      	ldr	r0, [sp, #28]
    1eea:	06de      	lsls	r6, r3, #27
    1eec:	4601      	mov	r1, r0
    1eee:	f100 8270 	bmi.w	23d2 <_vfiprintf_r+0xa4e>
    1ef2:	065d      	lsls	r5, r3, #25
    1ef4:	f140 826d 	bpl.w	23d2 <_vfiprintf_r+0xa4e>
    1ef8:	3104      	adds	r1, #4
    1efa:	8806      	ldrh	r6, [r0, #0]
    1efc:	9107      	str	r1, [sp, #28]
    1efe:	2700      	movs	r7, #0
    1f00:	07d8      	lsls	r0, r3, #31
    1f02:	f140 8222 	bpl.w	234a <_vfiprintf_r+0x9c6>
    1f06:	ea56 0107 	orrs.w	r1, r6, r7
    1f0a:	f000 821e 	beq.w	234a <_vfiprintf_r+0x9c6>
    1f0e:	2130      	movs	r1, #48	; 0x30
    1f10:	f88d 2039 	strb.w	r2, [sp, #57]	; 0x39
    1f14:	f043 0302 	orr.w	r3, r3, #2
    1f18:	f88d 1038 	strb.w	r1, [sp, #56]	; 0x38
    1f1c:	2202      	movs	r2, #2
    1f1e:	e664      	b.n	1bea <_vfiprintf_r+0x266>
    1f20:	9608      	str	r6, [sp, #32]
    1f22:	2800      	cmp	r0, #0
    1f24:	f040 836b 	bne.w	25fe <_vfiprintf_r+0xc7a>
    1f28:	4917      	ldr	r1, [pc, #92]	; (1f88 <_vfiprintf_r+0x604>)
    1f2a:	910b      	str	r1, [sp, #44]	; 0x2c
    1f2c:	e7d9      	b.n	1ee2 <_vfiprintf_r+0x55e>
    1f2e:	9907      	ldr	r1, [sp, #28]
    1f30:	9608      	str	r6, [sp, #32]
    1f32:	680a      	ldr	r2, [r1, #0]
    1f34:	f88d 2048 	strb.w	r2, [sp, #72]	; 0x48
    1f38:	f04f 0000 	mov.w	r0, #0
    1f3c:	460a      	mov	r2, r1
    1f3e:	f88d 0037 	strb.w	r0, [sp, #55]	; 0x37
    1f42:	3204      	adds	r2, #4
    1f44:	2001      	movs	r0, #1
    1f46:	9001      	str	r0, [sp, #4]
    1f48:	9207      	str	r2, [sp, #28]
    1f4a:	9005      	str	r0, [sp, #20]
    1f4c:	f10d 0b48 	add.w	fp, sp, #72	; 0x48
    1f50:	9302      	str	r3, [sp, #8]
    1f52:	2400      	movs	r4, #0
    1f54:	e670      	b.n	1c38 <_vfiprintf_r+0x2b4>
    1f56:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    1f5a:	f898 2000 	ldrb.w	r2, [r8]
    1f5e:	e583      	b.n	1a68 <_vfiprintf_r+0xe4>
    1f60:	f898 2000 	ldrb.w	r2, [r8]
    1f64:	2a6c      	cmp	r2, #108	; 0x6c
    1f66:	bf03      	ittte	eq
    1f68:	f898 2001 	ldrbeq.w	r2, [r8, #1]
    1f6c:	f043 0320 	orreq.w	r3, r3, #32
    1f70:	f108 0801 	addeq.w	r8, r8, #1
    1f74:	f043 0310 	orrne.w	r3, r3, #16
    1f78:	e576      	b.n	1a68 <_vfiprintf_r+0xe4>
    1f7a:	bf00      	nop
    1f7c:	00004758 	.word	0x00004758
    1f80:	00004768 	.word	0x00004768
    1f84:	0000473c 	.word	0x0000473c
    1f88:	00004728 	.word	0x00004728
    1f8c:	9907      	ldr	r1, [sp, #28]
    1f8e:	680e      	ldr	r6, [r1, #0]
    1f90:	460a      	mov	r2, r1
    1f92:	2e00      	cmp	r6, #0
    1f94:	f102 0204 	add.w	r2, r2, #4
    1f98:	f6ff ae0f 	blt.w	1bba <_vfiprintf_r+0x236>
    1f9c:	9207      	str	r2, [sp, #28]
    1f9e:	f898 2000 	ldrb.w	r2, [r8]
    1fa2:	e561      	b.n	1a68 <_vfiprintf_r+0xe4>
    1fa4:	f898 2000 	ldrb.w	r2, [r8]
    1fa8:	2001      	movs	r0, #1
    1faa:	252b      	movs	r5, #43	; 0x2b
    1fac:	e55c      	b.n	1a68 <_vfiprintf_r+0xe4>
    1fae:	9907      	ldr	r1, [sp, #28]
    1fb0:	9608      	str	r6, [sp, #32]
    1fb2:	f8d1 b000 	ldr.w	fp, [r1]
    1fb6:	f04f 0200 	mov.w	r2, #0
    1fba:	f88d 2037 	strb.w	r2, [sp, #55]	; 0x37
    1fbe:	1d0e      	adds	r6, r1, #4
    1fc0:	f1bb 0f00 	cmp.w	fp, #0
    1fc4:	f000 82e5 	beq.w	2592 <_vfiprintf_r+0xc0e>
    1fc8:	1c67      	adds	r7, r4, #1
    1fca:	f000 82c4 	beq.w	2556 <_vfiprintf_r+0xbd2>
    1fce:	4622      	mov	r2, r4
    1fd0:	2100      	movs	r1, #0
    1fd2:	4658      	mov	r0, fp
    1fd4:	9301      	str	r3, [sp, #4]
    1fd6:	f001 fbdb 	bl	3790 <memchr>
    1fda:	9b01      	ldr	r3, [sp, #4]
    1fdc:	2800      	cmp	r0, #0
    1fde:	f000 82e5 	beq.w	25ac <_vfiprintf_r+0xc28>
    1fe2:	eba0 020b 	sub.w	r2, r0, fp
    1fe6:	9205      	str	r2, [sp, #20]
    1fe8:	9607      	str	r6, [sp, #28]
    1fea:	9302      	str	r3, [sp, #8]
    1fec:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
    1ff0:	2400      	movs	r4, #0
    1ff2:	e619      	b.n	1c28 <_vfiprintf_r+0x2a4>
    1ff4:	f898 2000 	ldrb.w	r2, [r8]
    1ff8:	2a2a      	cmp	r2, #42	; 0x2a
    1ffa:	f108 0701 	add.w	r7, r8, #1
    1ffe:	f000 82e9 	beq.w	25d4 <_vfiprintf_r+0xc50>
    2002:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
    2006:	2909      	cmp	r1, #9
    2008:	46b8      	mov	r8, r7
    200a:	f04f 0400 	mov.w	r4, #0
    200e:	f63f ad2d 	bhi.w	1a6c <_vfiprintf_r+0xe8>
    2012:	f818 2b01 	ldrb.w	r2, [r8], #1
    2016:	eb04 0484 	add.w	r4, r4, r4, lsl #2
    201a:	eb01 0444 	add.w	r4, r1, r4, lsl #1
    201e:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
    2022:	2909      	cmp	r1, #9
    2024:	d9f5      	bls.n	2012 <_vfiprintf_r+0x68e>
    2026:	e521      	b.n	1a6c <_vfiprintf_r+0xe8>
    2028:	f043 0320 	orr.w	r3, r3, #32
    202c:	f898 2000 	ldrb.w	r2, [r8]
    2030:	e51a      	b.n	1a68 <_vfiprintf_r+0xe4>
    2032:	9608      	str	r6, [sp, #32]
    2034:	2800      	cmp	r0, #0
    2036:	f040 82db 	bne.w	25f0 <_vfiprintf_r+0xc6c>
    203a:	2a00      	cmp	r2, #0
    203c:	f000 80e7 	beq.w	220e <_vfiprintf_r+0x88a>
    2040:	2101      	movs	r1, #1
    2042:	f88d 2048 	strb.w	r2, [sp, #72]	; 0x48
    2046:	f04f 0200 	mov.w	r2, #0
    204a:	9101      	str	r1, [sp, #4]
    204c:	f88d 2037 	strb.w	r2, [sp, #55]	; 0x37
    2050:	9105      	str	r1, [sp, #20]
    2052:	f10d 0b48 	add.w	fp, sp, #72	; 0x48
    2056:	e77b      	b.n	1f50 <_vfiprintf_r+0x5cc>
    2058:	9a07      	ldr	r2, [sp, #28]
    205a:	6813      	ldr	r3, [r2, #0]
    205c:	3204      	adds	r2, #4
    205e:	9207      	str	r2, [sp, #28]
    2060:	9a03      	ldr	r2, [sp, #12]
    2062:	601a      	str	r2, [r3, #0]
    2064:	e4cb      	b.n	19fe <_vfiprintf_r+0x7a>
    2066:	aa0f      	add	r2, sp, #60	; 0x3c
    2068:	9904      	ldr	r1, [sp, #16]
    206a:	4620      	mov	r0, r4
    206c:	f7ff fc4a 	bl	1904 <__sprint_r.part.0>
    2070:	2800      	cmp	r0, #0
    2072:	f040 8139 	bne.w	22e8 <_vfiprintf_r+0x964>
    2076:	9910      	ldr	r1, [sp, #64]	; 0x40
    2078:	9a11      	ldr	r2, [sp, #68]	; 0x44
    207a:	f101 0c01 	add.w	ip, r1, #1
    207e:	46ce      	mov	lr, r9
    2080:	e5ff      	b.n	1c82 <_vfiprintf_r+0x2fe>
    2082:	9910      	ldr	r1, [sp, #64]	; 0x40
    2084:	9a11      	ldr	r2, [sp, #68]	; 0x44
    2086:	1c48      	adds	r0, r1, #1
    2088:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
    208c:	2d00      	cmp	r5, #0
    208e:	f43f ae22 	beq.w	1cd6 <_vfiprintf_r+0x352>
    2092:	3201      	adds	r2, #1
    2094:	f10d 0537 	add.w	r5, sp, #55	; 0x37
    2098:	2101      	movs	r1, #1
    209a:	2807      	cmp	r0, #7
    209c:	9211      	str	r2, [sp, #68]	; 0x44
    209e:	9010      	str	r0, [sp, #64]	; 0x40
    20a0:	f8ca 5000 	str.w	r5, [sl]
    20a4:	f8ca 1004 	str.w	r1, [sl, #4]
    20a8:	f340 8108 	ble.w	22bc <_vfiprintf_r+0x938>
    20ac:	2a00      	cmp	r2, #0
    20ae:	f040 81bc 	bne.w	242a <_vfiprintf_r+0xaa6>
    20b2:	9b09      	ldr	r3, [sp, #36]	; 0x24
    20b4:	2b00      	cmp	r3, #0
    20b6:	f43f ae1f 	beq.w	1cf8 <_vfiprintf_r+0x374>
    20ba:	ab0e      	add	r3, sp, #56	; 0x38
    20bc:	2202      	movs	r2, #2
    20be:	4608      	mov	r0, r1
    20c0:	931c      	str	r3, [sp, #112]	; 0x70
    20c2:	921d      	str	r2, [sp, #116]	; 0x74
    20c4:	46ca      	mov	sl, r9
    20c6:	4601      	mov	r1, r0
    20c8:	f10a 0a08 	add.w	sl, sl, #8
    20cc:	3001      	adds	r0, #1
    20ce:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    20d0:	2b80      	cmp	r3, #128	; 0x80
    20d2:	f43f ae19 	beq.w	1d08 <_vfiprintf_r+0x384>
    20d6:	9b05      	ldr	r3, [sp, #20]
    20d8:	1ae4      	subs	r4, r4, r3
    20da:	2c00      	cmp	r4, #0
    20dc:	dd2e      	ble.n	213c <_vfiprintf_r+0x7b8>
    20de:	2c10      	cmp	r4, #16
    20e0:	4db3      	ldr	r5, [pc, #716]	; (23b0 <_vfiprintf_r+0xa2c>)
    20e2:	dd1e      	ble.n	2122 <_vfiprintf_r+0x79e>
    20e4:	46d6      	mov	lr, sl
    20e6:	2610      	movs	r6, #16
    20e8:	9f06      	ldr	r7, [sp, #24]
    20ea:	f8dd a010 	ldr.w	sl, [sp, #16]
    20ee:	e006      	b.n	20fe <_vfiprintf_r+0x77a>
    20f0:	1c88      	adds	r0, r1, #2
    20f2:	f10e 0e08 	add.w	lr, lr, #8
    20f6:	4619      	mov	r1, r3
    20f8:	3c10      	subs	r4, #16
    20fa:	2c10      	cmp	r4, #16
    20fc:	dd10      	ble.n	2120 <_vfiprintf_r+0x79c>
    20fe:	1c4b      	adds	r3, r1, #1
    2100:	3210      	adds	r2, #16
    2102:	2b07      	cmp	r3, #7
    2104:	9211      	str	r2, [sp, #68]	; 0x44
    2106:	e88e 0060 	stmia.w	lr, {r5, r6}
    210a:	9310      	str	r3, [sp, #64]	; 0x40
    210c:	ddf0      	ble.n	20f0 <_vfiprintf_r+0x76c>
    210e:	2a00      	cmp	r2, #0
    2110:	d165      	bne.n	21de <_vfiprintf_r+0x85a>
    2112:	3c10      	subs	r4, #16
    2114:	2c10      	cmp	r4, #16
    2116:	f04f 0001 	mov.w	r0, #1
    211a:	4611      	mov	r1, r2
    211c:	46ce      	mov	lr, r9
    211e:	dcee      	bgt.n	20fe <_vfiprintf_r+0x77a>
    2120:	46f2      	mov	sl, lr
    2122:	4422      	add	r2, r4
    2124:	2807      	cmp	r0, #7
    2126:	9211      	str	r2, [sp, #68]	; 0x44
    2128:	f8ca 5000 	str.w	r5, [sl]
    212c:	f8ca 4004 	str.w	r4, [sl, #4]
    2130:	9010      	str	r0, [sp, #64]	; 0x40
    2132:	f300 8085 	bgt.w	2240 <_vfiprintf_r+0x8bc>
    2136:	f10a 0a08 	add.w	sl, sl, #8
    213a:	3001      	adds	r0, #1
    213c:	9905      	ldr	r1, [sp, #20]
    213e:	f8ca b000 	str.w	fp, [sl]
    2142:	440a      	add	r2, r1
    2144:	2807      	cmp	r0, #7
    2146:	9211      	str	r2, [sp, #68]	; 0x44
    2148:	f8ca 1004 	str.w	r1, [sl, #4]
    214c:	9010      	str	r0, [sp, #64]	; 0x40
    214e:	f340 8082 	ble.w	2256 <_vfiprintf_r+0x8d2>
    2152:	2a00      	cmp	r2, #0
    2154:	f040 8118 	bne.w	2388 <_vfiprintf_r+0xa04>
    2158:	9b02      	ldr	r3, [sp, #8]
    215a:	9210      	str	r2, [sp, #64]	; 0x40
    215c:	0758      	lsls	r0, r3, #29
    215e:	d535      	bpl.n	21cc <_vfiprintf_r+0x848>
    2160:	9b08      	ldr	r3, [sp, #32]
    2162:	9901      	ldr	r1, [sp, #4]
    2164:	1a5c      	subs	r4, r3, r1
    2166:	2c00      	cmp	r4, #0
    2168:	f340 80e7 	ble.w	233a <_vfiprintf_r+0x9b6>
    216c:	46ca      	mov	sl, r9
    216e:	2c10      	cmp	r4, #16
    2170:	f340 8218 	ble.w	25a4 <_vfiprintf_r+0xc20>
    2174:	9910      	ldr	r1, [sp, #64]	; 0x40
    2176:	4e8f      	ldr	r6, [pc, #572]	; (23b4 <_vfiprintf_r+0xa30>)
    2178:	9f06      	ldr	r7, [sp, #24]
    217a:	f8dd b010 	ldr.w	fp, [sp, #16]
    217e:	2510      	movs	r5, #16
    2180:	e006      	b.n	2190 <_vfiprintf_r+0x80c>
    2182:	1c88      	adds	r0, r1, #2
    2184:	f10a 0a08 	add.w	sl, sl, #8
    2188:	4619      	mov	r1, r3
    218a:	3c10      	subs	r4, #16
    218c:	2c10      	cmp	r4, #16
    218e:	dd11      	ble.n	21b4 <_vfiprintf_r+0x830>
    2190:	1c4b      	adds	r3, r1, #1
    2192:	3210      	adds	r2, #16
    2194:	2b07      	cmp	r3, #7
    2196:	9211      	str	r2, [sp, #68]	; 0x44
    2198:	f8ca 6000 	str.w	r6, [sl]
    219c:	f8ca 5004 	str.w	r5, [sl, #4]
    21a0:	9310      	str	r3, [sp, #64]	; 0x40
    21a2:	ddee      	ble.n	2182 <_vfiprintf_r+0x7fe>
    21a4:	bb42      	cbnz	r2, 21f8 <_vfiprintf_r+0x874>
    21a6:	3c10      	subs	r4, #16
    21a8:	2c10      	cmp	r4, #16
    21aa:	f04f 0001 	mov.w	r0, #1
    21ae:	4611      	mov	r1, r2
    21b0:	46ca      	mov	sl, r9
    21b2:	dced      	bgt.n	2190 <_vfiprintf_r+0x80c>
    21b4:	4422      	add	r2, r4
    21b6:	2807      	cmp	r0, #7
    21b8:	9211      	str	r2, [sp, #68]	; 0x44
    21ba:	f8ca 6000 	str.w	r6, [sl]
    21be:	f8ca 4004 	str.w	r4, [sl, #4]
    21c2:	9010      	str	r0, [sp, #64]	; 0x40
    21c4:	dd51      	ble.n	226a <_vfiprintf_r+0x8e6>
    21c6:	2a00      	cmp	r2, #0
    21c8:	f040 819b 	bne.w	2502 <_vfiprintf_r+0xb7e>
    21cc:	9b03      	ldr	r3, [sp, #12]
    21ce:	9a08      	ldr	r2, [sp, #32]
    21d0:	9901      	ldr	r1, [sp, #4]
    21d2:	428a      	cmp	r2, r1
    21d4:	bfac      	ite	ge
    21d6:	189b      	addge	r3, r3, r2
    21d8:	185b      	addlt	r3, r3, r1
    21da:	9303      	str	r3, [sp, #12]
    21dc:	e04e      	b.n	227c <_vfiprintf_r+0x8f8>
    21de:	aa0f      	add	r2, sp, #60	; 0x3c
    21e0:	4651      	mov	r1, sl
    21e2:	4638      	mov	r0, r7
    21e4:	f7ff fb8e 	bl	1904 <__sprint_r.part.0>
    21e8:	2800      	cmp	r0, #0
    21ea:	f040 813f 	bne.w	246c <_vfiprintf_r+0xae8>
    21ee:	9910      	ldr	r1, [sp, #64]	; 0x40
    21f0:	9a11      	ldr	r2, [sp, #68]	; 0x44
    21f2:	1c48      	adds	r0, r1, #1
    21f4:	46ce      	mov	lr, r9
    21f6:	e77f      	b.n	20f8 <_vfiprintf_r+0x774>
    21f8:	aa0f      	add	r2, sp, #60	; 0x3c
    21fa:	4659      	mov	r1, fp
    21fc:	4638      	mov	r0, r7
    21fe:	f7ff fb81 	bl	1904 <__sprint_r.part.0>
    2202:	b960      	cbnz	r0, 221e <_vfiprintf_r+0x89a>
    2204:	9910      	ldr	r1, [sp, #64]	; 0x40
    2206:	9a11      	ldr	r2, [sp, #68]	; 0x44
    2208:	1c48      	adds	r0, r1, #1
    220a:	46ca      	mov	sl, r9
    220c:	e7bd      	b.n	218a <_vfiprintf_r+0x806>
    220e:	9b11      	ldr	r3, [sp, #68]	; 0x44
    2210:	f8dd b010 	ldr.w	fp, [sp, #16]
    2214:	2b00      	cmp	r3, #0
    2216:	f040 81d4 	bne.w	25c2 <_vfiprintf_r+0xc3e>
    221a:	2300      	movs	r3, #0
    221c:	9310      	str	r3, [sp, #64]	; 0x40
    221e:	f8db 3064 	ldr.w	r3, [fp, #100]	; 0x64
    2222:	f013 0f01 	tst.w	r3, #1
    2226:	f8bb 300c 	ldrh.w	r3, [fp, #12]
    222a:	d102      	bne.n	2232 <_vfiprintf_r+0x8ae>
    222c:	059a      	lsls	r2, r3, #22
    222e:	f140 80de 	bpl.w	23ee <_vfiprintf_r+0xa6a>
    2232:	065b      	lsls	r3, r3, #25
    2234:	f53f acb2 	bmi.w	1b9c <_vfiprintf_r+0x218>
    2238:	9803      	ldr	r0, [sp, #12]
    223a:	b02d      	add	sp, #180	; 0xb4
    223c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2240:	2a00      	cmp	r2, #0
    2242:	f040 8106 	bne.w	2452 <_vfiprintf_r+0xace>
    2246:	9a05      	ldr	r2, [sp, #20]
    2248:	921d      	str	r2, [sp, #116]	; 0x74
    224a:	2301      	movs	r3, #1
    224c:	9211      	str	r2, [sp, #68]	; 0x44
    224e:	f8cd b070 	str.w	fp, [sp, #112]	; 0x70
    2252:	9310      	str	r3, [sp, #64]	; 0x40
    2254:	46ca      	mov	sl, r9
    2256:	f10a 0a08 	add.w	sl, sl, #8
    225a:	9b02      	ldr	r3, [sp, #8]
    225c:	0759      	lsls	r1, r3, #29
    225e:	d504      	bpl.n	226a <_vfiprintf_r+0x8e6>
    2260:	9b08      	ldr	r3, [sp, #32]
    2262:	9901      	ldr	r1, [sp, #4]
    2264:	1a5c      	subs	r4, r3, r1
    2266:	2c00      	cmp	r4, #0
    2268:	dc81      	bgt.n	216e <_vfiprintf_r+0x7ea>
    226a:	9b03      	ldr	r3, [sp, #12]
    226c:	9908      	ldr	r1, [sp, #32]
    226e:	9801      	ldr	r0, [sp, #4]
    2270:	4281      	cmp	r1, r0
    2272:	bfac      	ite	ge
    2274:	185b      	addge	r3, r3, r1
    2276:	181b      	addlt	r3, r3, r0
    2278:	9303      	str	r3, [sp, #12]
    227a:	bb72      	cbnz	r2, 22da <_vfiprintf_r+0x956>
    227c:	2300      	movs	r3, #0
    227e:	9310      	str	r3, [sp, #64]	; 0x40
    2280:	46ca      	mov	sl, r9
    2282:	f7ff bbbc 	b.w	19fe <_vfiprintf_r+0x7a>
    2286:	aa0f      	add	r2, sp, #60	; 0x3c
    2288:	9904      	ldr	r1, [sp, #16]
    228a:	4620      	mov	r0, r4
    228c:	f7ff fb3a 	bl	1904 <__sprint_r.part.0>
    2290:	bb50      	cbnz	r0, 22e8 <_vfiprintf_r+0x964>
    2292:	9910      	ldr	r1, [sp, #64]	; 0x40
    2294:	9a11      	ldr	r2, [sp, #68]	; 0x44
    2296:	f101 0e01 	add.w	lr, r1, #1
    229a:	46cc      	mov	ip, r9
    229c:	e548      	b.n	1d30 <_vfiprintf_r+0x3ac>
    229e:	2a00      	cmp	r2, #0
    22a0:	f040 8140 	bne.w	2524 <_vfiprintf_r+0xba0>
    22a4:	f89d 1037 	ldrb.w	r1, [sp, #55]	; 0x37
    22a8:	2900      	cmp	r1, #0
    22aa:	f000 811b 	beq.w	24e4 <_vfiprintf_r+0xb60>
    22ae:	2201      	movs	r2, #1
    22b0:	f10d 0137 	add.w	r1, sp, #55	; 0x37
    22b4:	4610      	mov	r0, r2
    22b6:	921d      	str	r2, [sp, #116]	; 0x74
    22b8:	911c      	str	r1, [sp, #112]	; 0x70
    22ba:	46ca      	mov	sl, r9
    22bc:	4601      	mov	r1, r0
    22be:	f10a 0a08 	add.w	sl, sl, #8
    22c2:	3001      	adds	r0, #1
    22c4:	e507      	b.n	1cd6 <_vfiprintf_r+0x352>
    22c6:	9b02      	ldr	r3, [sp, #8]
    22c8:	2a01      	cmp	r2, #1
    22ca:	f000 8098 	beq.w	23fe <_vfiprintf_r+0xa7a>
    22ce:	2a02      	cmp	r2, #2
    22d0:	d10d      	bne.n	22ee <_vfiprintf_r+0x96a>
    22d2:	9302      	str	r3, [sp, #8]
    22d4:	2600      	movs	r6, #0
    22d6:	2700      	movs	r7, #0
    22d8:	e5b0      	b.n	1e3c <_vfiprintf_r+0x4b8>
    22da:	aa0f      	add	r2, sp, #60	; 0x3c
    22dc:	9904      	ldr	r1, [sp, #16]
    22de:	9806      	ldr	r0, [sp, #24]
    22e0:	f7ff fb10 	bl	1904 <__sprint_r.part.0>
    22e4:	2800      	cmp	r0, #0
    22e6:	d0c9      	beq.n	227c <_vfiprintf_r+0x8f8>
    22e8:	f8dd b010 	ldr.w	fp, [sp, #16]
    22ec:	e797      	b.n	221e <_vfiprintf_r+0x89a>
    22ee:	9302      	str	r3, [sp, #8]
    22f0:	2600      	movs	r6, #0
    22f2:	2700      	movs	r7, #0
    22f4:	4649      	mov	r1, r9
    22f6:	e000      	b.n	22fa <_vfiprintf_r+0x976>
    22f8:	4659      	mov	r1, fp
    22fa:	08f2      	lsrs	r2, r6, #3
    22fc:	ea42 7247 	orr.w	r2, r2, r7, lsl #29
    2300:	08f8      	lsrs	r0, r7, #3
    2302:	f006 0307 	and.w	r3, r6, #7
    2306:	4607      	mov	r7, r0
    2308:	4616      	mov	r6, r2
    230a:	3330      	adds	r3, #48	; 0x30
    230c:	ea56 0207 	orrs.w	r2, r6, r7
    2310:	f801 3c01 	strb.w	r3, [r1, #-1]
    2314:	f101 3bff 	add.w	fp, r1, #4294967295
    2318:	d1ee      	bne.n	22f8 <_vfiprintf_r+0x974>
    231a:	9a02      	ldr	r2, [sp, #8]
    231c:	07d6      	lsls	r6, r2, #31
    231e:	f57f ad9d 	bpl.w	1e5c <_vfiprintf_r+0x4d8>
    2322:	2b30      	cmp	r3, #48	; 0x30
    2324:	f43f ad9a 	beq.w	1e5c <_vfiprintf_r+0x4d8>
    2328:	3902      	subs	r1, #2
    232a:	2330      	movs	r3, #48	; 0x30
    232c:	f80b 3c01 	strb.w	r3, [fp, #-1]
    2330:	eba9 0301 	sub.w	r3, r9, r1
    2334:	9305      	str	r3, [sp, #20]
    2336:	468b      	mov	fp, r1
    2338:	e476      	b.n	1c28 <_vfiprintf_r+0x2a4>
    233a:	9b03      	ldr	r3, [sp, #12]
    233c:	9a08      	ldr	r2, [sp, #32]
    233e:	428a      	cmp	r2, r1
    2340:	bfac      	ite	ge
    2342:	189b      	addge	r3, r3, r2
    2344:	185b      	addlt	r3, r3, r1
    2346:	9303      	str	r3, [sp, #12]
    2348:	e798      	b.n	227c <_vfiprintf_r+0x8f8>
    234a:	2202      	movs	r2, #2
    234c:	e44d      	b.n	1bea <_vfiprintf_r+0x266>
    234e:	2f00      	cmp	r7, #0
    2350:	bf08      	it	eq
    2352:	2e0a      	cmpeq	r6, #10
    2354:	d352      	bcc.n	23fc <_vfiprintf_r+0xa78>
    2356:	46cb      	mov	fp, r9
    2358:	4630      	mov	r0, r6
    235a:	4639      	mov	r1, r7
    235c:	220a      	movs	r2, #10
    235e:	2300      	movs	r3, #0
    2360:	f001 ffaa 	bl	42b8 <__aeabi_uldivmod>
    2364:	3230      	adds	r2, #48	; 0x30
    2366:	f80b 2d01 	strb.w	r2, [fp, #-1]!
    236a:	4630      	mov	r0, r6
    236c:	4639      	mov	r1, r7
    236e:	2300      	movs	r3, #0
    2370:	220a      	movs	r2, #10
    2372:	f001 ffa1 	bl	42b8 <__aeabi_uldivmod>
    2376:	4606      	mov	r6, r0
    2378:	460f      	mov	r7, r1
    237a:	ea56 0307 	orrs.w	r3, r6, r7
    237e:	d1eb      	bne.n	2358 <_vfiprintf_r+0x9d4>
    2380:	e56c      	b.n	1e5c <_vfiprintf_r+0x4d8>
    2382:	9405      	str	r4, [sp, #20]
    2384:	46cb      	mov	fp, r9
    2386:	e44f      	b.n	1c28 <_vfiprintf_r+0x2a4>
    2388:	aa0f      	add	r2, sp, #60	; 0x3c
    238a:	9904      	ldr	r1, [sp, #16]
    238c:	9806      	ldr	r0, [sp, #24]
    238e:	f7ff fab9 	bl	1904 <__sprint_r.part.0>
    2392:	2800      	cmp	r0, #0
    2394:	d1a8      	bne.n	22e8 <_vfiprintf_r+0x964>
    2396:	9a11      	ldr	r2, [sp, #68]	; 0x44
    2398:	46ca      	mov	sl, r9
    239a:	e75e      	b.n	225a <_vfiprintf_r+0x8d6>
    239c:	aa0f      	add	r2, sp, #60	; 0x3c
    239e:	9904      	ldr	r1, [sp, #16]
    23a0:	9806      	ldr	r0, [sp, #24]
    23a2:	f7ff faaf 	bl	1904 <__sprint_r.part.0>
    23a6:	2800      	cmp	r0, #0
    23a8:	d19e      	bne.n	22e8 <_vfiprintf_r+0x964>
    23aa:	46ca      	mov	sl, r9
    23ac:	f7ff bbc0 	b.w	1b30 <_vfiprintf_r+0x1ac>
    23b0:	00004768 	.word	0x00004768
    23b4:	00004758 	.word	0x00004758
    23b8:	3104      	adds	r1, #4
    23ba:	6816      	ldr	r6, [r2, #0]
    23bc:	9107      	str	r1, [sp, #28]
    23be:	2201      	movs	r2, #1
    23c0:	2700      	movs	r7, #0
    23c2:	e412      	b.n	1bea <_vfiprintf_r+0x266>
    23c4:	9807      	ldr	r0, [sp, #28]
    23c6:	4601      	mov	r1, r0
    23c8:	3104      	adds	r1, #4
    23ca:	6806      	ldr	r6, [r0, #0]
    23cc:	9107      	str	r1, [sp, #28]
    23ce:	2700      	movs	r7, #0
    23d0:	e40b      	b.n	1bea <_vfiprintf_r+0x266>
    23d2:	680e      	ldr	r6, [r1, #0]
    23d4:	3104      	adds	r1, #4
    23d6:	9107      	str	r1, [sp, #28]
    23d8:	2700      	movs	r7, #0
    23da:	e591      	b.n	1f00 <_vfiprintf_r+0x57c>
    23dc:	9907      	ldr	r1, [sp, #28]
    23de:	680e      	ldr	r6, [r1, #0]
    23e0:	460a      	mov	r2, r1
    23e2:	17f7      	asrs	r7, r6, #31
    23e4:	3204      	adds	r2, #4
    23e6:	9207      	str	r2, [sp, #28]
    23e8:	4630      	mov	r0, r6
    23ea:	4639      	mov	r1, r7
    23ec:	e50f      	b.n	1e0e <_vfiprintf_r+0x48a>
    23ee:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
    23f2:	f000 fe7f 	bl	30f4 <__retarget_lock_release_recursive>
    23f6:	f8bb 300c 	ldrh.w	r3, [fp, #12]
    23fa:	e71a      	b.n	2232 <_vfiprintf_r+0x8ae>
    23fc:	9b02      	ldr	r3, [sp, #8]
    23fe:	9302      	str	r3, [sp, #8]
    2400:	f10d 0bb0 	add.w	fp, sp, #176	; 0xb0
    2404:	3630      	adds	r6, #48	; 0x30
    2406:	2301      	movs	r3, #1
    2408:	f80b 6d41 	strb.w	r6, [fp, #-65]!
    240c:	9305      	str	r3, [sp, #20]
    240e:	e40b      	b.n	1c28 <_vfiprintf_r+0x2a4>
    2410:	aa0f      	add	r2, sp, #60	; 0x3c
    2412:	9904      	ldr	r1, [sp, #16]
    2414:	9806      	ldr	r0, [sp, #24]
    2416:	f7ff fa75 	bl	1904 <__sprint_r.part.0>
    241a:	2800      	cmp	r0, #0
    241c:	f47f af64 	bne.w	22e8 <_vfiprintf_r+0x964>
    2420:	9910      	ldr	r1, [sp, #64]	; 0x40
    2422:	9a11      	ldr	r2, [sp, #68]	; 0x44
    2424:	1c48      	adds	r0, r1, #1
    2426:	46ca      	mov	sl, r9
    2428:	e651      	b.n	20ce <_vfiprintf_r+0x74a>
    242a:	aa0f      	add	r2, sp, #60	; 0x3c
    242c:	9904      	ldr	r1, [sp, #16]
    242e:	9806      	ldr	r0, [sp, #24]
    2430:	f7ff fa68 	bl	1904 <__sprint_r.part.0>
    2434:	2800      	cmp	r0, #0
    2436:	f47f af57 	bne.w	22e8 <_vfiprintf_r+0x964>
    243a:	9910      	ldr	r1, [sp, #64]	; 0x40
    243c:	9a11      	ldr	r2, [sp, #68]	; 0x44
    243e:	1c48      	adds	r0, r1, #1
    2440:	46ca      	mov	sl, r9
    2442:	e448      	b.n	1cd6 <_vfiprintf_r+0x352>
    2444:	2a00      	cmp	r2, #0
    2446:	f040 8091 	bne.w	256c <_vfiprintf_r+0xbe8>
    244a:	2001      	movs	r0, #1
    244c:	4611      	mov	r1, r2
    244e:	46ca      	mov	sl, r9
    2450:	e641      	b.n	20d6 <_vfiprintf_r+0x752>
    2452:	aa0f      	add	r2, sp, #60	; 0x3c
    2454:	9904      	ldr	r1, [sp, #16]
    2456:	9806      	ldr	r0, [sp, #24]
    2458:	f7ff fa54 	bl	1904 <__sprint_r.part.0>
    245c:	2800      	cmp	r0, #0
    245e:	f47f af43 	bne.w	22e8 <_vfiprintf_r+0x964>
    2462:	9810      	ldr	r0, [sp, #64]	; 0x40
    2464:	9a11      	ldr	r2, [sp, #68]	; 0x44
    2466:	3001      	adds	r0, #1
    2468:	46ca      	mov	sl, r9
    246a:	e667      	b.n	213c <_vfiprintf_r+0x7b8>
    246c:	46d3      	mov	fp, sl
    246e:	e6d6      	b.n	221e <_vfiprintf_r+0x89a>
    2470:	9e07      	ldr	r6, [sp, #28]
    2472:	3607      	adds	r6, #7
    2474:	f026 0207 	bic.w	r2, r6, #7
    2478:	f102 0108 	add.w	r1, r2, #8
    247c:	e9d2 6700 	ldrd	r6, r7, [r2]
    2480:	9107      	str	r1, [sp, #28]
    2482:	2201      	movs	r2, #1
    2484:	f7ff bbb1 	b.w	1bea <_vfiprintf_r+0x266>
    2488:	9e07      	ldr	r6, [sp, #28]
    248a:	3607      	adds	r6, #7
    248c:	f026 0607 	bic.w	r6, r6, #7
    2490:	e9d6 0100 	ldrd	r0, r1, [r6]
    2494:	f106 0208 	add.w	r2, r6, #8
    2498:	9207      	str	r2, [sp, #28]
    249a:	4606      	mov	r6, r0
    249c:	460f      	mov	r7, r1
    249e:	e4b6      	b.n	1e0e <_vfiprintf_r+0x48a>
    24a0:	9e07      	ldr	r6, [sp, #28]
    24a2:	3607      	adds	r6, #7
    24a4:	f026 0207 	bic.w	r2, r6, #7
    24a8:	f102 0108 	add.w	r1, r2, #8
    24ac:	e9d2 6700 	ldrd	r6, r7, [r2]
    24b0:	9107      	str	r1, [sp, #28]
    24b2:	2200      	movs	r2, #0
    24b4:	f7ff bb99 	b.w	1bea <_vfiprintf_r+0x266>
    24b8:	9e07      	ldr	r6, [sp, #28]
    24ba:	3607      	adds	r6, #7
    24bc:	f026 0107 	bic.w	r1, r6, #7
    24c0:	f101 0008 	add.w	r0, r1, #8
    24c4:	9007      	str	r0, [sp, #28]
    24c6:	e9d1 6700 	ldrd	r6, r7, [r1]
    24ca:	e519      	b.n	1f00 <_vfiprintf_r+0x57c>
    24cc:	46cb      	mov	fp, r9
    24ce:	f7ff bbab 	b.w	1c28 <_vfiprintf_r+0x2a4>
    24d2:	252d      	movs	r5, #45	; 0x2d
    24d4:	4276      	negs	r6, r6
    24d6:	eb67 0747 	sbc.w	r7, r7, r7, lsl #1
    24da:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
    24de:	2201      	movs	r2, #1
    24e0:	f7ff bb88 	b.w	1bf4 <_vfiprintf_r+0x270>
    24e4:	9b09      	ldr	r3, [sp, #36]	; 0x24
    24e6:	b9b3      	cbnz	r3, 2516 <_vfiprintf_r+0xb92>
    24e8:	4611      	mov	r1, r2
    24ea:	2001      	movs	r0, #1
    24ec:	46ca      	mov	sl, r9
    24ee:	e5f2      	b.n	20d6 <_vfiprintf_r+0x752>
    24f0:	f8db 0058 	ldr.w	r0, [fp, #88]	; 0x58
    24f4:	f000 fdfe 	bl	30f4 <__retarget_lock_release_recursive>
    24f8:	f04f 33ff 	mov.w	r3, #4294967295
    24fc:	9303      	str	r3, [sp, #12]
    24fe:	f7ff bb50 	b.w	1ba2 <_vfiprintf_r+0x21e>
    2502:	aa0f      	add	r2, sp, #60	; 0x3c
    2504:	9904      	ldr	r1, [sp, #16]
    2506:	9806      	ldr	r0, [sp, #24]
    2508:	f7ff f9fc 	bl	1904 <__sprint_r.part.0>
    250c:	2800      	cmp	r0, #0
    250e:	f47f aeeb 	bne.w	22e8 <_vfiprintf_r+0x964>
    2512:	9a11      	ldr	r2, [sp, #68]	; 0x44
    2514:	e6a9      	b.n	226a <_vfiprintf_r+0x8e6>
    2516:	ab0e      	add	r3, sp, #56	; 0x38
    2518:	2202      	movs	r2, #2
    251a:	931c      	str	r3, [sp, #112]	; 0x70
    251c:	921d      	str	r2, [sp, #116]	; 0x74
    251e:	2001      	movs	r0, #1
    2520:	46ca      	mov	sl, r9
    2522:	e5d0      	b.n	20c6 <_vfiprintf_r+0x742>
    2524:	aa0f      	add	r2, sp, #60	; 0x3c
    2526:	9904      	ldr	r1, [sp, #16]
    2528:	9806      	ldr	r0, [sp, #24]
    252a:	f7ff f9eb 	bl	1904 <__sprint_r.part.0>
    252e:	2800      	cmp	r0, #0
    2530:	f47f aeda 	bne.w	22e8 <_vfiprintf_r+0x964>
    2534:	9910      	ldr	r1, [sp, #64]	; 0x40
    2536:	9a11      	ldr	r2, [sp, #68]	; 0x44
    2538:	1c48      	adds	r0, r1, #1
    253a:	46ca      	mov	sl, r9
    253c:	e5a4      	b.n	2088 <_vfiprintf_r+0x704>
    253e:	9a07      	ldr	r2, [sp, #28]
    2540:	9903      	ldr	r1, [sp, #12]
    2542:	6813      	ldr	r3, [r2, #0]
    2544:	17cd      	asrs	r5, r1, #31
    2546:	4608      	mov	r0, r1
    2548:	3204      	adds	r2, #4
    254a:	4629      	mov	r1, r5
    254c:	9207      	str	r2, [sp, #28]
    254e:	e9c3 0100 	strd	r0, r1, [r3]
    2552:	f7ff ba54 	b.w	19fe <_vfiprintf_r+0x7a>
    2556:	4658      	mov	r0, fp
    2558:	9607      	str	r6, [sp, #28]
    255a:	9302      	str	r3, [sp, #8]
    255c:	f001 fc70 	bl	3e40 <strlen>
    2560:	2400      	movs	r4, #0
    2562:	9005      	str	r0, [sp, #20]
    2564:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
    2568:	f7ff bb5e 	b.w	1c28 <_vfiprintf_r+0x2a4>
    256c:	aa0f      	add	r2, sp, #60	; 0x3c
    256e:	9904      	ldr	r1, [sp, #16]
    2570:	9806      	ldr	r0, [sp, #24]
    2572:	f7ff f9c7 	bl	1904 <__sprint_r.part.0>
    2576:	2800      	cmp	r0, #0
    2578:	f47f aeb6 	bne.w	22e8 <_vfiprintf_r+0x964>
    257c:	9910      	ldr	r1, [sp, #64]	; 0x40
    257e:	9a11      	ldr	r2, [sp, #68]	; 0x44
    2580:	1c48      	adds	r0, r1, #1
    2582:	46ca      	mov	sl, r9
    2584:	e5a7      	b.n	20d6 <_vfiprintf_r+0x752>
    2586:	9910      	ldr	r1, [sp, #64]	; 0x40
    2588:	9a11      	ldr	r2, [sp, #68]	; 0x44
    258a:	4e20      	ldr	r6, [pc, #128]	; (260c <_vfiprintf_r+0xc88>)
    258c:	3101      	adds	r1, #1
    258e:	f7ff bb90 	b.w	1cb2 <_vfiprintf_r+0x32e>
    2592:	2c06      	cmp	r4, #6
    2594:	bf28      	it	cs
    2596:	2406      	movcs	r4, #6
    2598:	9405      	str	r4, [sp, #20]
    259a:	9607      	str	r6, [sp, #28]
    259c:	9401      	str	r4, [sp, #4]
    259e:	f8df b070 	ldr.w	fp, [pc, #112]	; 2610 <_vfiprintf_r+0xc8c>
    25a2:	e4d5      	b.n	1f50 <_vfiprintf_r+0x5cc>
    25a4:	9810      	ldr	r0, [sp, #64]	; 0x40
    25a6:	4e19      	ldr	r6, [pc, #100]	; (260c <_vfiprintf_r+0xc88>)
    25a8:	3001      	adds	r0, #1
    25aa:	e603      	b.n	21b4 <_vfiprintf_r+0x830>
    25ac:	9405      	str	r4, [sp, #20]
    25ae:	f89d 5037 	ldrb.w	r5, [sp, #55]	; 0x37
    25b2:	9607      	str	r6, [sp, #28]
    25b4:	9302      	str	r3, [sp, #8]
    25b6:	4604      	mov	r4, r0
    25b8:	f7ff bb36 	b.w	1c28 <_vfiprintf_r+0x2a4>
    25bc:	4686      	mov	lr, r0
    25be:	f7ff bbce 	b.w	1d5e <_vfiprintf_r+0x3da>
    25c2:	9806      	ldr	r0, [sp, #24]
    25c4:	aa0f      	add	r2, sp, #60	; 0x3c
    25c6:	4659      	mov	r1, fp
    25c8:	f7ff f99c 	bl	1904 <__sprint_r.part.0>
    25cc:	2800      	cmp	r0, #0
    25ce:	f43f ae24 	beq.w	221a <_vfiprintf_r+0x896>
    25d2:	e624      	b.n	221e <_vfiprintf_r+0x89a>
    25d4:	9907      	ldr	r1, [sp, #28]
    25d6:	f898 2001 	ldrb.w	r2, [r8, #1]
    25da:	680c      	ldr	r4, [r1, #0]
    25dc:	3104      	adds	r1, #4
    25de:	ea44 74e4 	orr.w	r4, r4, r4, asr #31
    25e2:	46b8      	mov	r8, r7
    25e4:	9107      	str	r1, [sp, #28]
    25e6:	f7ff ba3f 	b.w	1a68 <_vfiprintf_r+0xe4>
    25ea:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
    25ee:	e43c      	b.n	1e6a <_vfiprintf_r+0x4e6>
    25f0:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
    25f4:	e521      	b.n	203a <_vfiprintf_r+0x6b6>
    25f6:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
    25fa:	f7ff bbf4 	b.w	1de6 <_vfiprintf_r+0x462>
    25fe:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
    2602:	e491      	b.n	1f28 <_vfiprintf_r+0x5a4>
    2604:	f88d 5037 	strb.w	r5, [sp, #55]	; 0x37
    2608:	e469      	b.n	1ede <_vfiprintf_r+0x55a>
    260a:	bf00      	nop
    260c:	00004758 	.word	0x00004758
    2610:	00004750 	.word	0x00004750

00002614 <__sbprintf>:
    2614:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    2618:	460c      	mov	r4, r1
    261a:	f5ad 6d8d 	sub.w	sp, sp, #1128	; 0x468
    261e:	8989      	ldrh	r1, [r1, #12]
    2620:	6e66      	ldr	r6, [r4, #100]	; 0x64
    2622:	89e5      	ldrh	r5, [r4, #14]
    2624:	9619      	str	r6, [sp, #100]	; 0x64
    2626:	f021 0102 	bic.w	r1, r1, #2
    262a:	4606      	mov	r6, r0
    262c:	69e0      	ldr	r0, [r4, #28]
    262e:	f8ad 100c 	strh.w	r1, [sp, #12]
    2632:	4617      	mov	r7, r2
    2634:	f44f 6180 	mov.w	r1, #1024	; 0x400
    2638:	6a62      	ldr	r2, [r4, #36]	; 0x24
    263a:	f8ad 500e 	strh.w	r5, [sp, #14]
    263e:	4698      	mov	r8, r3
    2640:	ad1a      	add	r5, sp, #104	; 0x68
    2642:	2300      	movs	r3, #0
    2644:	9007      	str	r0, [sp, #28]
    2646:	a816      	add	r0, sp, #88	; 0x58
    2648:	9209      	str	r2, [sp, #36]	; 0x24
    264a:	9306      	str	r3, [sp, #24]
    264c:	9500      	str	r5, [sp, #0]
    264e:	9504      	str	r5, [sp, #16]
    2650:	9102      	str	r1, [sp, #8]
    2652:	9105      	str	r1, [sp, #20]
    2654:	f000 fd48 	bl	30e8 <__retarget_lock_init_recursive>
    2658:	4643      	mov	r3, r8
    265a:	463a      	mov	r2, r7
    265c:	4669      	mov	r1, sp
    265e:	4630      	mov	r0, r6
    2660:	f7ff f990 	bl	1984 <_vfiprintf_r>
    2664:	1e05      	subs	r5, r0, #0
    2666:	db07      	blt.n	2678 <__sbprintf+0x64>
    2668:	4630      	mov	r0, r6
    266a:	4669      	mov	r1, sp
    266c:	f000 f928 	bl	28c0 <_fflush_r>
    2670:	2800      	cmp	r0, #0
    2672:	bf18      	it	ne
    2674:	f04f 35ff 	movne.w	r5, #4294967295
    2678:	f8bd 300c 	ldrh.w	r3, [sp, #12]
    267c:	065b      	lsls	r3, r3, #25
    267e:	d503      	bpl.n	2688 <__sbprintf+0x74>
    2680:	89a3      	ldrh	r3, [r4, #12]
    2682:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    2686:	81a3      	strh	r3, [r4, #12]
    2688:	9816      	ldr	r0, [sp, #88]	; 0x58
    268a:	f000 fd2f 	bl	30ec <__retarget_lock_close_recursive>
    268e:	4628      	mov	r0, r5
    2690:	f50d 6d8d 	add.w	sp, sp, #1128	; 0x468
    2694:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00002698 <__swsetup_r>:
    2698:	b538      	push	{r3, r4, r5, lr}
    269a:	4b30      	ldr	r3, [pc, #192]	; (275c <__swsetup_r+0xc4>)
    269c:	681b      	ldr	r3, [r3, #0]
    269e:	4605      	mov	r5, r0
    26a0:	460c      	mov	r4, r1
    26a2:	b113      	cbz	r3, 26aa <__swsetup_r+0x12>
    26a4:	6b9a      	ldr	r2, [r3, #56]	; 0x38
    26a6:	2a00      	cmp	r2, #0
    26a8:	d038      	beq.n	271c <__swsetup_r+0x84>
    26aa:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
    26ae:	b293      	uxth	r3, r2
    26b0:	0718      	lsls	r0, r3, #28
    26b2:	d50c      	bpl.n	26ce <__swsetup_r+0x36>
    26b4:	6920      	ldr	r0, [r4, #16]
    26b6:	b1a8      	cbz	r0, 26e4 <__swsetup_r+0x4c>
    26b8:	f013 0201 	ands.w	r2, r3, #1
    26bc:	d01e      	beq.n	26fc <__swsetup_r+0x64>
    26be:	6963      	ldr	r3, [r4, #20]
    26c0:	2200      	movs	r2, #0
    26c2:	425b      	negs	r3, r3
    26c4:	61a3      	str	r3, [r4, #24]
    26c6:	60a2      	str	r2, [r4, #8]
    26c8:	b1f0      	cbz	r0, 2708 <__swsetup_r+0x70>
    26ca:	2000      	movs	r0, #0
    26cc:	bd38      	pop	{r3, r4, r5, pc}
    26ce:	06d9      	lsls	r1, r3, #27
    26d0:	d53c      	bpl.n	274c <__swsetup_r+0xb4>
    26d2:	0758      	lsls	r0, r3, #29
    26d4:	d426      	bmi.n	2724 <__swsetup_r+0x8c>
    26d6:	6920      	ldr	r0, [r4, #16]
    26d8:	f042 0308 	orr.w	r3, r2, #8
    26dc:	81a3      	strh	r3, [r4, #12]
    26de:	b29b      	uxth	r3, r3
    26e0:	2800      	cmp	r0, #0
    26e2:	d1e9      	bne.n	26b8 <__swsetup_r+0x20>
    26e4:	f403 7220 	and.w	r2, r3, #640	; 0x280
    26e8:	f5b2 7f00 	cmp.w	r2, #512	; 0x200
    26ec:	d0e4      	beq.n	26b8 <__swsetup_r+0x20>
    26ee:	4628      	mov	r0, r5
    26f0:	4621      	mov	r1, r4
    26f2:	f000 fd2f 	bl	3154 <__smakebuf_r>
    26f6:	89a3      	ldrh	r3, [r4, #12]
    26f8:	6920      	ldr	r0, [r4, #16]
    26fa:	e7dd      	b.n	26b8 <__swsetup_r+0x20>
    26fc:	0799      	lsls	r1, r3, #30
    26fe:	bf58      	it	pl
    2700:	6962      	ldrpl	r2, [r4, #20]
    2702:	60a2      	str	r2, [r4, #8]
    2704:	2800      	cmp	r0, #0
    2706:	d1e0      	bne.n	26ca <__swsetup_r+0x32>
    2708:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    270c:	061a      	lsls	r2, r3, #24
    270e:	d5dd      	bpl.n	26cc <__swsetup_r+0x34>
    2710:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    2714:	81a3      	strh	r3, [r4, #12]
    2716:	f04f 30ff 	mov.w	r0, #4294967295
    271a:	bd38      	pop	{r3, r4, r5, pc}
    271c:	4618      	mov	r0, r3
    271e:	f000 f927 	bl	2970 <__sinit>
    2722:	e7c2      	b.n	26aa <__swsetup_r+0x12>
    2724:	6b21      	ldr	r1, [r4, #48]	; 0x30
    2726:	b151      	cbz	r1, 273e <__swsetup_r+0xa6>
    2728:	f104 0340 	add.w	r3, r4, #64	; 0x40
    272c:	4299      	cmp	r1, r3
    272e:	d004      	beq.n	273a <__swsetup_r+0xa2>
    2730:	4628      	mov	r0, r5
    2732:	f000 fa43 	bl	2bbc <_free_r>
    2736:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
    273a:	2300      	movs	r3, #0
    273c:	6323      	str	r3, [r4, #48]	; 0x30
    273e:	2300      	movs	r3, #0
    2740:	6920      	ldr	r0, [r4, #16]
    2742:	6063      	str	r3, [r4, #4]
    2744:	f022 0224 	bic.w	r2, r2, #36	; 0x24
    2748:	6020      	str	r0, [r4, #0]
    274a:	e7c5      	b.n	26d8 <__swsetup_r+0x40>
    274c:	f042 0240 	orr.w	r2, r2, #64	; 0x40
    2750:	2309      	movs	r3, #9
    2752:	602b      	str	r3, [r5, #0]
    2754:	f04f 30ff 	mov.w	r0, #4294967295
    2758:	81a2      	strh	r2, [r4, #12]
    275a:	bd38      	pop	{r3, r4, r5, pc}
    275c:	20000030 	.word	0x20000030

00002760 <register_fini>:
    2760:	4b02      	ldr	r3, [pc, #8]	; (276c <register_fini+0xc>)
    2762:	b113      	cbz	r3, 276a <register_fini+0xa>
    2764:	4802      	ldr	r0, [pc, #8]	; (2770 <register_fini+0x10>)
    2766:	f000 b805 	b.w	2774 <atexit>
    276a:	4770      	bx	lr
    276c:	00000000 	.word	0x00000000
    2770:	000029e1 	.word	0x000029e1

00002774 <atexit>:
    2774:	2300      	movs	r3, #0
    2776:	4601      	mov	r1, r0
    2778:	461a      	mov	r2, r3
    277a:	4618      	mov	r0, r3
    277c:	f001 bc74 	b.w	4068 <__register_exitproc>

00002780 <__sflush_r>:
    2780:	f9b1 300c 	ldrsh.w	r3, [r1, #12]
    2784:	b29a      	uxth	r2, r3
    2786:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    278a:	460d      	mov	r5, r1
    278c:	0711      	lsls	r1, r2, #28
    278e:	4680      	mov	r8, r0
    2790:	d43a      	bmi.n	2808 <__sflush_r+0x88>
    2792:	686a      	ldr	r2, [r5, #4]
    2794:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
    2798:	2a00      	cmp	r2, #0
    279a:	81ab      	strh	r3, [r5, #12]
    279c:	dd6f      	ble.n	287e <__sflush_r+0xfe>
    279e:	6aac      	ldr	r4, [r5, #40]	; 0x28
    27a0:	2c00      	cmp	r4, #0
    27a2:	d049      	beq.n	2838 <__sflush_r+0xb8>
    27a4:	2200      	movs	r2, #0
    27a6:	b29b      	uxth	r3, r3
    27a8:	f8d8 6000 	ldr.w	r6, [r8]
    27ac:	f8c8 2000 	str.w	r2, [r8]
    27b0:	f413 5280 	ands.w	r2, r3, #4096	; 0x1000
    27b4:	d067      	beq.n	2886 <__sflush_r+0x106>
    27b6:	6d2a      	ldr	r2, [r5, #80]	; 0x50
    27b8:	075f      	lsls	r7, r3, #29
    27ba:	d505      	bpl.n	27c8 <__sflush_r+0x48>
    27bc:	6869      	ldr	r1, [r5, #4]
    27be:	6b2b      	ldr	r3, [r5, #48]	; 0x30
    27c0:	1a52      	subs	r2, r2, r1
    27c2:	b10b      	cbz	r3, 27c8 <__sflush_r+0x48>
    27c4:	6beb      	ldr	r3, [r5, #60]	; 0x3c
    27c6:	1ad2      	subs	r2, r2, r3
    27c8:	2300      	movs	r3, #0
    27ca:	69e9      	ldr	r1, [r5, #28]
    27cc:	4640      	mov	r0, r8
    27ce:	47a0      	blx	r4
    27d0:	1c44      	adds	r4, r0, #1
    27d2:	d03c      	beq.n	284e <__sflush_r+0xce>
    27d4:	f9b5 300c 	ldrsh.w	r3, [r5, #12]
    27d8:	692a      	ldr	r2, [r5, #16]
    27da:	602a      	str	r2, [r5, #0]
    27dc:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
    27e0:	2200      	movs	r2, #0
    27e2:	81ab      	strh	r3, [r5, #12]
    27e4:	04db      	lsls	r3, r3, #19
    27e6:	606a      	str	r2, [r5, #4]
    27e8:	d447      	bmi.n	287a <__sflush_r+0xfa>
    27ea:	6b29      	ldr	r1, [r5, #48]	; 0x30
    27ec:	f8c8 6000 	str.w	r6, [r8]
    27f0:	b311      	cbz	r1, 2838 <__sflush_r+0xb8>
    27f2:	f105 0340 	add.w	r3, r5, #64	; 0x40
    27f6:	4299      	cmp	r1, r3
    27f8:	d002      	beq.n	2800 <__sflush_r+0x80>
    27fa:	4640      	mov	r0, r8
    27fc:	f000 f9de 	bl	2bbc <_free_r>
    2800:	2000      	movs	r0, #0
    2802:	6328      	str	r0, [r5, #48]	; 0x30
    2804:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    2808:	692e      	ldr	r6, [r5, #16]
    280a:	b1ae      	cbz	r6, 2838 <__sflush_r+0xb8>
    280c:	682c      	ldr	r4, [r5, #0]
    280e:	602e      	str	r6, [r5, #0]
    2810:	0791      	lsls	r1, r2, #30
    2812:	bf0c      	ite	eq
    2814:	696b      	ldreq	r3, [r5, #20]
    2816:	2300      	movne	r3, #0
    2818:	1ba4      	subs	r4, r4, r6
    281a:	60ab      	str	r3, [r5, #8]
    281c:	e00a      	b.n	2834 <__sflush_r+0xb4>
    281e:	4623      	mov	r3, r4
    2820:	4632      	mov	r2, r6
    2822:	6a6f      	ldr	r7, [r5, #36]	; 0x24
    2824:	69e9      	ldr	r1, [r5, #28]
    2826:	4640      	mov	r0, r8
    2828:	47b8      	blx	r7
    282a:	2800      	cmp	r0, #0
    282c:	eba4 0400 	sub.w	r4, r4, r0
    2830:	4406      	add	r6, r0
    2832:	dd04      	ble.n	283e <__sflush_r+0xbe>
    2834:	2c00      	cmp	r4, #0
    2836:	dcf2      	bgt.n	281e <__sflush_r+0x9e>
    2838:	2000      	movs	r0, #0
    283a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    283e:	89ab      	ldrh	r3, [r5, #12]
    2840:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    2844:	81ab      	strh	r3, [r5, #12]
    2846:	f04f 30ff 	mov.w	r0, #4294967295
    284a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    284e:	f8d8 4000 	ldr.w	r4, [r8]
    2852:	2c1d      	cmp	r4, #29
    2854:	d8f3      	bhi.n	283e <__sflush_r+0xbe>
    2856:	4b19      	ldr	r3, [pc, #100]	; (28bc <__sflush_r+0x13c>)
    2858:	40e3      	lsrs	r3, r4
    285a:	43db      	mvns	r3, r3
    285c:	f013 0301 	ands.w	r3, r3, #1
    2860:	d1ed      	bne.n	283e <__sflush_r+0xbe>
    2862:	f9b5 200c 	ldrsh.w	r2, [r5, #12]
    2866:	606b      	str	r3, [r5, #4]
    2868:	f422 6300 	bic.w	r3, r2, #2048	; 0x800
    286c:	6929      	ldr	r1, [r5, #16]
    286e:	81ab      	strh	r3, [r5, #12]
    2870:	04da      	lsls	r2, r3, #19
    2872:	6029      	str	r1, [r5, #0]
    2874:	d5b9      	bpl.n	27ea <__sflush_r+0x6a>
    2876:	2c00      	cmp	r4, #0
    2878:	d1b7      	bne.n	27ea <__sflush_r+0x6a>
    287a:	6528      	str	r0, [r5, #80]	; 0x50
    287c:	e7b5      	b.n	27ea <__sflush_r+0x6a>
    287e:	6bea      	ldr	r2, [r5, #60]	; 0x3c
    2880:	2a00      	cmp	r2, #0
    2882:	dc8c      	bgt.n	279e <__sflush_r+0x1e>
    2884:	e7d8      	b.n	2838 <__sflush_r+0xb8>
    2886:	2301      	movs	r3, #1
    2888:	69e9      	ldr	r1, [r5, #28]
    288a:	4640      	mov	r0, r8
    288c:	47a0      	blx	r4
    288e:	1c43      	adds	r3, r0, #1
    2890:	4602      	mov	r2, r0
    2892:	d002      	beq.n	289a <__sflush_r+0x11a>
    2894:	89ab      	ldrh	r3, [r5, #12]
    2896:	6aac      	ldr	r4, [r5, #40]	; 0x28
    2898:	e78e      	b.n	27b8 <__sflush_r+0x38>
    289a:	f8d8 3000 	ldr.w	r3, [r8]
    289e:	2b00      	cmp	r3, #0
    28a0:	d0f8      	beq.n	2894 <__sflush_r+0x114>
    28a2:	2b1d      	cmp	r3, #29
    28a4:	d001      	beq.n	28aa <__sflush_r+0x12a>
    28a6:	2b16      	cmp	r3, #22
    28a8:	d102      	bne.n	28b0 <__sflush_r+0x130>
    28aa:	f8c8 6000 	str.w	r6, [r8]
    28ae:	e7c3      	b.n	2838 <__sflush_r+0xb8>
    28b0:	89ab      	ldrh	r3, [r5, #12]
    28b2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    28b6:	81ab      	strh	r3, [r5, #12]
    28b8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    28bc:	20400001 	.word	0x20400001

000028c0 <_fflush_r>:
    28c0:	b538      	push	{r3, r4, r5, lr}
    28c2:	460d      	mov	r5, r1
    28c4:	4604      	mov	r4, r0
    28c6:	b108      	cbz	r0, 28cc <_fflush_r+0xc>
    28c8:	6b83      	ldr	r3, [r0, #56]	; 0x38
    28ca:	b1bb      	cbz	r3, 28fc <_fflush_r+0x3c>
    28cc:	f9b5 000c 	ldrsh.w	r0, [r5, #12]
    28d0:	b188      	cbz	r0, 28f6 <_fflush_r+0x36>
    28d2:	6e6b      	ldr	r3, [r5, #100]	; 0x64
    28d4:	07db      	lsls	r3, r3, #31
    28d6:	d401      	bmi.n	28dc <_fflush_r+0x1c>
    28d8:	0581      	lsls	r1, r0, #22
    28da:	d517      	bpl.n	290c <_fflush_r+0x4c>
    28dc:	4620      	mov	r0, r4
    28de:	4629      	mov	r1, r5
    28e0:	f7ff ff4e 	bl	2780 <__sflush_r>
    28e4:	6e6b      	ldr	r3, [r5, #100]	; 0x64
    28e6:	07da      	lsls	r2, r3, #31
    28e8:	4604      	mov	r4, r0
    28ea:	d402      	bmi.n	28f2 <_fflush_r+0x32>
    28ec:	89ab      	ldrh	r3, [r5, #12]
    28ee:	059b      	lsls	r3, r3, #22
    28f0:	d507      	bpl.n	2902 <_fflush_r+0x42>
    28f2:	4620      	mov	r0, r4
    28f4:	bd38      	pop	{r3, r4, r5, pc}
    28f6:	4604      	mov	r4, r0
    28f8:	4620      	mov	r0, r4
    28fa:	bd38      	pop	{r3, r4, r5, pc}
    28fc:	f000 f838 	bl	2970 <__sinit>
    2900:	e7e4      	b.n	28cc <_fflush_r+0xc>
    2902:	6da8      	ldr	r0, [r5, #88]	; 0x58
    2904:	f000 fbf6 	bl	30f4 <__retarget_lock_release_recursive>
    2908:	4620      	mov	r0, r4
    290a:	bd38      	pop	{r3, r4, r5, pc}
    290c:	6da8      	ldr	r0, [r5, #88]	; 0x58
    290e:	f000 fbef 	bl	30f0 <__retarget_lock_acquire_recursive>
    2912:	e7e3      	b.n	28dc <_fflush_r+0x1c>

00002914 <_cleanup_r>:
    2914:	4901      	ldr	r1, [pc, #4]	; (291c <_cleanup_r+0x8>)
    2916:	f000 bbaf 	b.w	3078 <_fwalk_reent>
    291a:	bf00      	nop
    291c:	00004151 	.word	0x00004151

00002920 <std.isra.0>:
    2920:	b510      	push	{r4, lr}
    2922:	2300      	movs	r3, #0
    2924:	4604      	mov	r4, r0
    2926:	8181      	strh	r1, [r0, #12]
    2928:	81c2      	strh	r2, [r0, #14]
    292a:	6003      	str	r3, [r0, #0]
    292c:	6043      	str	r3, [r0, #4]
    292e:	6083      	str	r3, [r0, #8]
    2930:	6643      	str	r3, [r0, #100]	; 0x64
    2932:	6103      	str	r3, [r0, #16]
    2934:	6143      	str	r3, [r0, #20]
    2936:	6183      	str	r3, [r0, #24]
    2938:	4619      	mov	r1, r3
    293a:	2208      	movs	r2, #8
    293c:	305c      	adds	r0, #92	; 0x5c
    293e:	f7fe fec3 	bl	16c8 <memset>
    2942:	4807      	ldr	r0, [pc, #28]	; (2960 <std.isra.0+0x40>)
    2944:	4907      	ldr	r1, [pc, #28]	; (2964 <std.isra.0+0x44>)
    2946:	4a08      	ldr	r2, [pc, #32]	; (2968 <std.isra.0+0x48>)
    2948:	4b08      	ldr	r3, [pc, #32]	; (296c <std.isra.0+0x4c>)
    294a:	6220      	str	r0, [r4, #32]
    294c:	61e4      	str	r4, [r4, #28]
    294e:	6261      	str	r1, [r4, #36]	; 0x24
    2950:	62a2      	str	r2, [r4, #40]	; 0x28
    2952:	62e3      	str	r3, [r4, #44]	; 0x2c
    2954:	f104 0058 	add.w	r0, r4, #88	; 0x58
    2958:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    295c:	f000 bbc4 	b.w	30e8 <__retarget_lock_init_recursive>
    2960:	00003db5 	.word	0x00003db5
    2964:	00003dd9 	.word	0x00003dd9
    2968:	00003e15 	.word	0x00003e15
    296c:	00003e35 	.word	0x00003e35

00002970 <__sinit>:
    2970:	b510      	push	{r4, lr}
    2972:	4604      	mov	r4, r0
    2974:	4812      	ldr	r0, [pc, #72]	; (29c0 <__sinit+0x50>)
    2976:	f000 fbbb 	bl	30f0 <__retarget_lock_acquire_recursive>
    297a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
    297c:	b9d2      	cbnz	r2, 29b4 <__sinit+0x44>
    297e:	f504 733b 	add.w	r3, r4, #748	; 0x2ec
    2982:	4810      	ldr	r0, [pc, #64]	; (29c4 <__sinit+0x54>)
    2984:	f8c4 32e8 	str.w	r3, [r4, #744]	; 0x2e8
    2988:	2103      	movs	r1, #3
    298a:	f8c4 22e0 	str.w	r2, [r4, #736]	; 0x2e0
    298e:	63e0      	str	r0, [r4, #60]	; 0x3c
    2990:	f8c4 12e4 	str.w	r1, [r4, #740]	; 0x2e4
    2994:	6860      	ldr	r0, [r4, #4]
    2996:	2104      	movs	r1, #4
    2998:	f7ff ffc2 	bl	2920 <std.isra.0>
    299c:	2201      	movs	r2, #1
    299e:	2109      	movs	r1, #9
    29a0:	68a0      	ldr	r0, [r4, #8]
    29a2:	f7ff ffbd 	bl	2920 <std.isra.0>
    29a6:	2202      	movs	r2, #2
    29a8:	2112      	movs	r1, #18
    29aa:	68e0      	ldr	r0, [r4, #12]
    29ac:	f7ff ffb8 	bl	2920 <std.isra.0>
    29b0:	2301      	movs	r3, #1
    29b2:	63a3      	str	r3, [r4, #56]	; 0x38
    29b4:	4802      	ldr	r0, [pc, #8]	; (29c0 <__sinit+0x50>)
    29b6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    29ba:	f000 bb9b 	b.w	30f4 <__retarget_lock_release_recursive>
    29be:	bf00      	nop
    29c0:	20000a54 	.word	0x20000a54
    29c4:	00002915 	.word	0x00002915

000029c8 <__sfp_lock_acquire>:
    29c8:	4801      	ldr	r0, [pc, #4]	; (29d0 <__sfp_lock_acquire+0x8>)
    29ca:	f000 bb91 	b.w	30f0 <__retarget_lock_acquire_recursive>
    29ce:	bf00      	nop
    29d0:	20000a68 	.word	0x20000a68

000029d4 <__sfp_lock_release>:
    29d4:	4801      	ldr	r0, [pc, #4]	; (29dc <__sfp_lock_release+0x8>)
    29d6:	f000 bb8d 	b.w	30f4 <__retarget_lock_release_recursive>
    29da:	bf00      	nop
    29dc:	20000a68 	.word	0x20000a68

000029e0 <__libc_fini_array>:
    29e0:	b538      	push	{r3, r4, r5, lr}
    29e2:	4c0a      	ldr	r4, [pc, #40]	; (2a0c <__libc_fini_array+0x2c>)
    29e4:	4d0a      	ldr	r5, [pc, #40]	; (2a10 <__libc_fini_array+0x30>)
    29e6:	1b64      	subs	r4, r4, r5
    29e8:	10a4      	asrs	r4, r4, #2
    29ea:	d00a      	beq.n	2a02 <__libc_fini_array+0x22>
    29ec:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
    29f0:	3b01      	subs	r3, #1
    29f2:	eb05 0583 	add.w	r5, r5, r3, lsl #2
    29f6:	3c01      	subs	r4, #1
    29f8:	f855 3904 	ldr.w	r3, [r5], #-4
    29fc:	4798      	blx	r3
    29fe:	2c00      	cmp	r4, #0
    2a00:	d1f9      	bne.n	29f6 <__libc_fini_array+0x16>
    2a02:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    2a06:	f001 bf4b 	b.w	48a0 <_fini>
    2a0a:	bf00      	nop
    2a0c:	000048b0 	.word	0x000048b0
    2a10:	000048ac 	.word	0x000048ac

00002a14 <__fputwc>:
    2a14:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    2a18:	b082      	sub	sp, #8
    2a1a:	4680      	mov	r8, r0
    2a1c:	4689      	mov	r9, r1
    2a1e:	4614      	mov	r4, r2
    2a20:	f000 fb54 	bl	30cc <__locale_mb_cur_max>
    2a24:	2801      	cmp	r0, #1
    2a26:	d036      	beq.n	2a96 <__fputwc+0x82>
    2a28:	464a      	mov	r2, r9
    2a2a:	f104 035c 	add.w	r3, r4, #92	; 0x5c
    2a2e:	a901      	add	r1, sp, #4
    2a30:	4640      	mov	r0, r8
    2a32:	f001 facb 	bl	3fcc <_wcrtomb_r>
    2a36:	1c42      	adds	r2, r0, #1
    2a38:	4606      	mov	r6, r0
    2a3a:	d025      	beq.n	2a88 <__fputwc+0x74>
    2a3c:	b3a8      	cbz	r0, 2aaa <__fputwc+0x96>
    2a3e:	f89d e004 	ldrb.w	lr, [sp, #4]
    2a42:	2500      	movs	r5, #0
    2a44:	f10d 0a04 	add.w	sl, sp, #4
    2a48:	e009      	b.n	2a5e <__fputwc+0x4a>
    2a4a:	6823      	ldr	r3, [r4, #0]
    2a4c:	1c5a      	adds	r2, r3, #1
    2a4e:	6022      	str	r2, [r4, #0]
    2a50:	f883 e000 	strb.w	lr, [r3]
    2a54:	3501      	adds	r5, #1
    2a56:	42b5      	cmp	r5, r6
    2a58:	d227      	bcs.n	2aaa <__fputwc+0x96>
    2a5a:	f815 e00a 	ldrb.w	lr, [r5, sl]
    2a5e:	68a3      	ldr	r3, [r4, #8]
    2a60:	3b01      	subs	r3, #1
    2a62:	2b00      	cmp	r3, #0
    2a64:	60a3      	str	r3, [r4, #8]
    2a66:	daf0      	bge.n	2a4a <__fputwc+0x36>
    2a68:	69a7      	ldr	r7, [r4, #24]
    2a6a:	42bb      	cmp	r3, r7
    2a6c:	4671      	mov	r1, lr
    2a6e:	4622      	mov	r2, r4
    2a70:	4640      	mov	r0, r8
    2a72:	db02      	blt.n	2a7a <__fputwc+0x66>
    2a74:	f1be 0f0a 	cmp.w	lr, #10
    2a78:	d1e7      	bne.n	2a4a <__fputwc+0x36>
    2a7a:	f001 fa4f 	bl	3f1c <__swbuf_r>
    2a7e:	1c43      	adds	r3, r0, #1
    2a80:	d1e8      	bne.n	2a54 <__fputwc+0x40>
    2a82:	b002      	add	sp, #8
    2a84:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    2a88:	89a3      	ldrh	r3, [r4, #12]
    2a8a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    2a8e:	81a3      	strh	r3, [r4, #12]
    2a90:	b002      	add	sp, #8
    2a92:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    2a96:	f109 33ff 	add.w	r3, r9, #4294967295
    2a9a:	2bfe      	cmp	r3, #254	; 0xfe
    2a9c:	d8c4      	bhi.n	2a28 <__fputwc+0x14>
    2a9e:	fa5f fe89 	uxtb.w	lr, r9
    2aa2:	4606      	mov	r6, r0
    2aa4:	f88d e004 	strb.w	lr, [sp, #4]
    2aa8:	e7cb      	b.n	2a42 <__fputwc+0x2e>
    2aaa:	4648      	mov	r0, r9
    2aac:	b002      	add	sp, #8
    2aae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    2ab2:	bf00      	nop

00002ab4 <_fputwc_r>:
    2ab4:	b530      	push	{r4, r5, lr}
    2ab6:	6e53      	ldr	r3, [r2, #100]	; 0x64
    2ab8:	f013 0f01 	tst.w	r3, #1
    2abc:	f9b2 300c 	ldrsh.w	r3, [r2, #12]
    2ac0:	4614      	mov	r4, r2
    2ac2:	b083      	sub	sp, #12
    2ac4:	4605      	mov	r5, r0
    2ac6:	b29a      	uxth	r2, r3
    2ac8:	d101      	bne.n	2ace <_fputwc_r+0x1a>
    2aca:	0590      	lsls	r0, r2, #22
    2acc:	d51c      	bpl.n	2b08 <_fputwc_r+0x54>
    2ace:	0490      	lsls	r0, r2, #18
    2ad0:	d406      	bmi.n	2ae0 <_fputwc_r+0x2c>
    2ad2:	6e62      	ldr	r2, [r4, #100]	; 0x64
    2ad4:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
    2ad8:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
    2adc:	81a3      	strh	r3, [r4, #12]
    2ade:	6662      	str	r2, [r4, #100]	; 0x64
    2ae0:	4628      	mov	r0, r5
    2ae2:	4622      	mov	r2, r4
    2ae4:	f7ff ff96 	bl	2a14 <__fputwc>
    2ae8:	6e63      	ldr	r3, [r4, #100]	; 0x64
    2aea:	07da      	lsls	r2, r3, #31
    2aec:	4605      	mov	r5, r0
    2aee:	d402      	bmi.n	2af6 <_fputwc_r+0x42>
    2af0:	89a3      	ldrh	r3, [r4, #12]
    2af2:	059b      	lsls	r3, r3, #22
    2af4:	d502      	bpl.n	2afc <_fputwc_r+0x48>
    2af6:	4628      	mov	r0, r5
    2af8:	b003      	add	sp, #12
    2afa:	bd30      	pop	{r4, r5, pc}
    2afc:	6da0      	ldr	r0, [r4, #88]	; 0x58
    2afe:	f000 faf9 	bl	30f4 <__retarget_lock_release_recursive>
    2b02:	4628      	mov	r0, r5
    2b04:	b003      	add	sp, #12
    2b06:	bd30      	pop	{r4, r5, pc}
    2b08:	6da0      	ldr	r0, [r4, #88]	; 0x58
    2b0a:	9101      	str	r1, [sp, #4]
    2b0c:	f000 faf0 	bl	30f0 <__retarget_lock_acquire_recursive>
    2b10:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    2b14:	9901      	ldr	r1, [sp, #4]
    2b16:	b29a      	uxth	r2, r3
    2b18:	e7d9      	b.n	2ace <_fputwc_r+0x1a>
    2b1a:	bf00      	nop

00002b1c <_malloc_trim_r>:
    2b1c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    2b1e:	4f24      	ldr	r7, [pc, #144]	; (2bb0 <_malloc_trim_r+0x94>)
    2b20:	460c      	mov	r4, r1
    2b22:	4606      	mov	r6, r0
    2b24:	f000 ff82 	bl	3a2c <__malloc_lock>
    2b28:	68bb      	ldr	r3, [r7, #8]
    2b2a:	685d      	ldr	r5, [r3, #4]
    2b2c:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
    2b30:	310f      	adds	r1, #15
    2b32:	f025 0503 	bic.w	r5, r5, #3
    2b36:	4429      	add	r1, r5
    2b38:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
    2b3c:	f021 010f 	bic.w	r1, r1, #15
    2b40:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
    2b44:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
    2b48:	db07      	blt.n	2b5a <_malloc_trim_r+0x3e>
    2b4a:	2100      	movs	r1, #0
    2b4c:	4630      	mov	r0, r6
    2b4e:	f001 f91f 	bl	3d90 <_sbrk_r>
    2b52:	68bb      	ldr	r3, [r7, #8]
    2b54:	442b      	add	r3, r5
    2b56:	4298      	cmp	r0, r3
    2b58:	d004      	beq.n	2b64 <_malloc_trim_r+0x48>
    2b5a:	4630      	mov	r0, r6
    2b5c:	f000 ff6c 	bl	3a38 <__malloc_unlock>
    2b60:	2000      	movs	r0, #0
    2b62:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    2b64:	4261      	negs	r1, r4
    2b66:	4630      	mov	r0, r6
    2b68:	f001 f912 	bl	3d90 <_sbrk_r>
    2b6c:	3001      	adds	r0, #1
    2b6e:	d00d      	beq.n	2b8c <_malloc_trim_r+0x70>
    2b70:	4b10      	ldr	r3, [pc, #64]	; (2bb4 <_malloc_trim_r+0x98>)
    2b72:	68ba      	ldr	r2, [r7, #8]
    2b74:	6819      	ldr	r1, [r3, #0]
    2b76:	1b2d      	subs	r5, r5, r4
    2b78:	f045 0501 	orr.w	r5, r5, #1
    2b7c:	4630      	mov	r0, r6
    2b7e:	1b09      	subs	r1, r1, r4
    2b80:	6055      	str	r5, [r2, #4]
    2b82:	6019      	str	r1, [r3, #0]
    2b84:	f000 ff58 	bl	3a38 <__malloc_unlock>
    2b88:	2001      	movs	r0, #1
    2b8a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    2b8c:	2100      	movs	r1, #0
    2b8e:	4630      	mov	r0, r6
    2b90:	f001 f8fe 	bl	3d90 <_sbrk_r>
    2b94:	68ba      	ldr	r2, [r7, #8]
    2b96:	1a83      	subs	r3, r0, r2
    2b98:	2b0f      	cmp	r3, #15
    2b9a:	ddde      	ble.n	2b5a <_malloc_trim_r+0x3e>
    2b9c:	4c06      	ldr	r4, [pc, #24]	; (2bb8 <_malloc_trim_r+0x9c>)
    2b9e:	4905      	ldr	r1, [pc, #20]	; (2bb4 <_malloc_trim_r+0x98>)
    2ba0:	6824      	ldr	r4, [r4, #0]
    2ba2:	f043 0301 	orr.w	r3, r3, #1
    2ba6:	1b00      	subs	r0, r0, r4
    2ba8:	6053      	str	r3, [r2, #4]
    2baa:	6008      	str	r0, [r1, #0]
    2bac:	e7d5      	b.n	2b5a <_malloc_trim_r+0x3e>
    2bae:	bf00      	nop
    2bb0:	200005d0 	.word	0x200005d0
    2bb4:	20000a08 	.word	0x20000a08
    2bb8:	200009d8 	.word	0x200009d8

00002bbc <_free_r>:
    2bbc:	2900      	cmp	r1, #0
    2bbe:	d044      	beq.n	2c4a <_free_r+0x8e>
    2bc0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    2bc4:	460d      	mov	r5, r1
    2bc6:	4680      	mov	r8, r0
    2bc8:	f000 ff30 	bl	3a2c <__malloc_lock>
    2bcc:	f855 7c04 	ldr.w	r7, [r5, #-4]
    2bd0:	4969      	ldr	r1, [pc, #420]	; (2d78 <_free_r+0x1bc>)
    2bd2:	f027 0301 	bic.w	r3, r7, #1
    2bd6:	f1a5 0408 	sub.w	r4, r5, #8
    2bda:	18e2      	adds	r2, r4, r3
    2bdc:	688e      	ldr	r6, [r1, #8]
    2bde:	6850      	ldr	r0, [r2, #4]
    2be0:	42b2      	cmp	r2, r6
    2be2:	f020 0003 	bic.w	r0, r0, #3
    2be6:	d05e      	beq.n	2ca6 <_free_r+0xea>
    2be8:	07fe      	lsls	r6, r7, #31
    2bea:	6050      	str	r0, [r2, #4]
    2bec:	d40b      	bmi.n	2c06 <_free_r+0x4a>
    2bee:	f855 7c08 	ldr.w	r7, [r5, #-8]
    2bf2:	1be4      	subs	r4, r4, r7
    2bf4:	f101 0e08 	add.w	lr, r1, #8
    2bf8:	68a5      	ldr	r5, [r4, #8]
    2bfa:	4575      	cmp	r5, lr
    2bfc:	443b      	add	r3, r7
    2bfe:	d06d      	beq.n	2cdc <_free_r+0x120>
    2c00:	68e7      	ldr	r7, [r4, #12]
    2c02:	60ef      	str	r7, [r5, #12]
    2c04:	60bd      	str	r5, [r7, #8]
    2c06:	1815      	adds	r5, r2, r0
    2c08:	686d      	ldr	r5, [r5, #4]
    2c0a:	07ed      	lsls	r5, r5, #31
    2c0c:	d53e      	bpl.n	2c8c <_free_r+0xd0>
    2c0e:	f043 0201 	orr.w	r2, r3, #1
    2c12:	6062      	str	r2, [r4, #4]
    2c14:	50e3      	str	r3, [r4, r3]
    2c16:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
    2c1a:	d217      	bcs.n	2c4c <_free_r+0x90>
    2c1c:	08db      	lsrs	r3, r3, #3
    2c1e:	1c58      	adds	r0, r3, #1
    2c20:	109a      	asrs	r2, r3, #2
    2c22:	684d      	ldr	r5, [r1, #4]
    2c24:	f851 7030 	ldr.w	r7, [r1, r0, lsl #3]
    2c28:	60a7      	str	r7, [r4, #8]
    2c2a:	2301      	movs	r3, #1
    2c2c:	4093      	lsls	r3, r2
    2c2e:	eb01 02c0 	add.w	r2, r1, r0, lsl #3
    2c32:	432b      	orrs	r3, r5
    2c34:	3a08      	subs	r2, #8
    2c36:	60e2      	str	r2, [r4, #12]
    2c38:	604b      	str	r3, [r1, #4]
    2c3a:	f841 4030 	str.w	r4, [r1, r0, lsl #3]
    2c3e:	60fc      	str	r4, [r7, #12]
    2c40:	4640      	mov	r0, r8
    2c42:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    2c46:	f000 bef7 	b.w	3a38 <__malloc_unlock>
    2c4a:	4770      	bx	lr
    2c4c:	0a5a      	lsrs	r2, r3, #9
    2c4e:	2a04      	cmp	r2, #4
    2c50:	d852      	bhi.n	2cf8 <_free_r+0x13c>
    2c52:	099a      	lsrs	r2, r3, #6
    2c54:	f102 0739 	add.w	r7, r2, #57	; 0x39
    2c58:	00ff      	lsls	r7, r7, #3
    2c5a:	f102 0538 	add.w	r5, r2, #56	; 0x38
    2c5e:	19c8      	adds	r0, r1, r7
    2c60:	59ca      	ldr	r2, [r1, r7]
    2c62:	3808      	subs	r0, #8
    2c64:	4290      	cmp	r0, r2
    2c66:	d04f      	beq.n	2d08 <_free_r+0x14c>
    2c68:	6851      	ldr	r1, [r2, #4]
    2c6a:	f021 0103 	bic.w	r1, r1, #3
    2c6e:	428b      	cmp	r3, r1
    2c70:	d232      	bcs.n	2cd8 <_free_r+0x11c>
    2c72:	6892      	ldr	r2, [r2, #8]
    2c74:	4290      	cmp	r0, r2
    2c76:	d1f7      	bne.n	2c68 <_free_r+0xac>
    2c78:	68c3      	ldr	r3, [r0, #12]
    2c7a:	60a0      	str	r0, [r4, #8]
    2c7c:	60e3      	str	r3, [r4, #12]
    2c7e:	609c      	str	r4, [r3, #8]
    2c80:	60c4      	str	r4, [r0, #12]
    2c82:	4640      	mov	r0, r8
    2c84:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    2c88:	f000 bed6 	b.w	3a38 <__malloc_unlock>
    2c8c:	6895      	ldr	r5, [r2, #8]
    2c8e:	4f3b      	ldr	r7, [pc, #236]	; (2d7c <_free_r+0x1c0>)
    2c90:	42bd      	cmp	r5, r7
    2c92:	4403      	add	r3, r0
    2c94:	d040      	beq.n	2d18 <_free_r+0x15c>
    2c96:	68d0      	ldr	r0, [r2, #12]
    2c98:	60e8      	str	r0, [r5, #12]
    2c9a:	f043 0201 	orr.w	r2, r3, #1
    2c9e:	6085      	str	r5, [r0, #8]
    2ca0:	6062      	str	r2, [r4, #4]
    2ca2:	50e3      	str	r3, [r4, r3]
    2ca4:	e7b7      	b.n	2c16 <_free_r+0x5a>
    2ca6:	07ff      	lsls	r7, r7, #31
    2ca8:	4403      	add	r3, r0
    2caa:	d407      	bmi.n	2cbc <_free_r+0x100>
    2cac:	f855 2c08 	ldr.w	r2, [r5, #-8]
    2cb0:	1aa4      	subs	r4, r4, r2
    2cb2:	4413      	add	r3, r2
    2cb4:	68a0      	ldr	r0, [r4, #8]
    2cb6:	68e2      	ldr	r2, [r4, #12]
    2cb8:	60c2      	str	r2, [r0, #12]
    2cba:	6090      	str	r0, [r2, #8]
    2cbc:	4a30      	ldr	r2, [pc, #192]	; (2d80 <_free_r+0x1c4>)
    2cbe:	6812      	ldr	r2, [r2, #0]
    2cc0:	f043 0001 	orr.w	r0, r3, #1
    2cc4:	4293      	cmp	r3, r2
    2cc6:	6060      	str	r0, [r4, #4]
    2cc8:	608c      	str	r4, [r1, #8]
    2cca:	d3b9      	bcc.n	2c40 <_free_r+0x84>
    2ccc:	4b2d      	ldr	r3, [pc, #180]	; (2d84 <_free_r+0x1c8>)
    2cce:	4640      	mov	r0, r8
    2cd0:	6819      	ldr	r1, [r3, #0]
    2cd2:	f7ff ff23 	bl	2b1c <_malloc_trim_r>
    2cd6:	e7b3      	b.n	2c40 <_free_r+0x84>
    2cd8:	4610      	mov	r0, r2
    2cda:	e7cd      	b.n	2c78 <_free_r+0xbc>
    2cdc:	1811      	adds	r1, r2, r0
    2cde:	6849      	ldr	r1, [r1, #4]
    2ce0:	07c9      	lsls	r1, r1, #31
    2ce2:	d444      	bmi.n	2d6e <_free_r+0x1b2>
    2ce4:	6891      	ldr	r1, [r2, #8]
    2ce6:	68d2      	ldr	r2, [r2, #12]
    2ce8:	60ca      	str	r2, [r1, #12]
    2cea:	4403      	add	r3, r0
    2cec:	f043 0001 	orr.w	r0, r3, #1
    2cf0:	6091      	str	r1, [r2, #8]
    2cf2:	6060      	str	r0, [r4, #4]
    2cf4:	50e3      	str	r3, [r4, r3]
    2cf6:	e7a3      	b.n	2c40 <_free_r+0x84>
    2cf8:	2a14      	cmp	r2, #20
    2cfa:	d816      	bhi.n	2d2a <_free_r+0x16e>
    2cfc:	f102 075c 	add.w	r7, r2, #92	; 0x5c
    2d00:	00ff      	lsls	r7, r7, #3
    2d02:	f102 055b 	add.w	r5, r2, #91	; 0x5b
    2d06:	e7aa      	b.n	2c5e <_free_r+0xa2>
    2d08:	10aa      	asrs	r2, r5, #2
    2d0a:	2301      	movs	r3, #1
    2d0c:	684d      	ldr	r5, [r1, #4]
    2d0e:	4093      	lsls	r3, r2
    2d10:	432b      	orrs	r3, r5
    2d12:	604b      	str	r3, [r1, #4]
    2d14:	4603      	mov	r3, r0
    2d16:	e7b0      	b.n	2c7a <_free_r+0xbe>
    2d18:	f043 0201 	orr.w	r2, r3, #1
    2d1c:	614c      	str	r4, [r1, #20]
    2d1e:	610c      	str	r4, [r1, #16]
    2d20:	60e5      	str	r5, [r4, #12]
    2d22:	60a5      	str	r5, [r4, #8]
    2d24:	6062      	str	r2, [r4, #4]
    2d26:	50e3      	str	r3, [r4, r3]
    2d28:	e78a      	b.n	2c40 <_free_r+0x84>
    2d2a:	2a54      	cmp	r2, #84	; 0x54
    2d2c:	d806      	bhi.n	2d3c <_free_r+0x180>
    2d2e:	0b1a      	lsrs	r2, r3, #12
    2d30:	f102 076f 	add.w	r7, r2, #111	; 0x6f
    2d34:	00ff      	lsls	r7, r7, #3
    2d36:	f102 056e 	add.w	r5, r2, #110	; 0x6e
    2d3a:	e790      	b.n	2c5e <_free_r+0xa2>
    2d3c:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
    2d40:	d806      	bhi.n	2d50 <_free_r+0x194>
    2d42:	0bda      	lsrs	r2, r3, #15
    2d44:	f102 0778 	add.w	r7, r2, #120	; 0x78
    2d48:	00ff      	lsls	r7, r7, #3
    2d4a:	f102 0577 	add.w	r5, r2, #119	; 0x77
    2d4e:	e786      	b.n	2c5e <_free_r+0xa2>
    2d50:	f240 5054 	movw	r0, #1364	; 0x554
    2d54:	4282      	cmp	r2, r0
    2d56:	d806      	bhi.n	2d66 <_free_r+0x1aa>
    2d58:	0c9a      	lsrs	r2, r3, #18
    2d5a:	f102 077d 	add.w	r7, r2, #125	; 0x7d
    2d5e:	00ff      	lsls	r7, r7, #3
    2d60:	f102 057c 	add.w	r5, r2, #124	; 0x7c
    2d64:	e77b      	b.n	2c5e <_free_r+0xa2>
    2d66:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
    2d6a:	257e      	movs	r5, #126	; 0x7e
    2d6c:	e777      	b.n	2c5e <_free_r+0xa2>
    2d6e:	f043 0101 	orr.w	r1, r3, #1
    2d72:	6061      	str	r1, [r4, #4]
    2d74:	6013      	str	r3, [r2, #0]
    2d76:	e763      	b.n	2c40 <_free_r+0x84>
    2d78:	200005d0 	.word	0x200005d0
    2d7c:	200005d8 	.word	0x200005d8
    2d80:	200009dc 	.word	0x200009dc
    2d84:	20000a38 	.word	0x20000a38

00002d88 <__sfvwrite_r>:
    2d88:	6893      	ldr	r3, [r2, #8]
    2d8a:	2b00      	cmp	r3, #0
    2d8c:	d073      	beq.n	2e76 <__sfvwrite_r+0xee>
    2d8e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    2d92:	898b      	ldrh	r3, [r1, #12]
    2d94:	b083      	sub	sp, #12
    2d96:	460c      	mov	r4, r1
    2d98:	0719      	lsls	r1, r3, #28
    2d9a:	9000      	str	r0, [sp, #0]
    2d9c:	4616      	mov	r6, r2
    2d9e:	d526      	bpl.n	2dee <__sfvwrite_r+0x66>
    2da0:	6922      	ldr	r2, [r4, #16]
    2da2:	b322      	cbz	r2, 2dee <__sfvwrite_r+0x66>
    2da4:	f013 0002 	ands.w	r0, r3, #2
    2da8:	6835      	ldr	r5, [r6, #0]
    2daa:	d02c      	beq.n	2e06 <__sfvwrite_r+0x7e>
    2dac:	f04f 0900 	mov.w	r9, #0
    2db0:	4fb0      	ldr	r7, [pc, #704]	; (3074 <__sfvwrite_r+0x2ec>)
    2db2:	46c8      	mov	r8, r9
    2db4:	46b2      	mov	sl, r6
    2db6:	45b8      	cmp	r8, r7
    2db8:	4643      	mov	r3, r8
    2dba:	464a      	mov	r2, r9
    2dbc:	bf28      	it	cs
    2dbe:	463b      	movcs	r3, r7
    2dc0:	9800      	ldr	r0, [sp, #0]
    2dc2:	f1b8 0f00 	cmp.w	r8, #0
    2dc6:	d050      	beq.n	2e6a <__sfvwrite_r+0xe2>
    2dc8:	69e1      	ldr	r1, [r4, #28]
    2dca:	6a66      	ldr	r6, [r4, #36]	; 0x24
    2dcc:	47b0      	blx	r6
    2dce:	2800      	cmp	r0, #0
    2dd0:	dd58      	ble.n	2e84 <__sfvwrite_r+0xfc>
    2dd2:	f8da 3008 	ldr.w	r3, [sl, #8]
    2dd6:	1a1b      	subs	r3, r3, r0
    2dd8:	4481      	add	r9, r0
    2dda:	eba8 0800 	sub.w	r8, r8, r0
    2dde:	f8ca 3008 	str.w	r3, [sl, #8]
    2de2:	2b00      	cmp	r3, #0
    2de4:	d1e7      	bne.n	2db6 <__sfvwrite_r+0x2e>
    2de6:	2000      	movs	r0, #0
    2de8:	b003      	add	sp, #12
    2dea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2dee:	4621      	mov	r1, r4
    2df0:	9800      	ldr	r0, [sp, #0]
    2df2:	f7ff fc51 	bl	2698 <__swsetup_r>
    2df6:	2800      	cmp	r0, #0
    2df8:	f040 8133 	bne.w	3062 <__sfvwrite_r+0x2da>
    2dfc:	89a3      	ldrh	r3, [r4, #12]
    2dfe:	6835      	ldr	r5, [r6, #0]
    2e00:	f013 0002 	ands.w	r0, r3, #2
    2e04:	d1d2      	bne.n	2dac <__sfvwrite_r+0x24>
    2e06:	f013 0901 	ands.w	r9, r3, #1
    2e0a:	d145      	bne.n	2e98 <__sfvwrite_r+0x110>
    2e0c:	464f      	mov	r7, r9
    2e0e:	9601      	str	r6, [sp, #4]
    2e10:	b337      	cbz	r7, 2e60 <__sfvwrite_r+0xd8>
    2e12:	059a      	lsls	r2, r3, #22
    2e14:	f8d4 8008 	ldr.w	r8, [r4, #8]
    2e18:	f140 8083 	bpl.w	2f22 <__sfvwrite_r+0x19a>
    2e1c:	4547      	cmp	r7, r8
    2e1e:	46c3      	mov	fp, r8
    2e20:	f0c0 80ab 	bcc.w	2f7a <__sfvwrite_r+0x1f2>
    2e24:	f413 6f90 	tst.w	r3, #1152	; 0x480
    2e28:	f040 80ac 	bne.w	2f84 <__sfvwrite_r+0x1fc>
    2e2c:	6820      	ldr	r0, [r4, #0]
    2e2e:	46ba      	mov	sl, r7
    2e30:	465a      	mov	r2, fp
    2e32:	4649      	mov	r1, r9
    2e34:	f000 fd96 	bl	3964 <memmove>
    2e38:	68a2      	ldr	r2, [r4, #8]
    2e3a:	6823      	ldr	r3, [r4, #0]
    2e3c:	eba2 0208 	sub.w	r2, r2, r8
    2e40:	445b      	add	r3, fp
    2e42:	60a2      	str	r2, [r4, #8]
    2e44:	6023      	str	r3, [r4, #0]
    2e46:	9a01      	ldr	r2, [sp, #4]
    2e48:	6893      	ldr	r3, [r2, #8]
    2e4a:	eba3 030a 	sub.w	r3, r3, sl
    2e4e:	44d1      	add	r9, sl
    2e50:	eba7 070a 	sub.w	r7, r7, sl
    2e54:	6093      	str	r3, [r2, #8]
    2e56:	2b00      	cmp	r3, #0
    2e58:	d0c5      	beq.n	2de6 <__sfvwrite_r+0x5e>
    2e5a:	89a3      	ldrh	r3, [r4, #12]
    2e5c:	2f00      	cmp	r7, #0
    2e5e:	d1d8      	bne.n	2e12 <__sfvwrite_r+0x8a>
    2e60:	f8d5 9000 	ldr.w	r9, [r5]
    2e64:	686f      	ldr	r7, [r5, #4]
    2e66:	3508      	adds	r5, #8
    2e68:	e7d2      	b.n	2e10 <__sfvwrite_r+0x88>
    2e6a:	f8d5 9000 	ldr.w	r9, [r5]
    2e6e:	f8d5 8004 	ldr.w	r8, [r5, #4]
    2e72:	3508      	adds	r5, #8
    2e74:	e79f      	b.n	2db6 <__sfvwrite_r+0x2e>
    2e76:	2000      	movs	r0, #0
    2e78:	4770      	bx	lr
    2e7a:	4621      	mov	r1, r4
    2e7c:	9800      	ldr	r0, [sp, #0]
    2e7e:	f7ff fd1f 	bl	28c0 <_fflush_r>
    2e82:	b370      	cbz	r0, 2ee2 <__sfvwrite_r+0x15a>
    2e84:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    2e88:	f043 0340 	orr.w	r3, r3, #64	; 0x40
    2e8c:	f04f 30ff 	mov.w	r0, #4294967295
    2e90:	81a3      	strh	r3, [r4, #12]
    2e92:	b003      	add	sp, #12
    2e94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2e98:	4681      	mov	r9, r0
    2e9a:	4633      	mov	r3, r6
    2e9c:	464e      	mov	r6, r9
    2e9e:	46a8      	mov	r8, r5
    2ea0:	469a      	mov	sl, r3
    2ea2:	464d      	mov	r5, r9
    2ea4:	b34e      	cbz	r6, 2efa <__sfvwrite_r+0x172>
    2ea6:	b380      	cbz	r0, 2f0a <__sfvwrite_r+0x182>
    2ea8:	6820      	ldr	r0, [r4, #0]
    2eaa:	6923      	ldr	r3, [r4, #16]
    2eac:	6962      	ldr	r2, [r4, #20]
    2eae:	45b1      	cmp	r9, r6
    2eb0:	46cb      	mov	fp, r9
    2eb2:	bf28      	it	cs
    2eb4:	46b3      	movcs	fp, r6
    2eb6:	4298      	cmp	r0, r3
    2eb8:	465f      	mov	r7, fp
    2eba:	d904      	bls.n	2ec6 <__sfvwrite_r+0x13e>
    2ebc:	68a3      	ldr	r3, [r4, #8]
    2ebe:	4413      	add	r3, r2
    2ec0:	459b      	cmp	fp, r3
    2ec2:	f300 80a6 	bgt.w	3012 <__sfvwrite_r+0x28a>
    2ec6:	4593      	cmp	fp, r2
    2ec8:	db4b      	blt.n	2f62 <__sfvwrite_r+0x1da>
    2eca:	4613      	mov	r3, r2
    2ecc:	6a67      	ldr	r7, [r4, #36]	; 0x24
    2ece:	69e1      	ldr	r1, [r4, #28]
    2ed0:	9800      	ldr	r0, [sp, #0]
    2ed2:	462a      	mov	r2, r5
    2ed4:	47b8      	blx	r7
    2ed6:	1e07      	subs	r7, r0, #0
    2ed8:	ddd4      	ble.n	2e84 <__sfvwrite_r+0xfc>
    2eda:	ebb9 0907 	subs.w	r9, r9, r7
    2ede:	d0cc      	beq.n	2e7a <__sfvwrite_r+0xf2>
    2ee0:	2001      	movs	r0, #1
    2ee2:	f8da 3008 	ldr.w	r3, [sl, #8]
    2ee6:	1bdb      	subs	r3, r3, r7
    2ee8:	443d      	add	r5, r7
    2eea:	1bf6      	subs	r6, r6, r7
    2eec:	f8ca 3008 	str.w	r3, [sl, #8]
    2ef0:	2b00      	cmp	r3, #0
    2ef2:	f43f af78 	beq.w	2de6 <__sfvwrite_r+0x5e>
    2ef6:	2e00      	cmp	r6, #0
    2ef8:	d1d5      	bne.n	2ea6 <__sfvwrite_r+0x11e>
    2efa:	f108 0308 	add.w	r3, r8, #8
    2efe:	e913 0060 	ldmdb	r3, {r5, r6}
    2f02:	4698      	mov	r8, r3
    2f04:	3308      	adds	r3, #8
    2f06:	2e00      	cmp	r6, #0
    2f08:	d0f9      	beq.n	2efe <__sfvwrite_r+0x176>
    2f0a:	4632      	mov	r2, r6
    2f0c:	210a      	movs	r1, #10
    2f0e:	4628      	mov	r0, r5
    2f10:	f000 fc3e 	bl	3790 <memchr>
    2f14:	2800      	cmp	r0, #0
    2f16:	f000 80a1 	beq.w	305c <__sfvwrite_r+0x2d4>
    2f1a:	3001      	adds	r0, #1
    2f1c:	eba0 0905 	sub.w	r9, r0, r5
    2f20:	e7c2      	b.n	2ea8 <__sfvwrite_r+0x120>
    2f22:	6820      	ldr	r0, [r4, #0]
    2f24:	6923      	ldr	r3, [r4, #16]
    2f26:	4298      	cmp	r0, r3
    2f28:	d802      	bhi.n	2f30 <__sfvwrite_r+0x1a8>
    2f2a:	6963      	ldr	r3, [r4, #20]
    2f2c:	429f      	cmp	r7, r3
    2f2e:	d25d      	bcs.n	2fec <__sfvwrite_r+0x264>
    2f30:	45b8      	cmp	r8, r7
    2f32:	bf28      	it	cs
    2f34:	46b8      	movcs	r8, r7
    2f36:	4642      	mov	r2, r8
    2f38:	4649      	mov	r1, r9
    2f3a:	f000 fd13 	bl	3964 <memmove>
    2f3e:	68a3      	ldr	r3, [r4, #8]
    2f40:	6822      	ldr	r2, [r4, #0]
    2f42:	eba3 0308 	sub.w	r3, r3, r8
    2f46:	4442      	add	r2, r8
    2f48:	60a3      	str	r3, [r4, #8]
    2f4a:	6022      	str	r2, [r4, #0]
    2f4c:	b10b      	cbz	r3, 2f52 <__sfvwrite_r+0x1ca>
    2f4e:	46c2      	mov	sl, r8
    2f50:	e779      	b.n	2e46 <__sfvwrite_r+0xbe>
    2f52:	4621      	mov	r1, r4
    2f54:	9800      	ldr	r0, [sp, #0]
    2f56:	f7ff fcb3 	bl	28c0 <_fflush_r>
    2f5a:	2800      	cmp	r0, #0
    2f5c:	d192      	bne.n	2e84 <__sfvwrite_r+0xfc>
    2f5e:	46c2      	mov	sl, r8
    2f60:	e771      	b.n	2e46 <__sfvwrite_r+0xbe>
    2f62:	465a      	mov	r2, fp
    2f64:	4629      	mov	r1, r5
    2f66:	f000 fcfd 	bl	3964 <memmove>
    2f6a:	68a2      	ldr	r2, [r4, #8]
    2f6c:	6823      	ldr	r3, [r4, #0]
    2f6e:	eba2 020b 	sub.w	r2, r2, fp
    2f72:	445b      	add	r3, fp
    2f74:	60a2      	str	r2, [r4, #8]
    2f76:	6023      	str	r3, [r4, #0]
    2f78:	e7af      	b.n	2eda <__sfvwrite_r+0x152>
    2f7a:	6820      	ldr	r0, [r4, #0]
    2f7c:	46b8      	mov	r8, r7
    2f7e:	46ba      	mov	sl, r7
    2f80:	46bb      	mov	fp, r7
    2f82:	e755      	b.n	2e30 <__sfvwrite_r+0xa8>
    2f84:	6962      	ldr	r2, [r4, #20]
    2f86:	6820      	ldr	r0, [r4, #0]
    2f88:	6921      	ldr	r1, [r4, #16]
    2f8a:	eb02 0842 	add.w	r8, r2, r2, lsl #1
    2f8e:	eba0 0a01 	sub.w	sl, r0, r1
    2f92:	eb08 78d8 	add.w	r8, r8, r8, lsr #31
    2f96:	f10a 0001 	add.w	r0, sl, #1
    2f9a:	ea4f 0868 	mov.w	r8, r8, asr #1
    2f9e:	4438      	add	r0, r7
    2fa0:	4540      	cmp	r0, r8
    2fa2:	4642      	mov	r2, r8
    2fa4:	bf84      	itt	hi
    2fa6:	4680      	movhi	r8, r0
    2fa8:	4642      	movhi	r2, r8
    2faa:	055b      	lsls	r3, r3, #21
    2fac:	d544      	bpl.n	3038 <__sfvwrite_r+0x2b0>
    2fae:	4611      	mov	r1, r2
    2fb0:	9800      	ldr	r0, [sp, #0]
    2fb2:	f000 f921 	bl	31f8 <_malloc_r>
    2fb6:	4683      	mov	fp, r0
    2fb8:	2800      	cmp	r0, #0
    2fba:	d055      	beq.n	3068 <__sfvwrite_r+0x2e0>
    2fbc:	4652      	mov	r2, sl
    2fbe:	6921      	ldr	r1, [r4, #16]
    2fc0:	f000 fc36 	bl	3830 <memcpy>
    2fc4:	89a3      	ldrh	r3, [r4, #12]
    2fc6:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
    2fca:	f043 0380 	orr.w	r3, r3, #128	; 0x80
    2fce:	81a3      	strh	r3, [r4, #12]
    2fd0:	eb0b 000a 	add.w	r0, fp, sl
    2fd4:	eba8 030a 	sub.w	r3, r8, sl
    2fd8:	f8c4 b010 	str.w	fp, [r4, #16]
    2fdc:	f8c4 8014 	str.w	r8, [r4, #20]
    2fe0:	6020      	str	r0, [r4, #0]
    2fe2:	60a3      	str	r3, [r4, #8]
    2fe4:	46b8      	mov	r8, r7
    2fe6:	46ba      	mov	sl, r7
    2fe8:	46bb      	mov	fp, r7
    2fea:	e721      	b.n	2e30 <__sfvwrite_r+0xa8>
    2fec:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
    2ff0:	42b9      	cmp	r1, r7
    2ff2:	bf28      	it	cs
    2ff4:	4639      	movcs	r1, r7
    2ff6:	464a      	mov	r2, r9
    2ff8:	fb91 f1f3 	sdiv	r1, r1, r3
    2ffc:	9800      	ldr	r0, [sp, #0]
    2ffe:	6a66      	ldr	r6, [r4, #36]	; 0x24
    3000:	fb03 f301 	mul.w	r3, r3, r1
    3004:	69e1      	ldr	r1, [r4, #28]
    3006:	47b0      	blx	r6
    3008:	f1b0 0a00 	subs.w	sl, r0, #0
    300c:	f73f af1b 	bgt.w	2e46 <__sfvwrite_r+0xbe>
    3010:	e738      	b.n	2e84 <__sfvwrite_r+0xfc>
    3012:	461a      	mov	r2, r3
    3014:	4629      	mov	r1, r5
    3016:	9301      	str	r3, [sp, #4]
    3018:	f000 fca4 	bl	3964 <memmove>
    301c:	6822      	ldr	r2, [r4, #0]
    301e:	9b01      	ldr	r3, [sp, #4]
    3020:	9800      	ldr	r0, [sp, #0]
    3022:	441a      	add	r2, r3
    3024:	6022      	str	r2, [r4, #0]
    3026:	4621      	mov	r1, r4
    3028:	f7ff fc4a 	bl	28c0 <_fflush_r>
    302c:	9b01      	ldr	r3, [sp, #4]
    302e:	2800      	cmp	r0, #0
    3030:	f47f af28 	bne.w	2e84 <__sfvwrite_r+0xfc>
    3034:	461f      	mov	r7, r3
    3036:	e750      	b.n	2eda <__sfvwrite_r+0x152>
    3038:	9800      	ldr	r0, [sp, #0]
    303a:	f000 fd03 	bl	3a44 <_realloc_r>
    303e:	4683      	mov	fp, r0
    3040:	2800      	cmp	r0, #0
    3042:	d1c5      	bne.n	2fd0 <__sfvwrite_r+0x248>
    3044:	9d00      	ldr	r5, [sp, #0]
    3046:	6921      	ldr	r1, [r4, #16]
    3048:	4628      	mov	r0, r5
    304a:	f7ff fdb7 	bl	2bbc <_free_r>
    304e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    3052:	220c      	movs	r2, #12
    3054:	f023 0380 	bic.w	r3, r3, #128	; 0x80
    3058:	602a      	str	r2, [r5, #0]
    305a:	e715      	b.n	2e88 <__sfvwrite_r+0x100>
    305c:	f106 0901 	add.w	r9, r6, #1
    3060:	e722      	b.n	2ea8 <__sfvwrite_r+0x120>
    3062:	f04f 30ff 	mov.w	r0, #4294967295
    3066:	e6bf      	b.n	2de8 <__sfvwrite_r+0x60>
    3068:	9a00      	ldr	r2, [sp, #0]
    306a:	230c      	movs	r3, #12
    306c:	6013      	str	r3, [r2, #0]
    306e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    3072:	e709      	b.n	2e88 <__sfvwrite_r+0x100>
    3074:	7ffffc00 	.word	0x7ffffc00

00003078 <_fwalk_reent>:
    3078:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    307c:	f510 7738 	adds.w	r7, r0, #736	; 0x2e0
    3080:	d01f      	beq.n	30c2 <_fwalk_reent+0x4a>
    3082:	4688      	mov	r8, r1
    3084:	4606      	mov	r6, r0
    3086:	f04f 0900 	mov.w	r9, #0
    308a:	687d      	ldr	r5, [r7, #4]
    308c:	68bc      	ldr	r4, [r7, #8]
    308e:	3d01      	subs	r5, #1
    3090:	d411      	bmi.n	30b6 <_fwalk_reent+0x3e>
    3092:	89a3      	ldrh	r3, [r4, #12]
    3094:	2b01      	cmp	r3, #1
    3096:	f105 35ff 	add.w	r5, r5, #4294967295
    309a:	d908      	bls.n	30ae <_fwalk_reent+0x36>
    309c:	f9b4 300e 	ldrsh.w	r3, [r4, #14]
    30a0:	3301      	adds	r3, #1
    30a2:	4621      	mov	r1, r4
    30a4:	4630      	mov	r0, r6
    30a6:	d002      	beq.n	30ae <_fwalk_reent+0x36>
    30a8:	47c0      	blx	r8
    30aa:	ea49 0900 	orr.w	r9, r9, r0
    30ae:	1c6b      	adds	r3, r5, #1
    30b0:	f104 0468 	add.w	r4, r4, #104	; 0x68
    30b4:	d1ed      	bne.n	3092 <_fwalk_reent+0x1a>
    30b6:	683f      	ldr	r7, [r7, #0]
    30b8:	2f00      	cmp	r7, #0
    30ba:	d1e6      	bne.n	308a <_fwalk_reent+0x12>
    30bc:	4648      	mov	r0, r9
    30be:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    30c2:	46b9      	mov	r9, r7
    30c4:	4648      	mov	r0, r9
    30c6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    30ca:	bf00      	nop

000030cc <__locale_mb_cur_max>:
    30cc:	4b04      	ldr	r3, [pc, #16]	; (30e0 <__locale_mb_cur_max+0x14>)
    30ce:	4a05      	ldr	r2, [pc, #20]	; (30e4 <__locale_mb_cur_max+0x18>)
    30d0:	681b      	ldr	r3, [r3, #0]
    30d2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    30d4:	2b00      	cmp	r3, #0
    30d6:	bf08      	it	eq
    30d8:	4613      	moveq	r3, r2
    30da:	f893 0128 	ldrb.w	r0, [r3, #296]	; 0x128
    30de:	4770      	bx	lr
    30e0:	20000030 	.word	0x20000030
    30e4:	20000464 	.word	0x20000464

000030e8 <__retarget_lock_init_recursive>:
    30e8:	4770      	bx	lr
    30ea:	bf00      	nop

000030ec <__retarget_lock_close_recursive>:
    30ec:	4770      	bx	lr
    30ee:	bf00      	nop

000030f0 <__retarget_lock_acquire_recursive>:
    30f0:	4770      	bx	lr
    30f2:	bf00      	nop

000030f4 <__retarget_lock_release_recursive>:
    30f4:	4770      	bx	lr
    30f6:	bf00      	nop

000030f8 <__swhatbuf_r>:
    30f8:	b570      	push	{r4, r5, r6, lr}
    30fa:	460c      	mov	r4, r1
    30fc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
    3100:	2900      	cmp	r1, #0
    3102:	b090      	sub	sp, #64	; 0x40
    3104:	4615      	mov	r5, r2
    3106:	461e      	mov	r6, r3
    3108:	db14      	blt.n	3134 <__swhatbuf_r+0x3c>
    310a:	aa01      	add	r2, sp, #4
    310c:	f001 f882 	bl	4214 <_fstat_r>
    3110:	2800      	cmp	r0, #0
    3112:	db0f      	blt.n	3134 <__swhatbuf_r+0x3c>
    3114:	9a02      	ldr	r2, [sp, #8]
    3116:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
    311a:	f5a2 5200 	sub.w	r2, r2, #8192	; 0x2000
    311e:	fab2 f282 	clz	r2, r2
    3122:	0952      	lsrs	r2, r2, #5
    3124:	f44f 6380 	mov.w	r3, #1024	; 0x400
    3128:	f44f 6000 	mov.w	r0, #2048	; 0x800
    312c:	6032      	str	r2, [r6, #0]
    312e:	602b      	str	r3, [r5, #0]
    3130:	b010      	add	sp, #64	; 0x40
    3132:	bd70      	pop	{r4, r5, r6, pc}
    3134:	89a2      	ldrh	r2, [r4, #12]
    3136:	2300      	movs	r3, #0
    3138:	f012 0080 	ands.w	r0, r2, #128	; 0x80
    313c:	6033      	str	r3, [r6, #0]
    313e:	d004      	beq.n	314a <__swhatbuf_r+0x52>
    3140:	2240      	movs	r2, #64	; 0x40
    3142:	4618      	mov	r0, r3
    3144:	602a      	str	r2, [r5, #0]
    3146:	b010      	add	sp, #64	; 0x40
    3148:	bd70      	pop	{r4, r5, r6, pc}
    314a:	f44f 6380 	mov.w	r3, #1024	; 0x400
    314e:	602b      	str	r3, [r5, #0]
    3150:	b010      	add	sp, #64	; 0x40
    3152:	bd70      	pop	{r4, r5, r6, pc}

00003154 <__smakebuf_r>:
    3154:	898a      	ldrh	r2, [r1, #12]
    3156:	0792      	lsls	r2, r2, #30
    3158:	460b      	mov	r3, r1
    315a:	d506      	bpl.n	316a <__smakebuf_r+0x16>
    315c:	f101 0243 	add.w	r2, r1, #67	; 0x43
    3160:	2101      	movs	r1, #1
    3162:	601a      	str	r2, [r3, #0]
    3164:	611a      	str	r2, [r3, #16]
    3166:	6159      	str	r1, [r3, #20]
    3168:	4770      	bx	lr
    316a:	b5f0      	push	{r4, r5, r6, r7, lr}
    316c:	b083      	sub	sp, #12
    316e:	ab01      	add	r3, sp, #4
    3170:	466a      	mov	r2, sp
    3172:	460c      	mov	r4, r1
    3174:	4606      	mov	r6, r0
    3176:	f7ff ffbf 	bl	30f8 <__swhatbuf_r>
    317a:	9900      	ldr	r1, [sp, #0]
    317c:	4605      	mov	r5, r0
    317e:	4630      	mov	r0, r6
    3180:	f000 f83a 	bl	31f8 <_malloc_r>
    3184:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    3188:	b1d8      	cbz	r0, 31c2 <__smakebuf_r+0x6e>
    318a:	9a01      	ldr	r2, [sp, #4]
    318c:	4f15      	ldr	r7, [pc, #84]	; (31e4 <__smakebuf_r+0x90>)
    318e:	9900      	ldr	r1, [sp, #0]
    3190:	63f7      	str	r7, [r6, #60]	; 0x3c
    3192:	f043 0380 	orr.w	r3, r3, #128	; 0x80
    3196:	81a3      	strh	r3, [r4, #12]
    3198:	6020      	str	r0, [r4, #0]
    319a:	6120      	str	r0, [r4, #16]
    319c:	6161      	str	r1, [r4, #20]
    319e:	b91a      	cbnz	r2, 31a8 <__smakebuf_r+0x54>
    31a0:	432b      	orrs	r3, r5
    31a2:	81a3      	strh	r3, [r4, #12]
    31a4:	b003      	add	sp, #12
    31a6:	bdf0      	pop	{r4, r5, r6, r7, pc}
    31a8:	4630      	mov	r0, r6
    31aa:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
    31ae:	f001 f845 	bl	423c <_isatty_r>
    31b2:	b1a0      	cbz	r0, 31de <__smakebuf_r+0x8a>
    31b4:	89a3      	ldrh	r3, [r4, #12]
    31b6:	f023 0303 	bic.w	r3, r3, #3
    31ba:	f043 0301 	orr.w	r3, r3, #1
    31be:	b21b      	sxth	r3, r3
    31c0:	e7ee      	b.n	31a0 <__smakebuf_r+0x4c>
    31c2:	059a      	lsls	r2, r3, #22
    31c4:	d4ee      	bmi.n	31a4 <__smakebuf_r+0x50>
    31c6:	f023 0303 	bic.w	r3, r3, #3
    31ca:	f104 0243 	add.w	r2, r4, #67	; 0x43
    31ce:	f043 0302 	orr.w	r3, r3, #2
    31d2:	2101      	movs	r1, #1
    31d4:	81a3      	strh	r3, [r4, #12]
    31d6:	6022      	str	r2, [r4, #0]
    31d8:	6122      	str	r2, [r4, #16]
    31da:	6161      	str	r1, [r4, #20]
    31dc:	e7e2      	b.n	31a4 <__smakebuf_r+0x50>
    31de:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    31e2:	e7dd      	b.n	31a0 <__smakebuf_r+0x4c>
    31e4:	00002915 	.word	0x00002915

000031e8 <malloc>:
    31e8:	4b02      	ldr	r3, [pc, #8]	; (31f4 <malloc+0xc>)
    31ea:	4601      	mov	r1, r0
    31ec:	6818      	ldr	r0, [r3, #0]
    31ee:	f000 b803 	b.w	31f8 <_malloc_r>
    31f2:	bf00      	nop
    31f4:	20000030 	.word	0x20000030

000031f8 <_malloc_r>:
    31f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    31fc:	f101 060b 	add.w	r6, r1, #11
    3200:	2e16      	cmp	r6, #22
    3202:	b083      	sub	sp, #12
    3204:	4605      	mov	r5, r0
    3206:	f240 809e 	bls.w	3346 <_malloc_r+0x14e>
    320a:	f036 0607 	bics.w	r6, r6, #7
    320e:	f100 80bd 	bmi.w	338c <_malloc_r+0x194>
    3212:	42b1      	cmp	r1, r6
    3214:	f200 80ba 	bhi.w	338c <_malloc_r+0x194>
    3218:	f000 fc08 	bl	3a2c <__malloc_lock>
    321c:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
    3220:	f0c0 8293 	bcc.w	374a <_malloc_r+0x552>
    3224:	0a73      	lsrs	r3, r6, #9
    3226:	f000 80b8 	beq.w	339a <_malloc_r+0x1a2>
    322a:	2b04      	cmp	r3, #4
    322c:	f200 8179 	bhi.w	3522 <_malloc_r+0x32a>
    3230:	09b3      	lsrs	r3, r6, #6
    3232:	f103 0039 	add.w	r0, r3, #57	; 0x39
    3236:	f103 0e38 	add.w	lr, r3, #56	; 0x38
    323a:	00c3      	lsls	r3, r0, #3
    323c:	4fbf      	ldr	r7, [pc, #764]	; (353c <_malloc_r+0x344>)
    323e:	443b      	add	r3, r7
    3240:	f1a3 0108 	sub.w	r1, r3, #8
    3244:	685c      	ldr	r4, [r3, #4]
    3246:	42a1      	cmp	r1, r4
    3248:	d106      	bne.n	3258 <_malloc_r+0x60>
    324a:	e00c      	b.n	3266 <_malloc_r+0x6e>
    324c:	2a00      	cmp	r2, #0
    324e:	f280 80aa 	bge.w	33a6 <_malloc_r+0x1ae>
    3252:	68e4      	ldr	r4, [r4, #12]
    3254:	42a1      	cmp	r1, r4
    3256:	d006      	beq.n	3266 <_malloc_r+0x6e>
    3258:	6863      	ldr	r3, [r4, #4]
    325a:	f023 0303 	bic.w	r3, r3, #3
    325e:	1b9a      	subs	r2, r3, r6
    3260:	2a0f      	cmp	r2, #15
    3262:	ddf3      	ble.n	324c <_malloc_r+0x54>
    3264:	4670      	mov	r0, lr
    3266:	693c      	ldr	r4, [r7, #16]
    3268:	f8df e2e4 	ldr.w	lr, [pc, #740]	; 3550 <_malloc_r+0x358>
    326c:	4574      	cmp	r4, lr
    326e:	f000 81ab 	beq.w	35c8 <_malloc_r+0x3d0>
    3272:	6863      	ldr	r3, [r4, #4]
    3274:	f023 0303 	bic.w	r3, r3, #3
    3278:	1b9a      	subs	r2, r3, r6
    327a:	2a0f      	cmp	r2, #15
    327c:	f300 8190 	bgt.w	35a0 <_malloc_r+0x3a8>
    3280:	2a00      	cmp	r2, #0
    3282:	f8c7 e014 	str.w	lr, [r7, #20]
    3286:	f8c7 e010 	str.w	lr, [r7, #16]
    328a:	f280 809d 	bge.w	33c8 <_malloc_r+0x1d0>
    328e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
    3292:	f080 8161 	bcs.w	3558 <_malloc_r+0x360>
    3296:	08db      	lsrs	r3, r3, #3
    3298:	f103 0c01 	add.w	ip, r3, #1
    329c:	1099      	asrs	r1, r3, #2
    329e:	687a      	ldr	r2, [r7, #4]
    32a0:	f857 803c 	ldr.w	r8, [r7, ip, lsl #3]
    32a4:	f8c4 8008 	str.w	r8, [r4, #8]
    32a8:	2301      	movs	r3, #1
    32aa:	408b      	lsls	r3, r1
    32ac:	eb07 01cc 	add.w	r1, r7, ip, lsl #3
    32b0:	4313      	orrs	r3, r2
    32b2:	3908      	subs	r1, #8
    32b4:	60e1      	str	r1, [r4, #12]
    32b6:	607b      	str	r3, [r7, #4]
    32b8:	f847 403c 	str.w	r4, [r7, ip, lsl #3]
    32bc:	f8c8 400c 	str.w	r4, [r8, #12]
    32c0:	1082      	asrs	r2, r0, #2
    32c2:	2401      	movs	r4, #1
    32c4:	4094      	lsls	r4, r2
    32c6:	429c      	cmp	r4, r3
    32c8:	f200 808b 	bhi.w	33e2 <_malloc_r+0x1ea>
    32cc:	421c      	tst	r4, r3
    32ce:	d106      	bne.n	32de <_malloc_r+0xe6>
    32d0:	f020 0003 	bic.w	r0, r0, #3
    32d4:	0064      	lsls	r4, r4, #1
    32d6:	421c      	tst	r4, r3
    32d8:	f100 0004 	add.w	r0, r0, #4
    32dc:	d0fa      	beq.n	32d4 <_malloc_r+0xdc>
    32de:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
    32e2:	46cc      	mov	ip, r9
    32e4:	4680      	mov	r8, r0
    32e6:	f8dc 300c 	ldr.w	r3, [ip, #12]
    32ea:	459c      	cmp	ip, r3
    32ec:	d107      	bne.n	32fe <_malloc_r+0x106>
    32ee:	e16d      	b.n	35cc <_malloc_r+0x3d4>
    32f0:	2a00      	cmp	r2, #0
    32f2:	f280 817b 	bge.w	35ec <_malloc_r+0x3f4>
    32f6:	68db      	ldr	r3, [r3, #12]
    32f8:	459c      	cmp	ip, r3
    32fa:	f000 8167 	beq.w	35cc <_malloc_r+0x3d4>
    32fe:	6859      	ldr	r1, [r3, #4]
    3300:	f021 0103 	bic.w	r1, r1, #3
    3304:	1b8a      	subs	r2, r1, r6
    3306:	2a0f      	cmp	r2, #15
    3308:	ddf2      	ble.n	32f0 <_malloc_r+0xf8>
    330a:	f8d3 c00c 	ldr.w	ip, [r3, #12]
    330e:	f8d3 8008 	ldr.w	r8, [r3, #8]
    3312:	9300      	str	r3, [sp, #0]
    3314:	199c      	adds	r4, r3, r6
    3316:	4628      	mov	r0, r5
    3318:	f046 0601 	orr.w	r6, r6, #1
    331c:	f042 0501 	orr.w	r5, r2, #1
    3320:	605e      	str	r6, [r3, #4]
    3322:	f8c8 c00c 	str.w	ip, [r8, #12]
    3326:	f8cc 8008 	str.w	r8, [ip, #8]
    332a:	617c      	str	r4, [r7, #20]
    332c:	613c      	str	r4, [r7, #16]
    332e:	f8c4 e00c 	str.w	lr, [r4, #12]
    3332:	f8c4 e008 	str.w	lr, [r4, #8]
    3336:	6065      	str	r5, [r4, #4]
    3338:	505a      	str	r2, [r3, r1]
    333a:	f000 fb7d 	bl	3a38 <__malloc_unlock>
    333e:	9b00      	ldr	r3, [sp, #0]
    3340:	f103 0408 	add.w	r4, r3, #8
    3344:	e01e      	b.n	3384 <_malloc_r+0x18c>
    3346:	2910      	cmp	r1, #16
    3348:	d820      	bhi.n	338c <_malloc_r+0x194>
    334a:	f000 fb6f 	bl	3a2c <__malloc_lock>
    334e:	2610      	movs	r6, #16
    3350:	2318      	movs	r3, #24
    3352:	2002      	movs	r0, #2
    3354:	4f79      	ldr	r7, [pc, #484]	; (353c <_malloc_r+0x344>)
    3356:	443b      	add	r3, r7
    3358:	f1a3 0208 	sub.w	r2, r3, #8
    335c:	685c      	ldr	r4, [r3, #4]
    335e:	4294      	cmp	r4, r2
    3360:	f000 813d 	beq.w	35de <_malloc_r+0x3e6>
    3364:	6863      	ldr	r3, [r4, #4]
    3366:	68e1      	ldr	r1, [r4, #12]
    3368:	68a6      	ldr	r6, [r4, #8]
    336a:	f023 0303 	bic.w	r3, r3, #3
    336e:	4423      	add	r3, r4
    3370:	4628      	mov	r0, r5
    3372:	685a      	ldr	r2, [r3, #4]
    3374:	60f1      	str	r1, [r6, #12]
    3376:	f042 0201 	orr.w	r2, r2, #1
    337a:	608e      	str	r6, [r1, #8]
    337c:	605a      	str	r2, [r3, #4]
    337e:	f000 fb5b 	bl	3a38 <__malloc_unlock>
    3382:	3408      	adds	r4, #8
    3384:	4620      	mov	r0, r4
    3386:	b003      	add	sp, #12
    3388:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    338c:	2400      	movs	r4, #0
    338e:	230c      	movs	r3, #12
    3390:	4620      	mov	r0, r4
    3392:	602b      	str	r3, [r5, #0]
    3394:	b003      	add	sp, #12
    3396:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    339a:	2040      	movs	r0, #64	; 0x40
    339c:	f44f 7300 	mov.w	r3, #512	; 0x200
    33a0:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
    33a4:	e74a      	b.n	323c <_malloc_r+0x44>
    33a6:	4423      	add	r3, r4
    33a8:	68e1      	ldr	r1, [r4, #12]
    33aa:	685a      	ldr	r2, [r3, #4]
    33ac:	68a6      	ldr	r6, [r4, #8]
    33ae:	f042 0201 	orr.w	r2, r2, #1
    33b2:	60f1      	str	r1, [r6, #12]
    33b4:	4628      	mov	r0, r5
    33b6:	608e      	str	r6, [r1, #8]
    33b8:	605a      	str	r2, [r3, #4]
    33ba:	f000 fb3d 	bl	3a38 <__malloc_unlock>
    33be:	3408      	adds	r4, #8
    33c0:	4620      	mov	r0, r4
    33c2:	b003      	add	sp, #12
    33c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    33c8:	4423      	add	r3, r4
    33ca:	4628      	mov	r0, r5
    33cc:	685a      	ldr	r2, [r3, #4]
    33ce:	f042 0201 	orr.w	r2, r2, #1
    33d2:	605a      	str	r2, [r3, #4]
    33d4:	f000 fb30 	bl	3a38 <__malloc_unlock>
    33d8:	3408      	adds	r4, #8
    33da:	4620      	mov	r0, r4
    33dc:	b003      	add	sp, #12
    33de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    33e2:	68bc      	ldr	r4, [r7, #8]
    33e4:	6863      	ldr	r3, [r4, #4]
    33e6:	f023 0803 	bic.w	r8, r3, #3
    33ea:	45b0      	cmp	r8, r6
    33ec:	d304      	bcc.n	33f8 <_malloc_r+0x200>
    33ee:	eba8 0306 	sub.w	r3, r8, r6
    33f2:	2b0f      	cmp	r3, #15
    33f4:	f300 8085 	bgt.w	3502 <_malloc_r+0x30a>
    33f8:	f8df 9158 	ldr.w	r9, [pc, #344]	; 3554 <_malloc_r+0x35c>
    33fc:	4b50      	ldr	r3, [pc, #320]	; (3540 <_malloc_r+0x348>)
    33fe:	f8d9 2000 	ldr.w	r2, [r9]
    3402:	681b      	ldr	r3, [r3, #0]
    3404:	3201      	adds	r2, #1
    3406:	4433      	add	r3, r6
    3408:	eb04 0a08 	add.w	sl, r4, r8
    340c:	f000 8155 	beq.w	36ba <_malloc_r+0x4c2>
    3410:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
    3414:	330f      	adds	r3, #15
    3416:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
    341a:	f02b 0b0f 	bic.w	fp, fp, #15
    341e:	4659      	mov	r1, fp
    3420:	4628      	mov	r0, r5
    3422:	f000 fcb5 	bl	3d90 <_sbrk_r>
    3426:	1c41      	adds	r1, r0, #1
    3428:	4602      	mov	r2, r0
    342a:	f000 80fc 	beq.w	3626 <_malloc_r+0x42e>
    342e:	4582      	cmp	sl, r0
    3430:	f200 80f7 	bhi.w	3622 <_malloc_r+0x42a>
    3434:	4b43      	ldr	r3, [pc, #268]	; (3544 <_malloc_r+0x34c>)
    3436:	6819      	ldr	r1, [r3, #0]
    3438:	4459      	add	r1, fp
    343a:	6019      	str	r1, [r3, #0]
    343c:	f000 814d 	beq.w	36da <_malloc_r+0x4e2>
    3440:	f8d9 0000 	ldr.w	r0, [r9]
    3444:	3001      	adds	r0, #1
    3446:	bf1b      	ittet	ne
    3448:	eba2 0a0a 	subne.w	sl, r2, sl
    344c:	4451      	addne	r1, sl
    344e:	f8c9 2000 	streq.w	r2, [r9]
    3452:	6019      	strne	r1, [r3, #0]
    3454:	f012 0107 	ands.w	r1, r2, #7
    3458:	f000 8115 	beq.w	3686 <_malloc_r+0x48e>
    345c:	f1c1 0008 	rsb	r0, r1, #8
    3460:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
    3464:	4402      	add	r2, r0
    3466:	3108      	adds	r1, #8
    3468:	eb02 090b 	add.w	r9, r2, fp
    346c:	f3c9 090b 	ubfx	r9, r9, #0, #12
    3470:	eba1 0909 	sub.w	r9, r1, r9
    3474:	4649      	mov	r1, r9
    3476:	4628      	mov	r0, r5
    3478:	9301      	str	r3, [sp, #4]
    347a:	9200      	str	r2, [sp, #0]
    347c:	f000 fc88 	bl	3d90 <_sbrk_r>
    3480:	1c43      	adds	r3, r0, #1
    3482:	e89d 000c 	ldmia.w	sp, {r2, r3}
    3486:	f000 8143 	beq.w	3710 <_malloc_r+0x518>
    348a:	1a80      	subs	r0, r0, r2
    348c:	4448      	add	r0, r9
    348e:	f040 0001 	orr.w	r0, r0, #1
    3492:	6819      	ldr	r1, [r3, #0]
    3494:	60ba      	str	r2, [r7, #8]
    3496:	4449      	add	r1, r9
    3498:	42bc      	cmp	r4, r7
    349a:	6050      	str	r0, [r2, #4]
    349c:	6019      	str	r1, [r3, #0]
    349e:	d017      	beq.n	34d0 <_malloc_r+0x2d8>
    34a0:	f1b8 0f0f 	cmp.w	r8, #15
    34a4:	f240 80fb 	bls.w	369e <_malloc_r+0x4a6>
    34a8:	6860      	ldr	r0, [r4, #4]
    34aa:	f1a8 020c 	sub.w	r2, r8, #12
    34ae:	f022 0207 	bic.w	r2, r2, #7
    34b2:	eb04 0e02 	add.w	lr, r4, r2
    34b6:	f000 0001 	and.w	r0, r0, #1
    34ba:	f04f 0c05 	mov.w	ip, #5
    34be:	4310      	orrs	r0, r2
    34c0:	2a0f      	cmp	r2, #15
    34c2:	6060      	str	r0, [r4, #4]
    34c4:	f8ce c004 	str.w	ip, [lr, #4]
    34c8:	f8ce c008 	str.w	ip, [lr, #8]
    34cc:	f200 8117 	bhi.w	36fe <_malloc_r+0x506>
    34d0:	4b1d      	ldr	r3, [pc, #116]	; (3548 <_malloc_r+0x350>)
    34d2:	68bc      	ldr	r4, [r7, #8]
    34d4:	681a      	ldr	r2, [r3, #0]
    34d6:	4291      	cmp	r1, r2
    34d8:	bf88      	it	hi
    34da:	6019      	strhi	r1, [r3, #0]
    34dc:	4b1b      	ldr	r3, [pc, #108]	; (354c <_malloc_r+0x354>)
    34de:	681a      	ldr	r2, [r3, #0]
    34e0:	4291      	cmp	r1, r2
    34e2:	6862      	ldr	r2, [r4, #4]
    34e4:	bf88      	it	hi
    34e6:	6019      	strhi	r1, [r3, #0]
    34e8:	f022 0203 	bic.w	r2, r2, #3
    34ec:	4296      	cmp	r6, r2
    34ee:	eba2 0306 	sub.w	r3, r2, r6
    34f2:	d801      	bhi.n	34f8 <_malloc_r+0x300>
    34f4:	2b0f      	cmp	r3, #15
    34f6:	dc04      	bgt.n	3502 <_malloc_r+0x30a>
    34f8:	4628      	mov	r0, r5
    34fa:	f000 fa9d 	bl	3a38 <__malloc_unlock>
    34fe:	2400      	movs	r4, #0
    3500:	e740      	b.n	3384 <_malloc_r+0x18c>
    3502:	19a2      	adds	r2, r4, r6
    3504:	f043 0301 	orr.w	r3, r3, #1
    3508:	f046 0601 	orr.w	r6, r6, #1
    350c:	6066      	str	r6, [r4, #4]
    350e:	4628      	mov	r0, r5
    3510:	60ba      	str	r2, [r7, #8]
    3512:	6053      	str	r3, [r2, #4]
    3514:	f000 fa90 	bl	3a38 <__malloc_unlock>
    3518:	3408      	adds	r4, #8
    351a:	4620      	mov	r0, r4
    351c:	b003      	add	sp, #12
    351e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    3522:	2b14      	cmp	r3, #20
    3524:	d971      	bls.n	360a <_malloc_r+0x412>
    3526:	2b54      	cmp	r3, #84	; 0x54
    3528:	f200 80a3 	bhi.w	3672 <_malloc_r+0x47a>
    352c:	0b33      	lsrs	r3, r6, #12
    352e:	f103 006f 	add.w	r0, r3, #111	; 0x6f
    3532:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
    3536:	00c3      	lsls	r3, r0, #3
    3538:	e680      	b.n	323c <_malloc_r+0x44>
    353a:	bf00      	nop
    353c:	200005d0 	.word	0x200005d0
    3540:	20000a38 	.word	0x20000a38
    3544:	20000a08 	.word	0x20000a08
    3548:	20000a30 	.word	0x20000a30
    354c:	20000a34 	.word	0x20000a34
    3550:	200005d8 	.word	0x200005d8
    3554:	200009d8 	.word	0x200009d8
    3558:	0a5a      	lsrs	r2, r3, #9
    355a:	2a04      	cmp	r2, #4
    355c:	d95b      	bls.n	3616 <_malloc_r+0x41e>
    355e:	2a14      	cmp	r2, #20
    3560:	f200 80ae 	bhi.w	36c0 <_malloc_r+0x4c8>
    3564:	f102 015c 	add.w	r1, r2, #92	; 0x5c
    3568:	00c9      	lsls	r1, r1, #3
    356a:	325b      	adds	r2, #91	; 0x5b
    356c:	eb07 0c01 	add.w	ip, r7, r1
    3570:	5879      	ldr	r1, [r7, r1]
    3572:	f1ac 0c08 	sub.w	ip, ip, #8
    3576:	458c      	cmp	ip, r1
    3578:	f000 8088 	beq.w	368c <_malloc_r+0x494>
    357c:	684a      	ldr	r2, [r1, #4]
    357e:	f022 0203 	bic.w	r2, r2, #3
    3582:	4293      	cmp	r3, r2
    3584:	d273      	bcs.n	366e <_malloc_r+0x476>
    3586:	6889      	ldr	r1, [r1, #8]
    3588:	458c      	cmp	ip, r1
    358a:	d1f7      	bne.n	357c <_malloc_r+0x384>
    358c:	f8dc 200c 	ldr.w	r2, [ip, #12]
    3590:	687b      	ldr	r3, [r7, #4]
    3592:	60e2      	str	r2, [r4, #12]
    3594:	f8c4 c008 	str.w	ip, [r4, #8]
    3598:	6094      	str	r4, [r2, #8]
    359a:	f8cc 400c 	str.w	r4, [ip, #12]
    359e:	e68f      	b.n	32c0 <_malloc_r+0xc8>
    35a0:	19a1      	adds	r1, r4, r6
    35a2:	f046 0c01 	orr.w	ip, r6, #1
    35a6:	f042 0601 	orr.w	r6, r2, #1
    35aa:	f8c4 c004 	str.w	ip, [r4, #4]
    35ae:	4628      	mov	r0, r5
    35b0:	6179      	str	r1, [r7, #20]
    35b2:	6139      	str	r1, [r7, #16]
    35b4:	f8c1 e00c 	str.w	lr, [r1, #12]
    35b8:	f8c1 e008 	str.w	lr, [r1, #8]
    35bc:	604e      	str	r6, [r1, #4]
    35be:	50e2      	str	r2, [r4, r3]
    35c0:	f000 fa3a 	bl	3a38 <__malloc_unlock>
    35c4:	3408      	adds	r4, #8
    35c6:	e6dd      	b.n	3384 <_malloc_r+0x18c>
    35c8:	687b      	ldr	r3, [r7, #4]
    35ca:	e679      	b.n	32c0 <_malloc_r+0xc8>
    35cc:	f108 0801 	add.w	r8, r8, #1
    35d0:	f018 0f03 	tst.w	r8, #3
    35d4:	f10c 0c08 	add.w	ip, ip, #8
    35d8:	f47f ae85 	bne.w	32e6 <_malloc_r+0xee>
    35dc:	e02d      	b.n	363a <_malloc_r+0x442>
    35de:	68dc      	ldr	r4, [r3, #12]
    35e0:	42a3      	cmp	r3, r4
    35e2:	bf08      	it	eq
    35e4:	3002      	addeq	r0, #2
    35e6:	f43f ae3e 	beq.w	3266 <_malloc_r+0x6e>
    35ea:	e6bb      	b.n	3364 <_malloc_r+0x16c>
    35ec:	4419      	add	r1, r3
    35ee:	461c      	mov	r4, r3
    35f0:	684a      	ldr	r2, [r1, #4]
    35f2:	68db      	ldr	r3, [r3, #12]
    35f4:	f854 6f08 	ldr.w	r6, [r4, #8]!
    35f8:	f042 0201 	orr.w	r2, r2, #1
    35fc:	604a      	str	r2, [r1, #4]
    35fe:	4628      	mov	r0, r5
    3600:	60f3      	str	r3, [r6, #12]
    3602:	609e      	str	r6, [r3, #8]
    3604:	f000 fa18 	bl	3a38 <__malloc_unlock>
    3608:	e6bc      	b.n	3384 <_malloc_r+0x18c>
    360a:	f103 005c 	add.w	r0, r3, #92	; 0x5c
    360e:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
    3612:	00c3      	lsls	r3, r0, #3
    3614:	e612      	b.n	323c <_malloc_r+0x44>
    3616:	099a      	lsrs	r2, r3, #6
    3618:	f102 0139 	add.w	r1, r2, #57	; 0x39
    361c:	00c9      	lsls	r1, r1, #3
    361e:	3238      	adds	r2, #56	; 0x38
    3620:	e7a4      	b.n	356c <_malloc_r+0x374>
    3622:	42bc      	cmp	r4, r7
    3624:	d054      	beq.n	36d0 <_malloc_r+0x4d8>
    3626:	68bc      	ldr	r4, [r7, #8]
    3628:	6862      	ldr	r2, [r4, #4]
    362a:	f022 0203 	bic.w	r2, r2, #3
    362e:	e75d      	b.n	34ec <_malloc_r+0x2f4>
    3630:	f859 3908 	ldr.w	r3, [r9], #-8
    3634:	4599      	cmp	r9, r3
    3636:	f040 8086 	bne.w	3746 <_malloc_r+0x54e>
    363a:	f010 0f03 	tst.w	r0, #3
    363e:	f100 30ff 	add.w	r0, r0, #4294967295
    3642:	d1f5      	bne.n	3630 <_malloc_r+0x438>
    3644:	687b      	ldr	r3, [r7, #4]
    3646:	ea23 0304 	bic.w	r3, r3, r4
    364a:	607b      	str	r3, [r7, #4]
    364c:	0064      	lsls	r4, r4, #1
    364e:	429c      	cmp	r4, r3
    3650:	f63f aec7 	bhi.w	33e2 <_malloc_r+0x1ea>
    3654:	2c00      	cmp	r4, #0
    3656:	f43f aec4 	beq.w	33e2 <_malloc_r+0x1ea>
    365a:	421c      	tst	r4, r3
    365c:	4640      	mov	r0, r8
    365e:	f47f ae3e 	bne.w	32de <_malloc_r+0xe6>
    3662:	0064      	lsls	r4, r4, #1
    3664:	421c      	tst	r4, r3
    3666:	f100 0004 	add.w	r0, r0, #4
    366a:	d0fa      	beq.n	3662 <_malloc_r+0x46a>
    366c:	e637      	b.n	32de <_malloc_r+0xe6>
    366e:	468c      	mov	ip, r1
    3670:	e78c      	b.n	358c <_malloc_r+0x394>
    3672:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
    3676:	d815      	bhi.n	36a4 <_malloc_r+0x4ac>
    3678:	0bf3      	lsrs	r3, r6, #15
    367a:	f103 0078 	add.w	r0, r3, #120	; 0x78
    367e:	f103 0e77 	add.w	lr, r3, #119	; 0x77
    3682:	00c3      	lsls	r3, r0, #3
    3684:	e5da      	b.n	323c <_malloc_r+0x44>
    3686:	f44f 5180 	mov.w	r1, #4096	; 0x1000
    368a:	e6ed      	b.n	3468 <_malloc_r+0x270>
    368c:	687b      	ldr	r3, [r7, #4]
    368e:	1092      	asrs	r2, r2, #2
    3690:	2101      	movs	r1, #1
    3692:	fa01 f202 	lsl.w	r2, r1, r2
    3696:	4313      	orrs	r3, r2
    3698:	607b      	str	r3, [r7, #4]
    369a:	4662      	mov	r2, ip
    369c:	e779      	b.n	3592 <_malloc_r+0x39a>
    369e:	2301      	movs	r3, #1
    36a0:	6053      	str	r3, [r2, #4]
    36a2:	e729      	b.n	34f8 <_malloc_r+0x300>
    36a4:	f240 5254 	movw	r2, #1364	; 0x554
    36a8:	4293      	cmp	r3, r2
    36aa:	d822      	bhi.n	36f2 <_malloc_r+0x4fa>
    36ac:	0cb3      	lsrs	r3, r6, #18
    36ae:	f103 007d 	add.w	r0, r3, #125	; 0x7d
    36b2:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
    36b6:	00c3      	lsls	r3, r0, #3
    36b8:	e5c0      	b.n	323c <_malloc_r+0x44>
    36ba:	f103 0b10 	add.w	fp, r3, #16
    36be:	e6ae      	b.n	341e <_malloc_r+0x226>
    36c0:	2a54      	cmp	r2, #84	; 0x54
    36c2:	d829      	bhi.n	3718 <_malloc_r+0x520>
    36c4:	0b1a      	lsrs	r2, r3, #12
    36c6:	f102 016f 	add.w	r1, r2, #111	; 0x6f
    36ca:	00c9      	lsls	r1, r1, #3
    36cc:	326e      	adds	r2, #110	; 0x6e
    36ce:	e74d      	b.n	356c <_malloc_r+0x374>
    36d0:	4b20      	ldr	r3, [pc, #128]	; (3754 <_malloc_r+0x55c>)
    36d2:	6819      	ldr	r1, [r3, #0]
    36d4:	4459      	add	r1, fp
    36d6:	6019      	str	r1, [r3, #0]
    36d8:	e6b2      	b.n	3440 <_malloc_r+0x248>
    36da:	f3ca 000b 	ubfx	r0, sl, #0, #12
    36de:	2800      	cmp	r0, #0
    36e0:	f47f aeae 	bne.w	3440 <_malloc_r+0x248>
    36e4:	eb08 030b 	add.w	r3, r8, fp
    36e8:	68ba      	ldr	r2, [r7, #8]
    36ea:	f043 0301 	orr.w	r3, r3, #1
    36ee:	6053      	str	r3, [r2, #4]
    36f0:	e6ee      	b.n	34d0 <_malloc_r+0x2d8>
    36f2:	207f      	movs	r0, #127	; 0x7f
    36f4:	f44f 737e 	mov.w	r3, #1016	; 0x3f8
    36f8:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
    36fc:	e59e      	b.n	323c <_malloc_r+0x44>
    36fe:	f104 0108 	add.w	r1, r4, #8
    3702:	4628      	mov	r0, r5
    3704:	9300      	str	r3, [sp, #0]
    3706:	f7ff fa59 	bl	2bbc <_free_r>
    370a:	9b00      	ldr	r3, [sp, #0]
    370c:	6819      	ldr	r1, [r3, #0]
    370e:	e6df      	b.n	34d0 <_malloc_r+0x2d8>
    3710:	2001      	movs	r0, #1
    3712:	f04f 0900 	mov.w	r9, #0
    3716:	e6bc      	b.n	3492 <_malloc_r+0x29a>
    3718:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
    371c:	d805      	bhi.n	372a <_malloc_r+0x532>
    371e:	0bda      	lsrs	r2, r3, #15
    3720:	f102 0178 	add.w	r1, r2, #120	; 0x78
    3724:	00c9      	lsls	r1, r1, #3
    3726:	3277      	adds	r2, #119	; 0x77
    3728:	e720      	b.n	356c <_malloc_r+0x374>
    372a:	f240 5154 	movw	r1, #1364	; 0x554
    372e:	428a      	cmp	r2, r1
    3730:	d805      	bhi.n	373e <_malloc_r+0x546>
    3732:	0c9a      	lsrs	r2, r3, #18
    3734:	f102 017d 	add.w	r1, r2, #125	; 0x7d
    3738:	00c9      	lsls	r1, r1, #3
    373a:	327c      	adds	r2, #124	; 0x7c
    373c:	e716      	b.n	356c <_malloc_r+0x374>
    373e:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
    3742:	227e      	movs	r2, #126	; 0x7e
    3744:	e712      	b.n	356c <_malloc_r+0x374>
    3746:	687b      	ldr	r3, [r7, #4]
    3748:	e780      	b.n	364c <_malloc_r+0x454>
    374a:	08f0      	lsrs	r0, r6, #3
    374c:	f106 0308 	add.w	r3, r6, #8
    3750:	e600      	b.n	3354 <_malloc_r+0x15c>
    3752:	bf00      	nop
    3754:	20000a08 	.word	0x20000a08

00003758 <__ascii_mbtowc>:
    3758:	b082      	sub	sp, #8
    375a:	b149      	cbz	r1, 3770 <__ascii_mbtowc+0x18>
    375c:	b15a      	cbz	r2, 3776 <__ascii_mbtowc+0x1e>
    375e:	b16b      	cbz	r3, 377c <__ascii_mbtowc+0x24>
    3760:	7813      	ldrb	r3, [r2, #0]
    3762:	600b      	str	r3, [r1, #0]
    3764:	7812      	ldrb	r2, [r2, #0]
    3766:	1c10      	adds	r0, r2, #0
    3768:	bf18      	it	ne
    376a:	2001      	movne	r0, #1
    376c:	b002      	add	sp, #8
    376e:	4770      	bx	lr
    3770:	a901      	add	r1, sp, #4
    3772:	2a00      	cmp	r2, #0
    3774:	d1f3      	bne.n	375e <__ascii_mbtowc+0x6>
    3776:	4610      	mov	r0, r2
    3778:	b002      	add	sp, #8
    377a:	4770      	bx	lr
    377c:	f06f 0001 	mvn.w	r0, #1
    3780:	e7f4      	b.n	376c <__ascii_mbtowc+0x14>
    3782:	bf00      	nop
	...

00003790 <memchr>:
    3790:	f001 01ff 	and.w	r1, r1, #255	; 0xff
    3794:	2a10      	cmp	r2, #16
    3796:	db2b      	blt.n	37f0 <memchr+0x60>
    3798:	f010 0f07 	tst.w	r0, #7
    379c:	d008      	beq.n	37b0 <memchr+0x20>
    379e:	f810 3b01 	ldrb.w	r3, [r0], #1
    37a2:	3a01      	subs	r2, #1
    37a4:	428b      	cmp	r3, r1
    37a6:	d02d      	beq.n	3804 <memchr+0x74>
    37a8:	f010 0f07 	tst.w	r0, #7
    37ac:	b342      	cbz	r2, 3800 <memchr+0x70>
    37ae:	d1f6      	bne.n	379e <memchr+0xe>
    37b0:	b4f0      	push	{r4, r5, r6, r7}
    37b2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
    37b6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
    37ba:	f022 0407 	bic.w	r4, r2, #7
    37be:	f07f 0700 	mvns.w	r7, #0
    37c2:	2300      	movs	r3, #0
    37c4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
    37c8:	3c08      	subs	r4, #8
    37ca:	ea85 0501 	eor.w	r5, r5, r1
    37ce:	ea86 0601 	eor.w	r6, r6, r1
    37d2:	fa85 f547 	uadd8	r5, r5, r7
    37d6:	faa3 f587 	sel	r5, r3, r7
    37da:	fa86 f647 	uadd8	r6, r6, r7
    37de:	faa5 f687 	sel	r6, r5, r7
    37e2:	b98e      	cbnz	r6, 3808 <memchr+0x78>
    37e4:	d1ee      	bne.n	37c4 <memchr+0x34>
    37e6:	bcf0      	pop	{r4, r5, r6, r7}
    37e8:	f001 01ff 	and.w	r1, r1, #255	; 0xff
    37ec:	f002 0207 	and.w	r2, r2, #7
    37f0:	b132      	cbz	r2, 3800 <memchr+0x70>
    37f2:	f810 3b01 	ldrb.w	r3, [r0], #1
    37f6:	3a01      	subs	r2, #1
    37f8:	ea83 0301 	eor.w	r3, r3, r1
    37fc:	b113      	cbz	r3, 3804 <memchr+0x74>
    37fe:	d1f8      	bne.n	37f2 <memchr+0x62>
    3800:	2000      	movs	r0, #0
    3802:	4770      	bx	lr
    3804:	3801      	subs	r0, #1
    3806:	4770      	bx	lr
    3808:	2d00      	cmp	r5, #0
    380a:	bf06      	itte	eq
    380c:	4635      	moveq	r5, r6
    380e:	3803      	subeq	r0, #3
    3810:	3807      	subne	r0, #7
    3812:	f015 0f01 	tst.w	r5, #1
    3816:	d107      	bne.n	3828 <memchr+0x98>
    3818:	3001      	adds	r0, #1
    381a:	f415 7f80 	tst.w	r5, #256	; 0x100
    381e:	bf02      	ittt	eq
    3820:	3001      	addeq	r0, #1
    3822:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
    3826:	3001      	addeq	r0, #1
    3828:	bcf0      	pop	{r4, r5, r6, r7}
    382a:	3801      	subs	r0, #1
    382c:	4770      	bx	lr
    382e:	bf00      	nop

00003830 <memcpy>:
    3830:	4684      	mov	ip, r0
    3832:	ea41 0300 	orr.w	r3, r1, r0
    3836:	f013 0303 	ands.w	r3, r3, #3
    383a:	d16d      	bne.n	3918 <memcpy+0xe8>
    383c:	3a40      	subs	r2, #64	; 0x40
    383e:	d341      	bcc.n	38c4 <memcpy+0x94>
    3840:	f851 3b04 	ldr.w	r3, [r1], #4
    3844:	f840 3b04 	str.w	r3, [r0], #4
    3848:	f851 3b04 	ldr.w	r3, [r1], #4
    384c:	f840 3b04 	str.w	r3, [r0], #4
    3850:	f851 3b04 	ldr.w	r3, [r1], #4
    3854:	f840 3b04 	str.w	r3, [r0], #4
    3858:	f851 3b04 	ldr.w	r3, [r1], #4
    385c:	f840 3b04 	str.w	r3, [r0], #4
    3860:	f851 3b04 	ldr.w	r3, [r1], #4
    3864:	f840 3b04 	str.w	r3, [r0], #4
    3868:	f851 3b04 	ldr.w	r3, [r1], #4
    386c:	f840 3b04 	str.w	r3, [r0], #4
    3870:	f851 3b04 	ldr.w	r3, [r1], #4
    3874:	f840 3b04 	str.w	r3, [r0], #4
    3878:	f851 3b04 	ldr.w	r3, [r1], #4
    387c:	f840 3b04 	str.w	r3, [r0], #4
    3880:	f851 3b04 	ldr.w	r3, [r1], #4
    3884:	f840 3b04 	str.w	r3, [r0], #4
    3888:	f851 3b04 	ldr.w	r3, [r1], #4
    388c:	f840 3b04 	str.w	r3, [r0], #4
    3890:	f851 3b04 	ldr.w	r3, [r1], #4
    3894:	f840 3b04 	str.w	r3, [r0], #4
    3898:	f851 3b04 	ldr.w	r3, [r1], #4
    389c:	f840 3b04 	str.w	r3, [r0], #4
    38a0:	f851 3b04 	ldr.w	r3, [r1], #4
    38a4:	f840 3b04 	str.w	r3, [r0], #4
    38a8:	f851 3b04 	ldr.w	r3, [r1], #4
    38ac:	f840 3b04 	str.w	r3, [r0], #4
    38b0:	f851 3b04 	ldr.w	r3, [r1], #4
    38b4:	f840 3b04 	str.w	r3, [r0], #4
    38b8:	f851 3b04 	ldr.w	r3, [r1], #4
    38bc:	f840 3b04 	str.w	r3, [r0], #4
    38c0:	3a40      	subs	r2, #64	; 0x40
    38c2:	d2bd      	bcs.n	3840 <memcpy+0x10>
    38c4:	3230      	adds	r2, #48	; 0x30
    38c6:	d311      	bcc.n	38ec <memcpy+0xbc>
    38c8:	f851 3b04 	ldr.w	r3, [r1], #4
    38cc:	f840 3b04 	str.w	r3, [r0], #4
    38d0:	f851 3b04 	ldr.w	r3, [r1], #4
    38d4:	f840 3b04 	str.w	r3, [r0], #4
    38d8:	f851 3b04 	ldr.w	r3, [r1], #4
    38dc:	f840 3b04 	str.w	r3, [r0], #4
    38e0:	f851 3b04 	ldr.w	r3, [r1], #4
    38e4:	f840 3b04 	str.w	r3, [r0], #4
    38e8:	3a10      	subs	r2, #16
    38ea:	d2ed      	bcs.n	38c8 <memcpy+0x98>
    38ec:	320c      	adds	r2, #12
    38ee:	d305      	bcc.n	38fc <memcpy+0xcc>
    38f0:	f851 3b04 	ldr.w	r3, [r1], #4
    38f4:	f840 3b04 	str.w	r3, [r0], #4
    38f8:	3a04      	subs	r2, #4
    38fa:	d2f9      	bcs.n	38f0 <memcpy+0xc0>
    38fc:	3204      	adds	r2, #4
    38fe:	d008      	beq.n	3912 <memcpy+0xe2>
    3900:	07d2      	lsls	r2, r2, #31
    3902:	bf1c      	itt	ne
    3904:	f811 3b01 	ldrbne.w	r3, [r1], #1
    3908:	f800 3b01 	strbne.w	r3, [r0], #1
    390c:	d301      	bcc.n	3912 <memcpy+0xe2>
    390e:	880b      	ldrh	r3, [r1, #0]
    3910:	8003      	strh	r3, [r0, #0]
    3912:	4660      	mov	r0, ip
    3914:	4770      	bx	lr
    3916:	bf00      	nop
    3918:	2a08      	cmp	r2, #8
    391a:	d313      	bcc.n	3944 <memcpy+0x114>
    391c:	078b      	lsls	r3, r1, #30
    391e:	d08d      	beq.n	383c <memcpy+0xc>
    3920:	f010 0303 	ands.w	r3, r0, #3
    3924:	d08a      	beq.n	383c <memcpy+0xc>
    3926:	f1c3 0304 	rsb	r3, r3, #4
    392a:	1ad2      	subs	r2, r2, r3
    392c:	07db      	lsls	r3, r3, #31
    392e:	bf1c      	itt	ne
    3930:	f811 3b01 	ldrbne.w	r3, [r1], #1
    3934:	f800 3b01 	strbne.w	r3, [r0], #1
    3938:	d380      	bcc.n	383c <memcpy+0xc>
    393a:	f831 3b02 	ldrh.w	r3, [r1], #2
    393e:	f820 3b02 	strh.w	r3, [r0], #2
    3942:	e77b      	b.n	383c <memcpy+0xc>
    3944:	3a04      	subs	r2, #4
    3946:	d3d9      	bcc.n	38fc <memcpy+0xcc>
    3948:	3a01      	subs	r2, #1
    394a:	f811 3b01 	ldrb.w	r3, [r1], #1
    394e:	f800 3b01 	strb.w	r3, [r0], #1
    3952:	d2f9      	bcs.n	3948 <memcpy+0x118>
    3954:	780b      	ldrb	r3, [r1, #0]
    3956:	7003      	strb	r3, [r0, #0]
    3958:	784b      	ldrb	r3, [r1, #1]
    395a:	7043      	strb	r3, [r0, #1]
    395c:	788b      	ldrb	r3, [r1, #2]
    395e:	7083      	strb	r3, [r0, #2]
    3960:	4660      	mov	r0, ip
    3962:	4770      	bx	lr

00003964 <memmove>:
    3964:	4288      	cmp	r0, r1
    3966:	b5f0      	push	{r4, r5, r6, r7, lr}
    3968:	d90d      	bls.n	3986 <memmove+0x22>
    396a:	188b      	adds	r3, r1, r2
    396c:	4298      	cmp	r0, r3
    396e:	d20a      	bcs.n	3986 <memmove+0x22>
    3970:	1884      	adds	r4, r0, r2
    3972:	2a00      	cmp	r2, #0
    3974:	d051      	beq.n	3a1a <memmove+0xb6>
    3976:	4622      	mov	r2, r4
    3978:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
    397c:	f802 4d01 	strb.w	r4, [r2, #-1]!
    3980:	4299      	cmp	r1, r3
    3982:	d1f9      	bne.n	3978 <memmove+0x14>
    3984:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3986:	2a0f      	cmp	r2, #15
    3988:	d948      	bls.n	3a1c <memmove+0xb8>
    398a:	ea41 0300 	orr.w	r3, r1, r0
    398e:	079b      	lsls	r3, r3, #30
    3990:	d146      	bne.n	3a20 <memmove+0xbc>
    3992:	f100 0410 	add.w	r4, r0, #16
    3996:	f101 0310 	add.w	r3, r1, #16
    399a:	4615      	mov	r5, r2
    399c:	f853 6c10 	ldr.w	r6, [r3, #-16]
    39a0:	f844 6c10 	str.w	r6, [r4, #-16]
    39a4:	f853 6c0c 	ldr.w	r6, [r3, #-12]
    39a8:	f844 6c0c 	str.w	r6, [r4, #-12]
    39ac:	f853 6c08 	ldr.w	r6, [r3, #-8]
    39b0:	f844 6c08 	str.w	r6, [r4, #-8]
    39b4:	3d10      	subs	r5, #16
    39b6:	f853 6c04 	ldr.w	r6, [r3, #-4]
    39ba:	f844 6c04 	str.w	r6, [r4, #-4]
    39be:	2d0f      	cmp	r5, #15
    39c0:	f103 0310 	add.w	r3, r3, #16
    39c4:	f104 0410 	add.w	r4, r4, #16
    39c8:	d8e8      	bhi.n	399c <memmove+0x38>
    39ca:	f1a2 0310 	sub.w	r3, r2, #16
    39ce:	f023 030f 	bic.w	r3, r3, #15
    39d2:	f002 0e0f 	and.w	lr, r2, #15
    39d6:	3310      	adds	r3, #16
    39d8:	f1be 0f03 	cmp.w	lr, #3
    39dc:	4419      	add	r1, r3
    39de:	4403      	add	r3, r0
    39e0:	d921      	bls.n	3a26 <memmove+0xc2>
    39e2:	1f1e      	subs	r6, r3, #4
    39e4:	460d      	mov	r5, r1
    39e6:	4674      	mov	r4, lr
    39e8:	3c04      	subs	r4, #4
    39ea:	f855 7b04 	ldr.w	r7, [r5], #4
    39ee:	f846 7f04 	str.w	r7, [r6, #4]!
    39f2:	2c03      	cmp	r4, #3
    39f4:	d8f8      	bhi.n	39e8 <memmove+0x84>
    39f6:	f1ae 0404 	sub.w	r4, lr, #4
    39fa:	f024 0403 	bic.w	r4, r4, #3
    39fe:	3404      	adds	r4, #4
    3a00:	4421      	add	r1, r4
    3a02:	4423      	add	r3, r4
    3a04:	f002 0203 	and.w	r2, r2, #3
    3a08:	b162      	cbz	r2, 3a24 <memmove+0xc0>
    3a0a:	3b01      	subs	r3, #1
    3a0c:	440a      	add	r2, r1
    3a0e:	f811 4b01 	ldrb.w	r4, [r1], #1
    3a12:	f803 4f01 	strb.w	r4, [r3, #1]!
    3a16:	428a      	cmp	r2, r1
    3a18:	d1f9      	bne.n	3a0e <memmove+0xaa>
    3a1a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3a1c:	4603      	mov	r3, r0
    3a1e:	e7f3      	b.n	3a08 <memmove+0xa4>
    3a20:	4603      	mov	r3, r0
    3a22:	e7f2      	b.n	3a0a <memmove+0xa6>
    3a24:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3a26:	4672      	mov	r2, lr
    3a28:	e7ee      	b.n	3a08 <memmove+0xa4>
    3a2a:	bf00      	nop

00003a2c <__malloc_lock>:
    3a2c:	4801      	ldr	r0, [pc, #4]	; (3a34 <__malloc_lock+0x8>)
    3a2e:	f7ff bb5f 	b.w	30f0 <__retarget_lock_acquire_recursive>
    3a32:	bf00      	nop
    3a34:	20000a58 	.word	0x20000a58

00003a38 <__malloc_unlock>:
    3a38:	4801      	ldr	r0, [pc, #4]	; (3a40 <__malloc_unlock+0x8>)
    3a3a:	f7ff bb5b 	b.w	30f4 <__retarget_lock_release_recursive>
    3a3e:	bf00      	nop
    3a40:	20000a58 	.word	0x20000a58

00003a44 <_realloc_r>:
    3a44:	2900      	cmp	r1, #0
    3a46:	f000 8095 	beq.w	3b74 <_realloc_r+0x130>
    3a4a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
    3a4e:	460d      	mov	r5, r1
    3a50:	4616      	mov	r6, r2
    3a52:	b083      	sub	sp, #12
    3a54:	4680      	mov	r8, r0
    3a56:	f106 070b 	add.w	r7, r6, #11
    3a5a:	f7ff ffe7 	bl	3a2c <__malloc_lock>
    3a5e:	f855 ec04 	ldr.w	lr, [r5, #-4]
    3a62:	2f16      	cmp	r7, #22
    3a64:	f02e 0403 	bic.w	r4, lr, #3
    3a68:	f1a5 0908 	sub.w	r9, r5, #8
    3a6c:	d83c      	bhi.n	3ae8 <_realloc_r+0xa4>
    3a6e:	2210      	movs	r2, #16
    3a70:	4617      	mov	r7, r2
    3a72:	42be      	cmp	r6, r7
    3a74:	d83d      	bhi.n	3af2 <_realloc_r+0xae>
    3a76:	4294      	cmp	r4, r2
    3a78:	da43      	bge.n	3b02 <_realloc_r+0xbe>
    3a7a:	4bc4      	ldr	r3, [pc, #784]	; (3d8c <_realloc_r+0x348>)
    3a7c:	6899      	ldr	r1, [r3, #8]
    3a7e:	eb09 0004 	add.w	r0, r9, r4
    3a82:	4288      	cmp	r0, r1
    3a84:	f000 80b4 	beq.w	3bf0 <_realloc_r+0x1ac>
    3a88:	6843      	ldr	r3, [r0, #4]
    3a8a:	f023 0101 	bic.w	r1, r3, #1
    3a8e:	4401      	add	r1, r0
    3a90:	6849      	ldr	r1, [r1, #4]
    3a92:	07c9      	lsls	r1, r1, #31
    3a94:	d54c      	bpl.n	3b30 <_realloc_r+0xec>
    3a96:	f01e 0f01 	tst.w	lr, #1
    3a9a:	f000 809b 	beq.w	3bd4 <_realloc_r+0x190>
    3a9e:	4631      	mov	r1, r6
    3aa0:	4640      	mov	r0, r8
    3aa2:	f7ff fba9 	bl	31f8 <_malloc_r>
    3aa6:	4606      	mov	r6, r0
    3aa8:	2800      	cmp	r0, #0
    3aaa:	d03a      	beq.n	3b22 <_realloc_r+0xde>
    3aac:	f855 3c04 	ldr.w	r3, [r5, #-4]
    3ab0:	f023 0301 	bic.w	r3, r3, #1
    3ab4:	444b      	add	r3, r9
    3ab6:	f1a0 0208 	sub.w	r2, r0, #8
    3aba:	429a      	cmp	r2, r3
    3abc:	f000 8121 	beq.w	3d02 <_realloc_r+0x2be>
    3ac0:	1f22      	subs	r2, r4, #4
    3ac2:	2a24      	cmp	r2, #36	; 0x24
    3ac4:	f200 8107 	bhi.w	3cd6 <_realloc_r+0x292>
    3ac8:	2a13      	cmp	r2, #19
    3aca:	f200 80db 	bhi.w	3c84 <_realloc_r+0x240>
    3ace:	4603      	mov	r3, r0
    3ad0:	462a      	mov	r2, r5
    3ad2:	6811      	ldr	r1, [r2, #0]
    3ad4:	6019      	str	r1, [r3, #0]
    3ad6:	6851      	ldr	r1, [r2, #4]
    3ad8:	6059      	str	r1, [r3, #4]
    3ada:	6892      	ldr	r2, [r2, #8]
    3adc:	609a      	str	r2, [r3, #8]
    3ade:	4629      	mov	r1, r5
    3ae0:	4640      	mov	r0, r8
    3ae2:	f7ff f86b 	bl	2bbc <_free_r>
    3ae6:	e01c      	b.n	3b22 <_realloc_r+0xde>
    3ae8:	f027 0707 	bic.w	r7, r7, #7
    3aec:	2f00      	cmp	r7, #0
    3aee:	463a      	mov	r2, r7
    3af0:	dabf      	bge.n	3a72 <_realloc_r+0x2e>
    3af2:	2600      	movs	r6, #0
    3af4:	230c      	movs	r3, #12
    3af6:	4630      	mov	r0, r6
    3af8:	f8c8 3000 	str.w	r3, [r8]
    3afc:	b003      	add	sp, #12
    3afe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    3b02:	462e      	mov	r6, r5
    3b04:	1be3      	subs	r3, r4, r7
    3b06:	2b0f      	cmp	r3, #15
    3b08:	d81e      	bhi.n	3b48 <_realloc_r+0x104>
    3b0a:	f8d9 3004 	ldr.w	r3, [r9, #4]
    3b0e:	f003 0301 	and.w	r3, r3, #1
    3b12:	4323      	orrs	r3, r4
    3b14:	444c      	add	r4, r9
    3b16:	f8c9 3004 	str.w	r3, [r9, #4]
    3b1a:	6863      	ldr	r3, [r4, #4]
    3b1c:	f043 0301 	orr.w	r3, r3, #1
    3b20:	6063      	str	r3, [r4, #4]
    3b22:	4640      	mov	r0, r8
    3b24:	f7ff ff88 	bl	3a38 <__malloc_unlock>
    3b28:	4630      	mov	r0, r6
    3b2a:	b003      	add	sp, #12
    3b2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
    3b30:	f023 0303 	bic.w	r3, r3, #3
    3b34:	18e1      	adds	r1, r4, r3
    3b36:	4291      	cmp	r1, r2
    3b38:	db1f      	blt.n	3b7a <_realloc_r+0x136>
    3b3a:	68c3      	ldr	r3, [r0, #12]
    3b3c:	6882      	ldr	r2, [r0, #8]
    3b3e:	462e      	mov	r6, r5
    3b40:	60d3      	str	r3, [r2, #12]
    3b42:	460c      	mov	r4, r1
    3b44:	609a      	str	r2, [r3, #8]
    3b46:	e7dd      	b.n	3b04 <_realloc_r+0xc0>
    3b48:	f8d9 2004 	ldr.w	r2, [r9, #4]
    3b4c:	eb09 0107 	add.w	r1, r9, r7
    3b50:	f002 0201 	and.w	r2, r2, #1
    3b54:	444c      	add	r4, r9
    3b56:	f043 0301 	orr.w	r3, r3, #1
    3b5a:	4317      	orrs	r7, r2
    3b5c:	f8c9 7004 	str.w	r7, [r9, #4]
    3b60:	604b      	str	r3, [r1, #4]
    3b62:	6863      	ldr	r3, [r4, #4]
    3b64:	f043 0301 	orr.w	r3, r3, #1
    3b68:	3108      	adds	r1, #8
    3b6a:	6063      	str	r3, [r4, #4]
    3b6c:	4640      	mov	r0, r8
    3b6e:	f7ff f825 	bl	2bbc <_free_r>
    3b72:	e7d6      	b.n	3b22 <_realloc_r+0xde>
    3b74:	4611      	mov	r1, r2
    3b76:	f7ff bb3f 	b.w	31f8 <_malloc_r>
    3b7a:	f01e 0f01 	tst.w	lr, #1
    3b7e:	d18e      	bne.n	3a9e <_realloc_r+0x5a>
    3b80:	f855 1c08 	ldr.w	r1, [r5, #-8]
    3b84:	eba9 0a01 	sub.w	sl, r9, r1
    3b88:	f8da 1004 	ldr.w	r1, [sl, #4]
    3b8c:	f021 0103 	bic.w	r1, r1, #3
    3b90:	440b      	add	r3, r1
    3b92:	4423      	add	r3, r4
    3b94:	4293      	cmp	r3, r2
    3b96:	db25      	blt.n	3be4 <_realloc_r+0x1a0>
    3b98:	68c2      	ldr	r2, [r0, #12]
    3b9a:	6881      	ldr	r1, [r0, #8]
    3b9c:	4656      	mov	r6, sl
    3b9e:	60ca      	str	r2, [r1, #12]
    3ba0:	6091      	str	r1, [r2, #8]
    3ba2:	f8da 100c 	ldr.w	r1, [sl, #12]
    3ba6:	f856 0f08 	ldr.w	r0, [r6, #8]!
    3baa:	1f22      	subs	r2, r4, #4
    3bac:	2a24      	cmp	r2, #36	; 0x24
    3bae:	60c1      	str	r1, [r0, #12]
    3bb0:	6088      	str	r0, [r1, #8]
    3bb2:	f200 8094 	bhi.w	3cde <_realloc_r+0x29a>
    3bb6:	2a13      	cmp	r2, #19
    3bb8:	d96f      	bls.n	3c9a <_realloc_r+0x256>
    3bba:	6829      	ldr	r1, [r5, #0]
    3bbc:	f8ca 1008 	str.w	r1, [sl, #8]
    3bc0:	6869      	ldr	r1, [r5, #4]
    3bc2:	f8ca 100c 	str.w	r1, [sl, #12]
    3bc6:	2a1b      	cmp	r2, #27
    3bc8:	f200 80a2 	bhi.w	3d10 <_realloc_r+0x2cc>
    3bcc:	3508      	adds	r5, #8
    3bce:	f10a 0210 	add.w	r2, sl, #16
    3bd2:	e063      	b.n	3c9c <_realloc_r+0x258>
    3bd4:	f855 3c08 	ldr.w	r3, [r5, #-8]
    3bd8:	eba9 0a03 	sub.w	sl, r9, r3
    3bdc:	f8da 1004 	ldr.w	r1, [sl, #4]
    3be0:	f021 0103 	bic.w	r1, r1, #3
    3be4:	1863      	adds	r3, r4, r1
    3be6:	4293      	cmp	r3, r2
    3be8:	f6ff af59 	blt.w	3a9e <_realloc_r+0x5a>
    3bec:	4656      	mov	r6, sl
    3bee:	e7d8      	b.n	3ba2 <_realloc_r+0x15e>
    3bf0:	6841      	ldr	r1, [r0, #4]
    3bf2:	f021 0b03 	bic.w	fp, r1, #3
    3bf6:	44a3      	add	fp, r4
    3bf8:	f107 0010 	add.w	r0, r7, #16
    3bfc:	4583      	cmp	fp, r0
    3bfe:	da56      	bge.n	3cae <_realloc_r+0x26a>
    3c00:	f01e 0f01 	tst.w	lr, #1
    3c04:	f47f af4b 	bne.w	3a9e <_realloc_r+0x5a>
    3c08:	f855 1c08 	ldr.w	r1, [r5, #-8]
    3c0c:	eba9 0a01 	sub.w	sl, r9, r1
    3c10:	f8da 1004 	ldr.w	r1, [sl, #4]
    3c14:	f021 0103 	bic.w	r1, r1, #3
    3c18:	448b      	add	fp, r1
    3c1a:	4558      	cmp	r0, fp
    3c1c:	dce2      	bgt.n	3be4 <_realloc_r+0x1a0>
    3c1e:	4656      	mov	r6, sl
    3c20:	f8da 100c 	ldr.w	r1, [sl, #12]
    3c24:	f856 0f08 	ldr.w	r0, [r6, #8]!
    3c28:	1f22      	subs	r2, r4, #4
    3c2a:	2a24      	cmp	r2, #36	; 0x24
    3c2c:	60c1      	str	r1, [r0, #12]
    3c2e:	6088      	str	r0, [r1, #8]
    3c30:	f200 808f 	bhi.w	3d52 <_realloc_r+0x30e>
    3c34:	2a13      	cmp	r2, #19
    3c36:	f240 808a 	bls.w	3d4e <_realloc_r+0x30a>
    3c3a:	6829      	ldr	r1, [r5, #0]
    3c3c:	f8ca 1008 	str.w	r1, [sl, #8]
    3c40:	6869      	ldr	r1, [r5, #4]
    3c42:	f8ca 100c 	str.w	r1, [sl, #12]
    3c46:	2a1b      	cmp	r2, #27
    3c48:	f200 808a 	bhi.w	3d60 <_realloc_r+0x31c>
    3c4c:	3508      	adds	r5, #8
    3c4e:	f10a 0210 	add.w	r2, sl, #16
    3c52:	6829      	ldr	r1, [r5, #0]
    3c54:	6011      	str	r1, [r2, #0]
    3c56:	6869      	ldr	r1, [r5, #4]
    3c58:	6051      	str	r1, [r2, #4]
    3c5a:	68a9      	ldr	r1, [r5, #8]
    3c5c:	6091      	str	r1, [r2, #8]
    3c5e:	eb0a 0107 	add.w	r1, sl, r7
    3c62:	ebab 0207 	sub.w	r2, fp, r7
    3c66:	f042 0201 	orr.w	r2, r2, #1
    3c6a:	6099      	str	r1, [r3, #8]
    3c6c:	604a      	str	r2, [r1, #4]
    3c6e:	f8da 3004 	ldr.w	r3, [sl, #4]
    3c72:	f003 0301 	and.w	r3, r3, #1
    3c76:	431f      	orrs	r7, r3
    3c78:	4640      	mov	r0, r8
    3c7a:	f8ca 7004 	str.w	r7, [sl, #4]
    3c7e:	f7ff fedb 	bl	3a38 <__malloc_unlock>
    3c82:	e751      	b.n	3b28 <_realloc_r+0xe4>
    3c84:	682b      	ldr	r3, [r5, #0]
    3c86:	6003      	str	r3, [r0, #0]
    3c88:	686b      	ldr	r3, [r5, #4]
    3c8a:	6043      	str	r3, [r0, #4]
    3c8c:	2a1b      	cmp	r2, #27
    3c8e:	d82d      	bhi.n	3cec <_realloc_r+0x2a8>
    3c90:	f100 0308 	add.w	r3, r0, #8
    3c94:	f105 0208 	add.w	r2, r5, #8
    3c98:	e71b      	b.n	3ad2 <_realloc_r+0x8e>
    3c9a:	4632      	mov	r2, r6
    3c9c:	6829      	ldr	r1, [r5, #0]
    3c9e:	6011      	str	r1, [r2, #0]
    3ca0:	6869      	ldr	r1, [r5, #4]
    3ca2:	6051      	str	r1, [r2, #4]
    3ca4:	68a9      	ldr	r1, [r5, #8]
    3ca6:	6091      	str	r1, [r2, #8]
    3ca8:	461c      	mov	r4, r3
    3caa:	46d1      	mov	r9, sl
    3cac:	e72a      	b.n	3b04 <_realloc_r+0xc0>
    3cae:	eb09 0107 	add.w	r1, r9, r7
    3cb2:	ebab 0b07 	sub.w	fp, fp, r7
    3cb6:	f04b 0201 	orr.w	r2, fp, #1
    3cba:	6099      	str	r1, [r3, #8]
    3cbc:	604a      	str	r2, [r1, #4]
    3cbe:	f855 3c04 	ldr.w	r3, [r5, #-4]
    3cc2:	f003 0301 	and.w	r3, r3, #1
    3cc6:	431f      	orrs	r7, r3
    3cc8:	4640      	mov	r0, r8
    3cca:	f845 7c04 	str.w	r7, [r5, #-4]
    3cce:	f7ff feb3 	bl	3a38 <__malloc_unlock>
    3cd2:	462e      	mov	r6, r5
    3cd4:	e728      	b.n	3b28 <_realloc_r+0xe4>
    3cd6:	4629      	mov	r1, r5
    3cd8:	f7ff fe44 	bl	3964 <memmove>
    3cdc:	e6ff      	b.n	3ade <_realloc_r+0x9a>
    3cde:	4629      	mov	r1, r5
    3ce0:	4630      	mov	r0, r6
    3ce2:	461c      	mov	r4, r3
    3ce4:	46d1      	mov	r9, sl
    3ce6:	f7ff fe3d 	bl	3964 <memmove>
    3cea:	e70b      	b.n	3b04 <_realloc_r+0xc0>
    3cec:	68ab      	ldr	r3, [r5, #8]
    3cee:	6083      	str	r3, [r0, #8]
    3cf0:	68eb      	ldr	r3, [r5, #12]
    3cf2:	60c3      	str	r3, [r0, #12]
    3cf4:	2a24      	cmp	r2, #36	; 0x24
    3cf6:	d017      	beq.n	3d28 <_realloc_r+0x2e4>
    3cf8:	f100 0310 	add.w	r3, r0, #16
    3cfc:	f105 0210 	add.w	r2, r5, #16
    3d00:	e6e7      	b.n	3ad2 <_realloc_r+0x8e>
    3d02:	f850 3c04 	ldr.w	r3, [r0, #-4]
    3d06:	f023 0303 	bic.w	r3, r3, #3
    3d0a:	441c      	add	r4, r3
    3d0c:	462e      	mov	r6, r5
    3d0e:	e6f9      	b.n	3b04 <_realloc_r+0xc0>
    3d10:	68a9      	ldr	r1, [r5, #8]
    3d12:	f8ca 1010 	str.w	r1, [sl, #16]
    3d16:	68e9      	ldr	r1, [r5, #12]
    3d18:	f8ca 1014 	str.w	r1, [sl, #20]
    3d1c:	2a24      	cmp	r2, #36	; 0x24
    3d1e:	d00c      	beq.n	3d3a <_realloc_r+0x2f6>
    3d20:	3510      	adds	r5, #16
    3d22:	f10a 0218 	add.w	r2, sl, #24
    3d26:	e7b9      	b.n	3c9c <_realloc_r+0x258>
    3d28:	692b      	ldr	r3, [r5, #16]
    3d2a:	6103      	str	r3, [r0, #16]
    3d2c:	696b      	ldr	r3, [r5, #20]
    3d2e:	6143      	str	r3, [r0, #20]
    3d30:	f105 0218 	add.w	r2, r5, #24
    3d34:	f100 0318 	add.w	r3, r0, #24
    3d38:	e6cb      	b.n	3ad2 <_realloc_r+0x8e>
    3d3a:	692a      	ldr	r2, [r5, #16]
    3d3c:	f8ca 2018 	str.w	r2, [sl, #24]
    3d40:	696a      	ldr	r2, [r5, #20]
    3d42:	f8ca 201c 	str.w	r2, [sl, #28]
    3d46:	3518      	adds	r5, #24
    3d48:	f10a 0220 	add.w	r2, sl, #32
    3d4c:	e7a6      	b.n	3c9c <_realloc_r+0x258>
    3d4e:	4632      	mov	r2, r6
    3d50:	e77f      	b.n	3c52 <_realloc_r+0x20e>
    3d52:	4629      	mov	r1, r5
    3d54:	4630      	mov	r0, r6
    3d56:	9301      	str	r3, [sp, #4]
    3d58:	f7ff fe04 	bl	3964 <memmove>
    3d5c:	9b01      	ldr	r3, [sp, #4]
    3d5e:	e77e      	b.n	3c5e <_realloc_r+0x21a>
    3d60:	68a9      	ldr	r1, [r5, #8]
    3d62:	f8ca 1010 	str.w	r1, [sl, #16]
    3d66:	68e9      	ldr	r1, [r5, #12]
    3d68:	f8ca 1014 	str.w	r1, [sl, #20]
    3d6c:	2a24      	cmp	r2, #36	; 0x24
    3d6e:	d003      	beq.n	3d78 <_realloc_r+0x334>
    3d70:	3510      	adds	r5, #16
    3d72:	f10a 0218 	add.w	r2, sl, #24
    3d76:	e76c      	b.n	3c52 <_realloc_r+0x20e>
    3d78:	692a      	ldr	r2, [r5, #16]
    3d7a:	f8ca 2018 	str.w	r2, [sl, #24]
    3d7e:	696a      	ldr	r2, [r5, #20]
    3d80:	f8ca 201c 	str.w	r2, [sl, #28]
    3d84:	3518      	adds	r5, #24
    3d86:	f10a 0220 	add.w	r2, sl, #32
    3d8a:	e762      	b.n	3c52 <_realloc_r+0x20e>
    3d8c:	200005d0 	.word	0x200005d0

00003d90 <_sbrk_r>:
    3d90:	b538      	push	{r3, r4, r5, lr}
    3d92:	4c07      	ldr	r4, [pc, #28]	; (3db0 <_sbrk_r+0x20>)
    3d94:	2300      	movs	r3, #0
    3d96:	4605      	mov	r5, r0
    3d98:	4608      	mov	r0, r1
    3d9a:	6023      	str	r3, [r4, #0]
    3d9c:	f7fd fb48 	bl	1430 <_sbrk>
    3da0:	1c43      	adds	r3, r0, #1
    3da2:	d000      	beq.n	3da6 <_sbrk_r+0x16>
    3da4:	bd38      	pop	{r3, r4, r5, pc}
    3da6:	6823      	ldr	r3, [r4, #0]
    3da8:	2b00      	cmp	r3, #0
    3daa:	d0fb      	beq.n	3da4 <_sbrk_r+0x14>
    3dac:	602b      	str	r3, [r5, #0]
    3dae:	bd38      	pop	{r3, r4, r5, pc}
    3db0:	20000a6c 	.word	0x20000a6c

00003db4 <__sread>:
    3db4:	b510      	push	{r4, lr}
    3db6:	460c      	mov	r4, r1
    3db8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
    3dbc:	f000 fa66 	bl	428c <_read_r>
    3dc0:	2800      	cmp	r0, #0
    3dc2:	db03      	blt.n	3dcc <__sread+0x18>
    3dc4:	6d23      	ldr	r3, [r4, #80]	; 0x50
    3dc6:	4403      	add	r3, r0
    3dc8:	6523      	str	r3, [r4, #80]	; 0x50
    3dca:	bd10      	pop	{r4, pc}
    3dcc:	89a3      	ldrh	r3, [r4, #12]
    3dce:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
    3dd2:	81a3      	strh	r3, [r4, #12]
    3dd4:	bd10      	pop	{r4, pc}
    3dd6:	bf00      	nop

00003dd8 <__swrite>:
    3dd8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    3ddc:	4616      	mov	r6, r2
    3dde:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
    3de2:	461f      	mov	r7, r3
    3de4:	05d3      	lsls	r3, r2, #23
    3de6:	460c      	mov	r4, r1
    3de8:	4605      	mov	r5, r0
    3dea:	d507      	bpl.n	3dfc <__swrite+0x24>
    3dec:	2200      	movs	r2, #0
    3dee:	2302      	movs	r3, #2
    3df0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
    3df4:	f000 fa34 	bl	4260 <_lseek_r>
    3df8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
    3dfc:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
    3e00:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
    3e04:	81a2      	strh	r2, [r4, #12]
    3e06:	463b      	mov	r3, r7
    3e08:	4632      	mov	r2, r6
    3e0a:	4628      	mov	r0, r5
    3e0c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    3e10:	f000 b914 	b.w	403c <_write_r>

00003e14 <__sseek>:
    3e14:	b510      	push	{r4, lr}
    3e16:	460c      	mov	r4, r1
    3e18:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
    3e1c:	f000 fa20 	bl	4260 <_lseek_r>
    3e20:	89a3      	ldrh	r3, [r4, #12]
    3e22:	1c42      	adds	r2, r0, #1
    3e24:	bf0e      	itee	eq
    3e26:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
    3e2a:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
    3e2e:	6520      	strne	r0, [r4, #80]	; 0x50
    3e30:	81a3      	strh	r3, [r4, #12]
    3e32:	bd10      	pop	{r4, pc}

00003e34 <__sclose>:
    3e34:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
    3e38:	f000 b978 	b.w	412c <_close_r>
    3e3c:	0000      	movs	r0, r0
	...

00003e40 <strlen>:
    3e40:	f890 f000 	pld	[r0]
    3e44:	e96d 4502 	strd	r4, r5, [sp, #-8]!
    3e48:	f020 0107 	bic.w	r1, r0, #7
    3e4c:	f06f 0c00 	mvn.w	ip, #0
    3e50:	f010 0407 	ands.w	r4, r0, #7
    3e54:	f891 f020 	pld	[r1, #32]
    3e58:	f040 8049 	bne.w	3eee <strlen+0xae>
    3e5c:	f04f 0400 	mov.w	r4, #0
    3e60:	f06f 0007 	mvn.w	r0, #7
    3e64:	e9d1 2300 	ldrd	r2, r3, [r1]
    3e68:	f891 f040 	pld	[r1, #64]	; 0x40
    3e6c:	f100 0008 	add.w	r0, r0, #8
    3e70:	fa82 f24c 	uadd8	r2, r2, ip
    3e74:	faa4 f28c 	sel	r2, r4, ip
    3e78:	fa83 f34c 	uadd8	r3, r3, ip
    3e7c:	faa2 f38c 	sel	r3, r2, ip
    3e80:	bb4b      	cbnz	r3, 3ed6 <strlen+0x96>
    3e82:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
    3e86:	fa82 f24c 	uadd8	r2, r2, ip
    3e8a:	f100 0008 	add.w	r0, r0, #8
    3e8e:	faa4 f28c 	sel	r2, r4, ip
    3e92:	fa83 f34c 	uadd8	r3, r3, ip
    3e96:	faa2 f38c 	sel	r3, r2, ip
    3e9a:	b9e3      	cbnz	r3, 3ed6 <strlen+0x96>
    3e9c:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
    3ea0:	fa82 f24c 	uadd8	r2, r2, ip
    3ea4:	f100 0008 	add.w	r0, r0, #8
    3ea8:	faa4 f28c 	sel	r2, r4, ip
    3eac:	fa83 f34c 	uadd8	r3, r3, ip
    3eb0:	faa2 f38c 	sel	r3, r2, ip
    3eb4:	b97b      	cbnz	r3, 3ed6 <strlen+0x96>
    3eb6:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
    3eba:	f101 0120 	add.w	r1, r1, #32
    3ebe:	fa82 f24c 	uadd8	r2, r2, ip
    3ec2:	f100 0008 	add.w	r0, r0, #8
    3ec6:	faa4 f28c 	sel	r2, r4, ip
    3eca:	fa83 f34c 	uadd8	r3, r3, ip
    3ece:	faa2 f38c 	sel	r3, r2, ip
    3ed2:	2b00      	cmp	r3, #0
    3ed4:	d0c6      	beq.n	3e64 <strlen+0x24>
    3ed6:	2a00      	cmp	r2, #0
    3ed8:	bf04      	itt	eq
    3eda:	3004      	addeq	r0, #4
    3edc:	461a      	moveq	r2, r3
    3ede:	ba12      	rev	r2, r2
    3ee0:	fab2 f282 	clz	r2, r2
    3ee4:	e8fd 4502 	ldrd	r4, r5, [sp], #8
    3ee8:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
    3eec:	4770      	bx	lr
    3eee:	e9d1 2300 	ldrd	r2, r3, [r1]
    3ef2:	f004 0503 	and.w	r5, r4, #3
    3ef6:	f1c4 0000 	rsb	r0, r4, #0
    3efa:	ea4f 05c5 	mov.w	r5, r5, lsl #3
    3efe:	f014 0f04 	tst.w	r4, #4
    3f02:	f891 f040 	pld	[r1, #64]	; 0x40
    3f06:	fa0c f505 	lsl.w	r5, ip, r5
    3f0a:	ea62 0205 	orn	r2, r2, r5
    3f0e:	bf1c      	itt	ne
    3f10:	ea63 0305 	ornne	r3, r3, r5
    3f14:	4662      	movne	r2, ip
    3f16:	f04f 0400 	mov.w	r4, #0
    3f1a:	e7a9      	b.n	3e70 <strlen+0x30>

00003f1c <__swbuf_r>:
    3f1c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    3f1e:	460d      	mov	r5, r1
    3f20:	4614      	mov	r4, r2
    3f22:	4606      	mov	r6, r0
    3f24:	b110      	cbz	r0, 3f2c <__swbuf_r+0x10>
    3f26:	6b83      	ldr	r3, [r0, #56]	; 0x38
    3f28:	2b00      	cmp	r3, #0
    3f2a:	d04b      	beq.n	3fc4 <__swbuf_r+0xa8>
    3f2c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
    3f30:	69a3      	ldr	r3, [r4, #24]
    3f32:	60a3      	str	r3, [r4, #8]
    3f34:	b291      	uxth	r1, r2
    3f36:	0708      	lsls	r0, r1, #28
    3f38:	d539      	bpl.n	3fae <__swbuf_r+0x92>
    3f3a:	6923      	ldr	r3, [r4, #16]
    3f3c:	2b00      	cmp	r3, #0
    3f3e:	d036      	beq.n	3fae <__swbuf_r+0x92>
    3f40:	b2ed      	uxtb	r5, r5
    3f42:	0489      	lsls	r1, r1, #18
    3f44:	462f      	mov	r7, r5
    3f46:	d515      	bpl.n	3f74 <__swbuf_r+0x58>
    3f48:	6822      	ldr	r2, [r4, #0]
    3f4a:	6961      	ldr	r1, [r4, #20]
    3f4c:	1ad3      	subs	r3, r2, r3
    3f4e:	428b      	cmp	r3, r1
    3f50:	da1c      	bge.n	3f8c <__swbuf_r+0x70>
    3f52:	3301      	adds	r3, #1
    3f54:	68a1      	ldr	r1, [r4, #8]
    3f56:	1c50      	adds	r0, r2, #1
    3f58:	3901      	subs	r1, #1
    3f5a:	60a1      	str	r1, [r4, #8]
    3f5c:	6020      	str	r0, [r4, #0]
    3f5e:	7015      	strb	r5, [r2, #0]
    3f60:	6962      	ldr	r2, [r4, #20]
    3f62:	429a      	cmp	r2, r3
    3f64:	d01a      	beq.n	3f9c <__swbuf_r+0x80>
    3f66:	89a3      	ldrh	r3, [r4, #12]
    3f68:	07db      	lsls	r3, r3, #31
    3f6a:	d501      	bpl.n	3f70 <__swbuf_r+0x54>
    3f6c:	2d0a      	cmp	r5, #10
    3f6e:	d015      	beq.n	3f9c <__swbuf_r+0x80>
    3f70:	4638      	mov	r0, r7
    3f72:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    3f74:	6e61      	ldr	r1, [r4, #100]	; 0x64
    3f76:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
    3f7a:	f421 5100 	bic.w	r1, r1, #8192	; 0x2000
    3f7e:	81a2      	strh	r2, [r4, #12]
    3f80:	6822      	ldr	r2, [r4, #0]
    3f82:	6661      	str	r1, [r4, #100]	; 0x64
    3f84:	6961      	ldr	r1, [r4, #20]
    3f86:	1ad3      	subs	r3, r2, r3
    3f88:	428b      	cmp	r3, r1
    3f8a:	dbe2      	blt.n	3f52 <__swbuf_r+0x36>
    3f8c:	4621      	mov	r1, r4
    3f8e:	4630      	mov	r0, r6
    3f90:	f7fe fc96 	bl	28c0 <_fflush_r>
    3f94:	b940      	cbnz	r0, 3fa8 <__swbuf_r+0x8c>
    3f96:	6822      	ldr	r2, [r4, #0]
    3f98:	2301      	movs	r3, #1
    3f9a:	e7db      	b.n	3f54 <__swbuf_r+0x38>
    3f9c:	4621      	mov	r1, r4
    3f9e:	4630      	mov	r0, r6
    3fa0:	f7fe fc8e 	bl	28c0 <_fflush_r>
    3fa4:	2800      	cmp	r0, #0
    3fa6:	d0e3      	beq.n	3f70 <__swbuf_r+0x54>
    3fa8:	f04f 37ff 	mov.w	r7, #4294967295
    3fac:	e7e0      	b.n	3f70 <__swbuf_r+0x54>
    3fae:	4621      	mov	r1, r4
    3fb0:	4630      	mov	r0, r6
    3fb2:	f7fe fb71 	bl	2698 <__swsetup_r>
    3fb6:	2800      	cmp	r0, #0
    3fb8:	d1f6      	bne.n	3fa8 <__swbuf_r+0x8c>
    3fba:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
    3fbe:	6923      	ldr	r3, [r4, #16]
    3fc0:	b291      	uxth	r1, r2
    3fc2:	e7bd      	b.n	3f40 <__swbuf_r+0x24>
    3fc4:	f7fe fcd4 	bl	2970 <__sinit>
    3fc8:	e7b0      	b.n	3f2c <__swbuf_r+0x10>
    3fca:	bf00      	nop

00003fcc <_wcrtomb_r>:
    3fcc:	b5f0      	push	{r4, r5, r6, r7, lr}
    3fce:	4606      	mov	r6, r0
    3fd0:	b085      	sub	sp, #20
    3fd2:	461f      	mov	r7, r3
    3fd4:	b189      	cbz	r1, 3ffa <_wcrtomb_r+0x2e>
    3fd6:	4c10      	ldr	r4, [pc, #64]	; (4018 <_wcrtomb_r+0x4c>)
    3fd8:	4d10      	ldr	r5, [pc, #64]	; (401c <_wcrtomb_r+0x50>)
    3fda:	6824      	ldr	r4, [r4, #0]
    3fdc:	6b64      	ldr	r4, [r4, #52]	; 0x34
    3fde:	2c00      	cmp	r4, #0
    3fe0:	bf08      	it	eq
    3fe2:	462c      	moveq	r4, r5
    3fe4:	f8d4 40e0 	ldr.w	r4, [r4, #224]	; 0xe0
    3fe8:	47a0      	blx	r4
    3fea:	1c43      	adds	r3, r0, #1
    3fec:	d103      	bne.n	3ff6 <_wcrtomb_r+0x2a>
    3fee:	2200      	movs	r2, #0
    3ff0:	238a      	movs	r3, #138	; 0x8a
    3ff2:	603a      	str	r2, [r7, #0]
    3ff4:	6033      	str	r3, [r6, #0]
    3ff6:	b005      	add	sp, #20
    3ff8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    3ffa:	460c      	mov	r4, r1
    3ffc:	4906      	ldr	r1, [pc, #24]	; (4018 <_wcrtomb_r+0x4c>)
    3ffe:	4a07      	ldr	r2, [pc, #28]	; (401c <_wcrtomb_r+0x50>)
    4000:	6809      	ldr	r1, [r1, #0]
    4002:	6b49      	ldr	r1, [r1, #52]	; 0x34
    4004:	2900      	cmp	r1, #0
    4006:	bf08      	it	eq
    4008:	4611      	moveq	r1, r2
    400a:	4622      	mov	r2, r4
    400c:	f8d1 40e0 	ldr.w	r4, [r1, #224]	; 0xe0
    4010:	a901      	add	r1, sp, #4
    4012:	47a0      	blx	r4
    4014:	e7e9      	b.n	3fea <_wcrtomb_r+0x1e>
    4016:	bf00      	nop
    4018:	20000030 	.word	0x20000030
    401c:	20000464 	.word	0x20000464

00004020 <__ascii_wctomb>:
    4020:	b121      	cbz	r1, 402c <__ascii_wctomb+0xc>
    4022:	2aff      	cmp	r2, #255	; 0xff
    4024:	d804      	bhi.n	4030 <__ascii_wctomb+0x10>
    4026:	700a      	strb	r2, [r1, #0]
    4028:	2001      	movs	r0, #1
    402a:	4770      	bx	lr
    402c:	4608      	mov	r0, r1
    402e:	4770      	bx	lr
    4030:	238a      	movs	r3, #138	; 0x8a
    4032:	6003      	str	r3, [r0, #0]
    4034:	f04f 30ff 	mov.w	r0, #4294967295
    4038:	4770      	bx	lr
    403a:	bf00      	nop

0000403c <_write_r>:
    403c:	b570      	push	{r4, r5, r6, lr}
    403e:	460d      	mov	r5, r1
    4040:	4c08      	ldr	r4, [pc, #32]	; (4064 <_write_r+0x28>)
    4042:	4611      	mov	r1, r2
    4044:	4606      	mov	r6, r0
    4046:	461a      	mov	r2, r3
    4048:	4628      	mov	r0, r5
    404a:	2300      	movs	r3, #0
    404c:	6023      	str	r3, [r4, #0]
    404e:	f7fc f975 	bl	33c <_write>
    4052:	1c43      	adds	r3, r0, #1
    4054:	d000      	beq.n	4058 <_write_r+0x1c>
    4056:	bd70      	pop	{r4, r5, r6, pc}
    4058:	6823      	ldr	r3, [r4, #0]
    405a:	2b00      	cmp	r3, #0
    405c:	d0fb      	beq.n	4056 <_write_r+0x1a>
    405e:	6033      	str	r3, [r6, #0]
    4060:	bd70      	pop	{r4, r5, r6, pc}
    4062:	bf00      	nop
    4064:	20000a6c 	.word	0x20000a6c

00004068 <__register_exitproc>:
    4068:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    406c:	4d2c      	ldr	r5, [pc, #176]	; (4120 <__register_exitproc+0xb8>)
    406e:	4606      	mov	r6, r0
    4070:	6828      	ldr	r0, [r5, #0]
    4072:	4698      	mov	r8, r3
    4074:	460f      	mov	r7, r1
    4076:	4691      	mov	r9, r2
    4078:	f7ff f83a 	bl	30f0 <__retarget_lock_acquire_recursive>
    407c:	4b29      	ldr	r3, [pc, #164]	; (4124 <__register_exitproc+0xbc>)
    407e:	681c      	ldr	r4, [r3, #0]
    4080:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
    4084:	2b00      	cmp	r3, #0
    4086:	d03e      	beq.n	4106 <__register_exitproc+0x9e>
    4088:	685a      	ldr	r2, [r3, #4]
    408a:	2a1f      	cmp	r2, #31
    408c:	dc1c      	bgt.n	40c8 <__register_exitproc+0x60>
    408e:	f102 0e01 	add.w	lr, r2, #1
    4092:	b176      	cbz	r6, 40b2 <__register_exitproc+0x4a>
    4094:	eb03 0182 	add.w	r1, r3, r2, lsl #2
    4098:	2401      	movs	r4, #1
    409a:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
    409e:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
    40a2:	4094      	lsls	r4, r2
    40a4:	4320      	orrs	r0, r4
    40a6:	2e02      	cmp	r6, #2
    40a8:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
    40ac:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
    40b0:	d023      	beq.n	40fa <__register_exitproc+0x92>
    40b2:	3202      	adds	r2, #2
    40b4:	f8c3 e004 	str.w	lr, [r3, #4]
    40b8:	6828      	ldr	r0, [r5, #0]
    40ba:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
    40be:	f7ff f819 	bl	30f4 <__retarget_lock_release_recursive>
    40c2:	2000      	movs	r0, #0
    40c4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    40c8:	4b17      	ldr	r3, [pc, #92]	; (4128 <__register_exitproc+0xc0>)
    40ca:	b30b      	cbz	r3, 4110 <__register_exitproc+0xa8>
    40cc:	f44f 70c8 	mov.w	r0, #400	; 0x190
    40d0:	f7ff f88a 	bl	31e8 <malloc>
    40d4:	4603      	mov	r3, r0
    40d6:	b1d8      	cbz	r0, 4110 <__register_exitproc+0xa8>
    40d8:	f8d4 2148 	ldr.w	r2, [r4, #328]	; 0x148
    40dc:	6002      	str	r2, [r0, #0]
    40de:	2100      	movs	r1, #0
    40e0:	6041      	str	r1, [r0, #4]
    40e2:	460a      	mov	r2, r1
    40e4:	f8c4 0148 	str.w	r0, [r4, #328]	; 0x148
    40e8:	f04f 0e01 	mov.w	lr, #1
    40ec:	f8c0 1188 	str.w	r1, [r0, #392]	; 0x188
    40f0:	f8c0 118c 	str.w	r1, [r0, #396]	; 0x18c
    40f4:	2e00      	cmp	r6, #0
    40f6:	d0dc      	beq.n	40b2 <__register_exitproc+0x4a>
    40f8:	e7cc      	b.n	4094 <__register_exitproc+0x2c>
    40fa:	f8d3 118c 	ldr.w	r1, [r3, #396]	; 0x18c
    40fe:	430c      	orrs	r4, r1
    4100:	f8c3 418c 	str.w	r4, [r3, #396]	; 0x18c
    4104:	e7d5      	b.n	40b2 <__register_exitproc+0x4a>
    4106:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
    410a:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
    410e:	e7bb      	b.n	4088 <__register_exitproc+0x20>
    4110:	6828      	ldr	r0, [r5, #0]
    4112:	f7fe ffef 	bl	30f4 <__retarget_lock_release_recursive>
    4116:	f04f 30ff 	mov.w	r0, #4294967295
    411a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    411e:	bf00      	nop
    4120:	20000460 	.word	0x20000460
    4124:	00004724 	.word	0x00004724
    4128:	000031e9 	.word	0x000031e9

0000412c <_close_r>:
    412c:	b538      	push	{r3, r4, r5, lr}
    412e:	4c07      	ldr	r4, [pc, #28]	; (414c <_close_r+0x20>)
    4130:	2300      	movs	r3, #0
    4132:	4605      	mov	r5, r0
    4134:	4608      	mov	r0, r1
    4136:	6023      	str	r3, [r4, #0]
    4138:	f7fd f996 	bl	1468 <_close>
    413c:	1c43      	adds	r3, r0, #1
    413e:	d000      	beq.n	4142 <_close_r+0x16>
    4140:	bd38      	pop	{r3, r4, r5, pc}
    4142:	6823      	ldr	r3, [r4, #0]
    4144:	2b00      	cmp	r3, #0
    4146:	d0fb      	beq.n	4140 <_close_r+0x14>
    4148:	602b      	str	r3, [r5, #0]
    414a:	bd38      	pop	{r3, r4, r5, pc}
    414c:	20000a6c 	.word	0x20000a6c

00004150 <_fclose_r>:
    4150:	b570      	push	{r4, r5, r6, lr}
    4152:	b159      	cbz	r1, 416c <_fclose_r+0x1c>
    4154:	4605      	mov	r5, r0
    4156:	460c      	mov	r4, r1
    4158:	b110      	cbz	r0, 4160 <_fclose_r+0x10>
    415a:	6b83      	ldr	r3, [r0, #56]	; 0x38
    415c:	2b00      	cmp	r3, #0
    415e:	d03c      	beq.n	41da <_fclose_r+0x8a>
    4160:	6e63      	ldr	r3, [r4, #100]	; 0x64
    4162:	07d8      	lsls	r0, r3, #31
    4164:	d505      	bpl.n	4172 <_fclose_r+0x22>
    4166:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    416a:	b92b      	cbnz	r3, 4178 <_fclose_r+0x28>
    416c:	2600      	movs	r6, #0
    416e:	4630      	mov	r0, r6
    4170:	bd70      	pop	{r4, r5, r6, pc}
    4172:	89a3      	ldrh	r3, [r4, #12]
    4174:	0599      	lsls	r1, r3, #22
    4176:	d53c      	bpl.n	41f2 <_fclose_r+0xa2>
    4178:	4621      	mov	r1, r4
    417a:	4628      	mov	r0, r5
    417c:	f7fe fb00 	bl	2780 <__sflush_r>
    4180:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    4182:	4606      	mov	r6, r0
    4184:	b133      	cbz	r3, 4194 <_fclose_r+0x44>
    4186:	69e1      	ldr	r1, [r4, #28]
    4188:	4628      	mov	r0, r5
    418a:	4798      	blx	r3
    418c:	2800      	cmp	r0, #0
    418e:	bfb8      	it	lt
    4190:	f04f 36ff 	movlt.w	r6, #4294967295
    4194:	89a3      	ldrh	r3, [r4, #12]
    4196:	061a      	lsls	r2, r3, #24
    4198:	d422      	bmi.n	41e0 <_fclose_r+0x90>
    419a:	6b21      	ldr	r1, [r4, #48]	; 0x30
    419c:	b141      	cbz	r1, 41b0 <_fclose_r+0x60>
    419e:	f104 0340 	add.w	r3, r4, #64	; 0x40
    41a2:	4299      	cmp	r1, r3
    41a4:	d002      	beq.n	41ac <_fclose_r+0x5c>
    41a6:	4628      	mov	r0, r5
    41a8:	f7fe fd08 	bl	2bbc <_free_r>
    41ac:	2300      	movs	r3, #0
    41ae:	6323      	str	r3, [r4, #48]	; 0x30
    41b0:	6c61      	ldr	r1, [r4, #68]	; 0x44
    41b2:	b121      	cbz	r1, 41be <_fclose_r+0x6e>
    41b4:	4628      	mov	r0, r5
    41b6:	f7fe fd01 	bl	2bbc <_free_r>
    41ba:	2300      	movs	r3, #0
    41bc:	6463      	str	r3, [r4, #68]	; 0x44
    41be:	f7fe fc03 	bl	29c8 <__sfp_lock_acquire>
    41c2:	6e63      	ldr	r3, [r4, #100]	; 0x64
    41c4:	2200      	movs	r2, #0
    41c6:	07db      	lsls	r3, r3, #31
    41c8:	81a2      	strh	r2, [r4, #12]
    41ca:	d50e      	bpl.n	41ea <_fclose_r+0x9a>
    41cc:	6da0      	ldr	r0, [r4, #88]	; 0x58
    41ce:	f7fe ff8d 	bl	30ec <__retarget_lock_close_recursive>
    41d2:	f7fe fbff 	bl	29d4 <__sfp_lock_release>
    41d6:	4630      	mov	r0, r6
    41d8:	bd70      	pop	{r4, r5, r6, pc}
    41da:	f7fe fbc9 	bl	2970 <__sinit>
    41de:	e7bf      	b.n	4160 <_fclose_r+0x10>
    41e0:	6921      	ldr	r1, [r4, #16]
    41e2:	4628      	mov	r0, r5
    41e4:	f7fe fcea 	bl	2bbc <_free_r>
    41e8:	e7d7      	b.n	419a <_fclose_r+0x4a>
    41ea:	6da0      	ldr	r0, [r4, #88]	; 0x58
    41ec:	f7fe ff82 	bl	30f4 <__retarget_lock_release_recursive>
    41f0:	e7ec      	b.n	41cc <_fclose_r+0x7c>
    41f2:	6da0      	ldr	r0, [r4, #88]	; 0x58
    41f4:	f7fe ff7c 	bl	30f0 <__retarget_lock_acquire_recursive>
    41f8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
    41fc:	2b00      	cmp	r3, #0
    41fe:	d1bb      	bne.n	4178 <_fclose_r+0x28>
    4200:	6e66      	ldr	r6, [r4, #100]	; 0x64
    4202:	f016 0601 	ands.w	r6, r6, #1
    4206:	d1b1      	bne.n	416c <_fclose_r+0x1c>
    4208:	6da0      	ldr	r0, [r4, #88]	; 0x58
    420a:	f7fe ff73 	bl	30f4 <__retarget_lock_release_recursive>
    420e:	4630      	mov	r0, r6
    4210:	bd70      	pop	{r4, r5, r6, pc}
    4212:	bf00      	nop

00004214 <_fstat_r>:
    4214:	b538      	push	{r3, r4, r5, lr}
    4216:	460b      	mov	r3, r1
    4218:	4c07      	ldr	r4, [pc, #28]	; (4238 <_fstat_r+0x24>)
    421a:	4605      	mov	r5, r0
    421c:	4611      	mov	r1, r2
    421e:	4618      	mov	r0, r3
    4220:	2300      	movs	r3, #0
    4222:	6023      	str	r3, [r4, #0]
    4224:	f7fd f923 	bl	146e <_fstat>
    4228:	1c43      	adds	r3, r0, #1
    422a:	d000      	beq.n	422e <_fstat_r+0x1a>
    422c:	bd38      	pop	{r3, r4, r5, pc}
    422e:	6823      	ldr	r3, [r4, #0]
    4230:	2b00      	cmp	r3, #0
    4232:	d0fb      	beq.n	422c <_fstat_r+0x18>
    4234:	602b      	str	r3, [r5, #0]
    4236:	bd38      	pop	{r3, r4, r5, pc}
    4238:	20000a6c 	.word	0x20000a6c

0000423c <_isatty_r>:
    423c:	b538      	push	{r3, r4, r5, lr}
    423e:	4c07      	ldr	r4, [pc, #28]	; (425c <_isatty_r+0x20>)
    4240:	2300      	movs	r3, #0
    4242:	4605      	mov	r5, r0
    4244:	4608      	mov	r0, r1
    4246:	6023      	str	r3, [r4, #0]
    4248:	f7fd f916 	bl	1478 <_isatty>
    424c:	1c43      	adds	r3, r0, #1
    424e:	d000      	beq.n	4252 <_isatty_r+0x16>
    4250:	bd38      	pop	{r3, r4, r5, pc}
    4252:	6823      	ldr	r3, [r4, #0]
    4254:	2b00      	cmp	r3, #0
    4256:	d0fb      	beq.n	4250 <_isatty_r+0x14>
    4258:	602b      	str	r3, [r5, #0]
    425a:	bd38      	pop	{r3, r4, r5, pc}
    425c:	20000a6c 	.word	0x20000a6c

00004260 <_lseek_r>:
    4260:	b570      	push	{r4, r5, r6, lr}
    4262:	460d      	mov	r5, r1
    4264:	4c08      	ldr	r4, [pc, #32]	; (4288 <_lseek_r+0x28>)
    4266:	4611      	mov	r1, r2
    4268:	4606      	mov	r6, r0
    426a:	461a      	mov	r2, r3
    426c:	4628      	mov	r0, r5
    426e:	2300      	movs	r3, #0
    4270:	6023      	str	r3, [r4, #0]
    4272:	f7fd f903 	bl	147c <_lseek>
    4276:	1c43      	adds	r3, r0, #1
    4278:	d000      	beq.n	427c <_lseek_r+0x1c>
    427a:	bd70      	pop	{r4, r5, r6, pc}
    427c:	6823      	ldr	r3, [r4, #0]
    427e:	2b00      	cmp	r3, #0
    4280:	d0fb      	beq.n	427a <_lseek_r+0x1a>
    4282:	6033      	str	r3, [r6, #0]
    4284:	bd70      	pop	{r4, r5, r6, pc}
    4286:	bf00      	nop
    4288:	20000a6c 	.word	0x20000a6c

0000428c <_read_r>:
    428c:	b570      	push	{r4, r5, r6, lr}
    428e:	460d      	mov	r5, r1
    4290:	4c08      	ldr	r4, [pc, #32]	; (42b4 <_read_r+0x28>)
    4292:	4611      	mov	r1, r2
    4294:	4606      	mov	r6, r0
    4296:	461a      	mov	r2, r3
    4298:	4628      	mov	r0, r5
    429a:	2300      	movs	r3, #0
    429c:	6023      	str	r3, [r4, #0]
    429e:	f7fb ffa5 	bl	1ec <_read>
    42a2:	1c43      	adds	r3, r0, #1
    42a4:	d000      	beq.n	42a8 <_read_r+0x1c>
    42a6:	bd70      	pop	{r4, r5, r6, pc}
    42a8:	6823      	ldr	r3, [r4, #0]
    42aa:	2b00      	cmp	r3, #0
    42ac:	d0fb      	beq.n	42a6 <_read_r+0x1a>
    42ae:	6033      	str	r3, [r6, #0]
    42b0:	bd70      	pop	{r4, r5, r6, pc}
    42b2:	bf00      	nop
    42b4:	20000a6c 	.word	0x20000a6c

000042b8 <__aeabi_uldivmod>:
    42b8:	b953      	cbnz	r3, 42d0 <__aeabi_uldivmod+0x18>
    42ba:	b94a      	cbnz	r2, 42d0 <__aeabi_uldivmod+0x18>
    42bc:	2900      	cmp	r1, #0
    42be:	bf08      	it	eq
    42c0:	2800      	cmpeq	r0, #0
    42c2:	bf1c      	itt	ne
    42c4:	f04f 31ff 	movne.w	r1, #4294967295
    42c8:	f04f 30ff 	movne.w	r0, #4294967295
    42cc:	f000 b97a 	b.w	45c4 <__aeabi_idiv0>
    42d0:	f1ad 0c08 	sub.w	ip, sp, #8
    42d4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
    42d8:	f000 f806 	bl	42e8 <__udivmoddi4>
    42dc:	f8dd e004 	ldr.w	lr, [sp, #4]
    42e0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
    42e4:	b004      	add	sp, #16
    42e6:	4770      	bx	lr

000042e8 <__udivmoddi4>:
    42e8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    42ec:	468c      	mov	ip, r1
    42ee:	460d      	mov	r5, r1
    42f0:	4604      	mov	r4, r0
    42f2:	9e08      	ldr	r6, [sp, #32]
    42f4:	2b00      	cmp	r3, #0
    42f6:	d151      	bne.n	439c <__udivmoddi4+0xb4>
    42f8:	428a      	cmp	r2, r1
    42fa:	4617      	mov	r7, r2
    42fc:	d96d      	bls.n	43da <__udivmoddi4+0xf2>
    42fe:	fab2 fe82 	clz	lr, r2
    4302:	f1be 0f00 	cmp.w	lr, #0
    4306:	d00b      	beq.n	4320 <__udivmoddi4+0x38>
    4308:	f1ce 0c20 	rsb	ip, lr, #32
    430c:	fa01 f50e 	lsl.w	r5, r1, lr
    4310:	fa20 fc0c 	lsr.w	ip, r0, ip
    4314:	fa02 f70e 	lsl.w	r7, r2, lr
    4318:	ea4c 0c05 	orr.w	ip, ip, r5
    431c:	fa00 f40e 	lsl.w	r4, r0, lr
    4320:	ea4f 4a17 	mov.w	sl, r7, lsr #16
    4324:	0c25      	lsrs	r5, r4, #16
    4326:	fbbc f8fa 	udiv	r8, ip, sl
    432a:	fa1f f987 	uxth.w	r9, r7
    432e:	fb0a cc18 	mls	ip, sl, r8, ip
    4332:	ea45 450c 	orr.w	r5, r5, ip, lsl #16
    4336:	fb08 f309 	mul.w	r3, r8, r9
    433a:	42ab      	cmp	r3, r5
    433c:	d90a      	bls.n	4354 <__udivmoddi4+0x6c>
    433e:	19ed      	adds	r5, r5, r7
    4340:	f108 32ff 	add.w	r2, r8, #4294967295
    4344:	f080 8123 	bcs.w	458e <__udivmoddi4+0x2a6>
    4348:	42ab      	cmp	r3, r5
    434a:	f240 8120 	bls.w	458e <__udivmoddi4+0x2a6>
    434e:	f1a8 0802 	sub.w	r8, r8, #2
    4352:	443d      	add	r5, r7
    4354:	1aed      	subs	r5, r5, r3
    4356:	b2a4      	uxth	r4, r4
    4358:	fbb5 f0fa 	udiv	r0, r5, sl
    435c:	fb0a 5510 	mls	r5, sl, r0, r5
    4360:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
    4364:	fb00 f909 	mul.w	r9, r0, r9
    4368:	45a1      	cmp	r9, r4
    436a:	d909      	bls.n	4380 <__udivmoddi4+0x98>
    436c:	19e4      	adds	r4, r4, r7
    436e:	f100 33ff 	add.w	r3, r0, #4294967295
    4372:	f080 810a 	bcs.w	458a <__udivmoddi4+0x2a2>
    4376:	45a1      	cmp	r9, r4
    4378:	f240 8107 	bls.w	458a <__udivmoddi4+0x2a2>
    437c:	3802      	subs	r0, #2
    437e:	443c      	add	r4, r7
    4380:	eba4 0409 	sub.w	r4, r4, r9
    4384:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
    4388:	2100      	movs	r1, #0
    438a:	2e00      	cmp	r6, #0
    438c:	d061      	beq.n	4452 <__udivmoddi4+0x16a>
    438e:	fa24 f40e 	lsr.w	r4, r4, lr
    4392:	2300      	movs	r3, #0
    4394:	6034      	str	r4, [r6, #0]
    4396:	6073      	str	r3, [r6, #4]
    4398:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    439c:	428b      	cmp	r3, r1
    439e:	d907      	bls.n	43b0 <__udivmoddi4+0xc8>
    43a0:	2e00      	cmp	r6, #0
    43a2:	d054      	beq.n	444e <__udivmoddi4+0x166>
    43a4:	2100      	movs	r1, #0
    43a6:	e886 0021 	stmia.w	r6, {r0, r5}
    43aa:	4608      	mov	r0, r1
    43ac:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    43b0:	fab3 f183 	clz	r1, r3
    43b4:	2900      	cmp	r1, #0
    43b6:	f040 808e 	bne.w	44d6 <__udivmoddi4+0x1ee>
    43ba:	42ab      	cmp	r3, r5
    43bc:	d302      	bcc.n	43c4 <__udivmoddi4+0xdc>
    43be:	4282      	cmp	r2, r0
    43c0:	f200 80fa 	bhi.w	45b8 <__udivmoddi4+0x2d0>
    43c4:	1a84      	subs	r4, r0, r2
    43c6:	eb65 0503 	sbc.w	r5, r5, r3
    43ca:	2001      	movs	r0, #1
    43cc:	46ac      	mov	ip, r5
    43ce:	2e00      	cmp	r6, #0
    43d0:	d03f      	beq.n	4452 <__udivmoddi4+0x16a>
    43d2:	e886 1010 	stmia.w	r6, {r4, ip}
    43d6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    43da:	b912      	cbnz	r2, 43e2 <__udivmoddi4+0xfa>
    43dc:	2701      	movs	r7, #1
    43de:	fbb7 f7f2 	udiv	r7, r7, r2
    43e2:	fab7 fe87 	clz	lr, r7
    43e6:	f1be 0f00 	cmp.w	lr, #0
    43ea:	d134      	bne.n	4456 <__udivmoddi4+0x16e>
    43ec:	1beb      	subs	r3, r5, r7
    43ee:	0c3a      	lsrs	r2, r7, #16
    43f0:	fa1f fc87 	uxth.w	ip, r7
    43f4:	2101      	movs	r1, #1
    43f6:	fbb3 f8f2 	udiv	r8, r3, r2
    43fa:	0c25      	lsrs	r5, r4, #16
    43fc:	fb02 3318 	mls	r3, r2, r8, r3
    4400:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
    4404:	fb0c f308 	mul.w	r3, ip, r8
    4408:	42ab      	cmp	r3, r5
    440a:	d907      	bls.n	441c <__udivmoddi4+0x134>
    440c:	19ed      	adds	r5, r5, r7
    440e:	f108 30ff 	add.w	r0, r8, #4294967295
    4412:	d202      	bcs.n	441a <__udivmoddi4+0x132>
    4414:	42ab      	cmp	r3, r5
    4416:	f200 80d1 	bhi.w	45bc <__udivmoddi4+0x2d4>
    441a:	4680      	mov	r8, r0
    441c:	1aed      	subs	r5, r5, r3
    441e:	b2a3      	uxth	r3, r4
    4420:	fbb5 f0f2 	udiv	r0, r5, r2
    4424:	fb02 5510 	mls	r5, r2, r0, r5
    4428:	ea43 4405 	orr.w	r4, r3, r5, lsl #16
    442c:	fb0c fc00 	mul.w	ip, ip, r0
    4430:	45a4      	cmp	ip, r4
    4432:	d907      	bls.n	4444 <__udivmoddi4+0x15c>
    4434:	19e4      	adds	r4, r4, r7
    4436:	f100 33ff 	add.w	r3, r0, #4294967295
    443a:	d202      	bcs.n	4442 <__udivmoddi4+0x15a>
    443c:	45a4      	cmp	ip, r4
    443e:	f200 80b8 	bhi.w	45b2 <__udivmoddi4+0x2ca>
    4442:	4618      	mov	r0, r3
    4444:	eba4 040c 	sub.w	r4, r4, ip
    4448:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
    444c:	e79d      	b.n	438a <__udivmoddi4+0xa2>
    444e:	4631      	mov	r1, r6
    4450:	4630      	mov	r0, r6
    4452:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    4456:	f1ce 0420 	rsb	r4, lr, #32
    445a:	fa05 f30e 	lsl.w	r3, r5, lr
    445e:	fa07 f70e 	lsl.w	r7, r7, lr
    4462:	fa20 f804 	lsr.w	r8, r0, r4
    4466:	0c3a      	lsrs	r2, r7, #16
    4468:	fa25 f404 	lsr.w	r4, r5, r4
    446c:	ea48 0803 	orr.w	r8, r8, r3
    4470:	fbb4 f1f2 	udiv	r1, r4, r2
    4474:	ea4f 4518 	mov.w	r5, r8, lsr #16
    4478:	fb02 4411 	mls	r4, r2, r1, r4
    447c:	fa1f fc87 	uxth.w	ip, r7
    4480:	ea45 4504 	orr.w	r5, r5, r4, lsl #16
    4484:	fb01 f30c 	mul.w	r3, r1, ip
    4488:	42ab      	cmp	r3, r5
    448a:	fa00 f40e 	lsl.w	r4, r0, lr
    448e:	d909      	bls.n	44a4 <__udivmoddi4+0x1bc>
    4490:	19ed      	adds	r5, r5, r7
    4492:	f101 30ff 	add.w	r0, r1, #4294967295
    4496:	f080 808a 	bcs.w	45ae <__udivmoddi4+0x2c6>
    449a:	42ab      	cmp	r3, r5
    449c:	f240 8087 	bls.w	45ae <__udivmoddi4+0x2c6>
    44a0:	3902      	subs	r1, #2
    44a2:	443d      	add	r5, r7
    44a4:	1aeb      	subs	r3, r5, r3
    44a6:	fa1f f588 	uxth.w	r5, r8
    44aa:	fbb3 f0f2 	udiv	r0, r3, r2
    44ae:	fb02 3310 	mls	r3, r2, r0, r3
    44b2:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
    44b6:	fb00 f30c 	mul.w	r3, r0, ip
    44ba:	42ab      	cmp	r3, r5
    44bc:	d907      	bls.n	44ce <__udivmoddi4+0x1e6>
    44be:	19ed      	adds	r5, r5, r7
    44c0:	f100 38ff 	add.w	r8, r0, #4294967295
    44c4:	d26f      	bcs.n	45a6 <__udivmoddi4+0x2be>
    44c6:	42ab      	cmp	r3, r5
    44c8:	d96d      	bls.n	45a6 <__udivmoddi4+0x2be>
    44ca:	3802      	subs	r0, #2
    44cc:	443d      	add	r5, r7
    44ce:	1aeb      	subs	r3, r5, r3
    44d0:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
    44d4:	e78f      	b.n	43f6 <__udivmoddi4+0x10e>
    44d6:	f1c1 0720 	rsb	r7, r1, #32
    44da:	fa22 f807 	lsr.w	r8, r2, r7
    44de:	408b      	lsls	r3, r1
    44e0:	fa05 f401 	lsl.w	r4, r5, r1
    44e4:	ea48 0303 	orr.w	r3, r8, r3
    44e8:	fa20 fe07 	lsr.w	lr, r0, r7
    44ec:	ea4f 4c13 	mov.w	ip, r3, lsr #16
    44f0:	40fd      	lsrs	r5, r7
    44f2:	ea4e 0e04 	orr.w	lr, lr, r4
    44f6:	fbb5 f9fc 	udiv	r9, r5, ip
    44fa:	ea4f 441e 	mov.w	r4, lr, lsr #16
    44fe:	fb0c 5519 	mls	r5, ip, r9, r5
    4502:	fa1f f883 	uxth.w	r8, r3
    4506:	ea44 4505 	orr.w	r5, r4, r5, lsl #16
    450a:	fb09 f408 	mul.w	r4, r9, r8
    450e:	42ac      	cmp	r4, r5
    4510:	fa02 f201 	lsl.w	r2, r2, r1
    4514:	fa00 fa01 	lsl.w	sl, r0, r1
    4518:	d908      	bls.n	452c <__udivmoddi4+0x244>
    451a:	18ed      	adds	r5, r5, r3
    451c:	f109 30ff 	add.w	r0, r9, #4294967295
    4520:	d243      	bcs.n	45aa <__udivmoddi4+0x2c2>
    4522:	42ac      	cmp	r4, r5
    4524:	d941      	bls.n	45aa <__udivmoddi4+0x2c2>
    4526:	f1a9 0902 	sub.w	r9, r9, #2
    452a:	441d      	add	r5, r3
    452c:	1b2d      	subs	r5, r5, r4
    452e:	fa1f fe8e 	uxth.w	lr, lr
    4532:	fbb5 f0fc 	udiv	r0, r5, ip
    4536:	fb0c 5510 	mls	r5, ip, r0, r5
    453a:	ea4e 4405 	orr.w	r4, lr, r5, lsl #16
    453e:	fb00 f808 	mul.w	r8, r0, r8
    4542:	45a0      	cmp	r8, r4
    4544:	d907      	bls.n	4556 <__udivmoddi4+0x26e>
    4546:	18e4      	adds	r4, r4, r3
    4548:	f100 35ff 	add.w	r5, r0, #4294967295
    454c:	d229      	bcs.n	45a2 <__udivmoddi4+0x2ba>
    454e:	45a0      	cmp	r8, r4
    4550:	d927      	bls.n	45a2 <__udivmoddi4+0x2ba>
    4552:	3802      	subs	r0, #2
    4554:	441c      	add	r4, r3
    4556:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
    455a:	eba4 0408 	sub.w	r4, r4, r8
    455e:	fba0 8902 	umull	r8, r9, r0, r2
    4562:	454c      	cmp	r4, r9
    4564:	46c6      	mov	lr, r8
    4566:	464d      	mov	r5, r9
    4568:	d315      	bcc.n	4596 <__udivmoddi4+0x2ae>
    456a:	d012      	beq.n	4592 <__udivmoddi4+0x2aa>
    456c:	b156      	cbz	r6, 4584 <__udivmoddi4+0x29c>
    456e:	ebba 030e 	subs.w	r3, sl, lr
    4572:	eb64 0405 	sbc.w	r4, r4, r5
    4576:	fa04 f707 	lsl.w	r7, r4, r7
    457a:	40cb      	lsrs	r3, r1
    457c:	431f      	orrs	r7, r3
    457e:	40cc      	lsrs	r4, r1
    4580:	6037      	str	r7, [r6, #0]
    4582:	6074      	str	r4, [r6, #4]
    4584:	2100      	movs	r1, #0
    4586:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
    458a:	4618      	mov	r0, r3
    458c:	e6f8      	b.n	4380 <__udivmoddi4+0x98>
    458e:	4690      	mov	r8, r2
    4590:	e6e0      	b.n	4354 <__udivmoddi4+0x6c>
    4592:	45c2      	cmp	sl, r8
    4594:	d2ea      	bcs.n	456c <__udivmoddi4+0x284>
    4596:	ebb8 0e02 	subs.w	lr, r8, r2
    459a:	eb69 0503 	sbc.w	r5, r9, r3
    459e:	3801      	subs	r0, #1
    45a0:	e7e4      	b.n	456c <__udivmoddi4+0x284>
    45a2:	4628      	mov	r0, r5
    45a4:	e7d7      	b.n	4556 <__udivmoddi4+0x26e>
    45a6:	4640      	mov	r0, r8
    45a8:	e791      	b.n	44ce <__udivmoddi4+0x1e6>
    45aa:	4681      	mov	r9, r0
    45ac:	e7be      	b.n	452c <__udivmoddi4+0x244>
    45ae:	4601      	mov	r1, r0
    45b0:	e778      	b.n	44a4 <__udivmoddi4+0x1bc>
    45b2:	3802      	subs	r0, #2
    45b4:	443c      	add	r4, r7
    45b6:	e745      	b.n	4444 <__udivmoddi4+0x15c>
    45b8:	4608      	mov	r0, r1
    45ba:	e708      	b.n	43ce <__udivmoddi4+0xe6>
    45bc:	f1a8 0802 	sub.w	r8, r8, #2
    45c0:	443d      	add	r5, r7
    45c2:	e72b      	b.n	441c <__udivmoddi4+0x134>

000045c4 <__aeabi_idiv0>:
    45c4:	4770      	bx	lr
    45c6:	bf00      	nop
    45c8:	54202d2d 	.word	0x54202d2d
    45cc:	61632043 	.word	0x61632043
    45d0:	72757470 	.word	0x72757470
    45d4:	61772065 	.word	0x61772065
    45d8:	6f666576 	.word	0x6f666576
    45dc:	45206d72 	.word	0x45206d72
    45e0:	706d6178 	.word	0x706d6178
    45e4:	2d20656c 	.word	0x2d20656c
    45e8:	000a0d2d 	.word	0x000a0d2d
    45ec:	344d4153 	.word	0x344d4153
    45f0:	7058204c 	.word	0x7058204c
    45f4:	6e69616c 	.word	0x6e69616c
    45f8:	50206465 	.word	0x50206465
    45fc:	00006f72 	.word	0x00006f72
    4600:	25202d2d 	.word	0x25202d2d
    4604:	000d0a73 	.word	0x000d0a73
    4608:	343a3931 	.word	0x343a3931
    460c:	33313a39 	.word	0x33313a39
    4610:	00000000 	.word	0x00000000
    4614:	20636544 	.word	0x20636544
    4618:	32203133 	.word	0x32203133
    461c:	00373130 	.word	0x00373130
    4620:	43202d2d 	.word	0x43202d2d
    4624:	69706d6f 	.word	0x69706d6f
    4628:	3a64656c 	.word	0x3a64656c
    462c:	20732520 	.word	0x20732520
    4630:	2d207325 	.word	0x2d207325
    4634:	000d0a2d 	.word	0x000d0a2d
    4638:	666e6f43 	.word	0x666e6f43
    463c:	72756769 	.word	0x72756769
    4640:	43542065 	.word	0x43542065
    4644:	63206425 	.word	0x63206425
    4648:	6e6e6168 	.word	0x6e6e6168
    464c:	25206c65 	.word	0x25206c65
    4650:	73612064 	.word	0x73612064
    4654:	76617720 	.word	0x76617720
    4658:	726f6665 	.word	0x726f6665
    465c:	706f206d 	.word	0x706f206d
    4660:	74617265 	.word	0x74617265
    4664:	20676e69 	.word	0x20676e69
    4668:	65646f6d 	.word	0x65646f6d
    466c:	000d0a20 	.word	0x000d0a20
    4670:	72617453 	.word	0x72617453
    4674:	61772074 	.word	0x61772074
    4678:	6f666576 	.word	0x6f666576
    467c:	203a6d72 	.word	0x203a6d72
    4680:	71657246 	.word	0x71657246
    4684:	636e6575 	.word	0x636e6575
    4688:	203d2079 	.word	0x203d2079
    468c:	48206425 	.word	0x48206425
    4690:	75442c7a 	.word	0x75442c7a
    4694:	43207974 	.word	0x43207974
    4698:	656c6379 	.word	0x656c6379
    469c:	25203d20 	.word	0x25203d20
    46a0:	25256432 	.word	0x25256432
    46a4:	00000d0a 	.word	0x00000d0a
    46a8:	666e6f43 	.word	0x666e6f43
    46ac:	72756769 	.word	0x72756769
    46b0:	43542065 	.word	0x43542065
    46b4:	63206425 	.word	0x63206425
    46b8:	6e6e6168 	.word	0x6e6e6168
    46bc:	25206c65 	.word	0x25206c65
    46c0:	73612064 	.word	0x73612064
    46c4:	70616320 	.word	0x70616320
    46c8:	65727574 	.word	0x65727574
    46cc:	65706f20 	.word	0x65706f20
    46d0:	69746172 	.word	0x69746172
    46d4:	6d20676e 	.word	0x6d20676e
    46d8:	2065646f 	.word	0x2065646f
    46dc:	00000d0a 	.word	0x00000d0a
    46e0:	495b0a0d 	.word	0x495b0a0d
    46e4:	5d4f464e 	.word	0x5d4f464e
    46e8:	616f4220 	.word	0x616f4220
    46ec:	69206472 	.word	0x69206472
    46f0:	6974696e 	.word	0x6974696e
    46f4:	7a696c61 	.word	0x7a696c61
    46f8:	6f697461 	.word	0x6f697461
    46fc:	6f63206e 	.word	0x6f63206e
    4700:	656c706d 	.word	0x656c706d
    4704:	0a0d6574 	.word	0x0a0d6574
    4708:	00000000 	.word	0x00000000
    470c:	75520a0d 	.word	0x75520a0d
    4710:	616d206e 	.word	0x616d206e
    4714:	6c206e69 	.word	0x6c206e69
    4718:	20706f6f 	.word	0x20706f6f
    471c:	0a0d6425 	.word	0x0a0d6425
    4720:	00000000 	.word	0x00000000

00004724 <_global_impure_ptr>:
    4724:	20000038 33323130 37363534 42413938     8.. 0123456789AB
    4734:	46454443 00000000 33323130 37363534     CDEF....01234567
    4744:	62613938 66656463 00000000 6c756e28     89abcdef....(nul
    4754:	0000296c                                l)..

00004758 <blanks.7217>:
    4758:	20202020 20202020 20202020 20202020                     

00004768 <zeroes.7218>:
    4768:	30303030 30303030 30303030 30303030     0000000000000000
    4778:	00000043 49534f50 00000058 0000002e     C...POSIX.......

00004788 <_ctype_>:
    4788:	20202000 20202020 28282020 20282828     .         ((((( 
    4798:	20202020 20202020 20202020 20202020                     
    47a8:	10108820 10101010 10101010 10101010      ...............
    47b8:	04040410 04040404 10040404 10101010     ................
    47c8:	41411010 41414141 01010101 01010101     ..AAAAAA........
    47d8:	01010101 01010101 01010101 10101010     ................
    47e8:	42421010 42424242 02020202 02020202     ..BBBBBB........
    47f8:	02020202 02020202 02020202 10101010     ................
    4808:	00000020 00000000 00000000 00000000      ...............
	...

0000488c <_init>:
    488c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    488e:	bf00      	nop
    4890:	bcf8      	pop	{r3, r4, r5, r6, r7}
    4892:	bc08      	pop	{r3}
    4894:	469e      	mov	lr, r3
    4896:	4770      	bx	lr

00004898 <__init_array_start>:
    4898:	00002761 	.word	0x00002761

0000489c <__frame_dummy_init_array_entry>:
    489c:	000001a5                                ....

000048a0 <_fini>:
    48a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    48a2:	bf00      	nop
    48a4:	bcf8      	pop	{r3, r4, r5, r6, r7}
    48a6:	bc08      	pop	{r3}
    48a8:	469e      	mov	lr, r3
    48aa:	4770      	bx	lr

000048ac <__fini_array_start>:
    48ac:	00000181 	.word	0x00000181

Disassembly of section .relocate:

20000000 <bpm_ps_no_halt_exec>:
	BPM_UNLOCK(PMCON);
20000000:	4a07      	ldr	r2, [pc, #28]	; (20000020 <bpm_ps_no_halt_exec+0x20>)
20000002:	4b08      	ldr	r3, [pc, #32]	; (20000024 <bpm_ps_no_halt_exec+0x24>)
20000004:	619a      	str	r2, [r3, #24]
	bpm->BPM_PMCON = pmcon;
20000006:	61c1      	str	r1, [r0, #28]
		b_psok = (BPM->BPM_SR & BPM_SR_PSOK);
20000008:	4619      	mov	r1, r3
		b_timeout = (SysTick->CTRL & SysTick_CTRL_COUNTFLAG_Msk);
2000000a:	4a07      	ldr	r2, [pc, #28]	; (20000028 <bpm_ps_no_halt_exec+0x28>)
		b_psok = (BPM->BPM_SR & BPM_SR_PSOK);
2000000c:	6948      	ldr	r0, [r1, #20]
		b_timeout = (SysTick->CTRL & SysTick_CTRL_COUNTFLAG_Msk);
2000000e:	6813      	ldr	r3, [r2, #0]
20000010:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
	} while (!b_psok && !b_timeout);
20000014:	f010 0001 	ands.w	r0, r0, #1
20000018:	d101      	bne.n	2000001e <bpm_ps_no_halt_exec+0x1e>
2000001a:	2b00      	cmp	r3, #0
2000001c:	d0f6      	beq.n	2000000c <bpm_ps_no_halt_exec+0xc>
}
2000001e:	4770      	bx	lr
20000020:	aa00001c 	.word	0xaa00001c
20000024:	400f0000 	.word	0x400f0000
20000028:	e000e010 	.word	0xe000e010

2000002c <g_interrupt_enabled>:
2000002c:	00000001                                ....

20000030 <_impure_ptr>:
20000030:	20000038 00000000                       8.. ....

20000038 <impure_data>:
20000038:	00000000 20000324 2000038c 200003f4     ....$.. ... ... 
	...
200000e0:	00000001 00000000 abcd330e e66d1234     .........3..4.m.
200000f0:	0005deec 0000000b 00000000 00000000     ................
	...

20000460 <__atexit_recursive_mutex>:
20000460:	20000a48                                H.. 

20000464 <__global_locale>:
20000464:	00000043 00000000 00000000 00000000     C...............
	...
20000484:	00000043 00000000 00000000 00000000     C...............
	...
200004a4:	00000043 00000000 00000000 00000000     C...............
	...
200004c4:	00000043 00000000 00000000 00000000     C...............
	...
200004e4:	00000043 00000000 00000000 00000000     C...............
	...
20000504:	00000043 00000000 00000000 00000000     C...............
	...
20000524:	00000043 00000000 00000000 00000000     C...............
	...
20000544:	00004021 00003759 00000000 00004788     !@..Y7.......G..
20000554:	00004784 00004720 00004720 00004720     .G.. G.. G.. G..
20000564:	00004720 00004720 00004720 00004720      G.. G.. G.. G..
20000574:	00004720 00004720 ffffffff ffffffff      G.. G..........
20000584:	ffffffff 0000ffff 53410001 00494943     ..........ASCII.
	...
200005ac:	53410000 00494943 00000000 00000000     ..ASCII.........
	...

200005d0 <__malloc_av_>:
	...
200005d8:	200005d0 200005d0 200005d8 200005d8     ... ... ... ... 
200005e8:	200005e0 200005e0 200005e8 200005e8     ... ... ... ... 
200005f8:	200005f0 200005f0 200005f8 200005f8     ... ... ... ... 
20000608:	20000600 20000600 20000608 20000608     ... ... ... ... 
20000618:	20000610 20000610 20000618 20000618     ... ... ... ... 
20000628:	20000620 20000620 20000628 20000628      ..  .. (.. (.. 
20000638:	20000630 20000630 20000638 20000638     0.. 0.. 8.. 8.. 
20000648:	20000640 20000640 20000648 20000648     @.. @.. H.. H.. 
20000658:	20000650 20000650 20000658 20000658     P.. P.. X.. X.. 
20000668:	20000660 20000660 20000668 20000668     `.. `.. h.. h.. 
20000678:	20000670 20000670 20000678 20000678     p.. p.. x.. x.. 
20000688:	20000680 20000680 20000688 20000688     ... ... ... ... 
20000698:	20000690 20000690 20000698 20000698     ... ... ... ... 
200006a8:	200006a0 200006a0 200006a8 200006a8     ... ... ... ... 
200006b8:	200006b0 200006b0 200006b8 200006b8     ... ... ... ... 
200006c8:	200006c0 200006c0 200006c8 200006c8     ... ... ... ... 
200006d8:	200006d0 200006d0 200006d8 200006d8     ... ... ... ... 
200006e8:	200006e0 200006e0 200006e8 200006e8     ... ... ... ... 
200006f8:	200006f0 200006f0 200006f8 200006f8     ... ... ... ... 
20000708:	20000700 20000700 20000708 20000708     ... ... ... ... 
20000718:	20000710 20000710 20000718 20000718     ... ... ... ... 
20000728:	20000720 20000720 20000728 20000728      ..  .. (.. (.. 
20000738:	20000730 20000730 20000738 20000738     0.. 0.. 8.. 8.. 
20000748:	20000740 20000740 20000748 20000748     @.. @.. H.. H.. 
20000758:	20000750 20000750 20000758 20000758     P.. P.. X.. X.. 
20000768:	20000760 20000760 20000768 20000768     `.. `.. h.. h.. 
20000778:	20000770 20000770 20000778 20000778     p.. p.. x.. x.. 
20000788:	20000780 20000780 20000788 20000788     ... ... ... ... 
20000798:	20000790 20000790 20000798 20000798     ... ... ... ... 
200007a8:	200007a0 200007a0 200007a8 200007a8     ... ... ... ... 
200007b8:	200007b0 200007b0 200007b8 200007b8     ... ... ... ... 
200007c8:	200007c0 200007c0 200007c8 200007c8     ... ... ... ... 
200007d8:	200007d0 200007d0 200007d8 200007d8     ... ... ... ... 
200007e8:	200007e0 200007e0 200007e8 200007e8     ... ... ... ... 
200007f8:	200007f0 200007f0 200007f8 200007f8     ... ... ... ... 
20000808:	20000800 20000800 20000808 20000808     ... ... ... ... 
20000818:	20000810 20000810 20000818 20000818     ... ... ... ... 
20000828:	20000820 20000820 20000828 20000828      ..  .. (.. (.. 
20000838:	20000830 20000830 20000838 20000838     0.. 0.. 8.. 8.. 
20000848:	20000840 20000840 20000848 20000848     @.. @.. H.. H.. 
20000858:	20000850 20000850 20000858 20000858     P.. P.. X.. X.. 
20000868:	20000860 20000860 20000868 20000868     `.. `.. h.. h.. 
20000878:	20000870 20000870 20000878 20000878     p.. p.. x.. x.. 
20000888:	20000880 20000880 20000888 20000888     ... ... ... ... 
20000898:	20000890 20000890 20000898 20000898     ... ... ... ... 
200008a8:	200008a0 200008a0 200008a8 200008a8     ... ... ... ... 
200008b8:	200008b0 200008b0 200008b8 200008b8     ... ... ... ... 
200008c8:	200008c0 200008c0 200008c8 200008c8     ... ... ... ... 
200008d8:	200008d0 200008d0 200008d8 200008d8     ... ... ... ... 
200008e8:	200008e0 200008e0 200008e8 200008e8     ... ... ... ... 
200008f8:	200008f0 200008f0 200008f8 200008f8     ... ... ... ... 
20000908:	20000900 20000900 20000908 20000908     ... ... ... ... 
20000918:	20000910 20000910 20000918 20000918     ... ... ... ... 
20000928:	20000920 20000920 20000928 20000928      ..  .. (.. (.. 
20000938:	20000930 20000930 20000938 20000938     0.. 0.. 8.. 8.. 
20000948:	20000940 20000940 20000948 20000948     @.. @.. H.. H.. 
20000958:	20000950 20000950 20000958 20000958     P.. P.. X.. X.. 
20000968:	20000960 20000960 20000968 20000968     `.. `.. h.. h.. 
20000978:	20000970 20000970 20000978 20000978     p.. p.. x.. x.. 
20000988:	20000980 20000980 20000988 20000988     ... ... ... ... 
20000998:	20000990 20000990 20000998 20000998     ... ... ... ... 
200009a8:	200009a0 200009a0 200009a8 200009a8     ... ... ... ... 
200009b8:	200009b0 200009b0 200009b8 200009b8     ... ... ... ... 
200009c8:	200009c0 200009c0 200009c8 200009c8     ... ... ... ... 

200009d8 <__malloc_sbrk_base>:
200009d8:	ffffffff                                ....

200009dc <__malloc_trim_threshold>:
200009dc:	00020000                                ....
